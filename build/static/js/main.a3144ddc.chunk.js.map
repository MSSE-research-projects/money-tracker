{"version":3,"sources":["components/Logo/logo.svg","entities/Account.ts","actions/settings.js","entities/Currency.ts","selectors/settings.js","components/CollapsibleSection/index.js","entities/EntityMap.js","entities/Transaction.ts","util/sortByName.js","selectors/entities/accounts.js","components/Amount.js","containers/Dashboard/NetWorth.js","components/Account/List/AccountItem.js","components/Account/List/Group.js","components/Account/List/index.js","containers/Dashboard/Accounts.js","util/timezone.ts","components/types.js","components/Transaction/Form/Header.js","components/Transaction/Form/Account.js","components/Transaction/Form/index.js","selectors/entities/tags.js","actions/entities/transactions.js","actions/entities/tags.js","actions/ui/form/transaction.js","containers/Transactions/Form.js","components/Transaction/List/TransactionItem.js","components/Transaction/List/ModalForm.js","components/Transaction/List/index.js","selectors/ui/transaction/filter.js","selectors/entities/transactions.js","selectors/ui/form/transaction.js","containers/Dashboard/RecentTransactions.js","actions/entities/accounts.js","tracking/wrapper/wait.js","containers/Dashboard/index.js","containers/Transactions/List.js","components/Transaction/Filter/Calendar.js","entities/Transaction/DateFilterRange.ts","components/Transaction/Filter/Filters.js","components/Transaction/Filter/AppliedFilters.js","components/Transaction/Filter/index.js","actions/ui/transaction/filter.js","containers/Transactions/Filter.js","components/Transaction/List/Pager.js","containers/Transactions/Pager.js","components/Transaction/List/Footer.js","containers/Transactions/Footer.js","containers/Transactions/index.js","actions/ui/form/account.js","selectors/ui/form/account.js","components/Account/ModalForm/DeleteStrategy.js","components/Account/ModalForm/index.js","containers/Accounts/List.js","components/Account/Form/BalanceTable.js","components/Account/Form/index.js","containers/Accounts/Form.js","containers/Accounts/index.js","actions/ui/report.js","entities/Report/ExpenseIncomeData.ts","entities/Report.ts","entities/Report/NetWorthData.ts","entities/Report/ExpenseTagsData.ts","components/Report/Kind/ExpenseIncome.js","components/Report/Kind/NetIncome.js","components/Report/Kind/ExpenseTags.js","components/Report/Kind/NetWorth.js","components/Report/index.js","components/Report/Navigation.js","selectors/ui/report.js","containers/Reports/Navigation.js","components/Report/Filter.js","containers/Reports/Filter.js","containers/Reports/index.js","components/Settings/Currency/Input.js","containers/Settings/Currency/Input.js","components/Settings/Currency/ExchangeRateGrid.js","components/Settings/Currency/ExchangeRateTable.js","components/Settings/Currency/ExchangeRate.js","containers/Settings/Currency/ExchangeRate.js","util/storage/pouchdb.js","util/storage/transactions.js","components/DataExport/index.js","actions/ui/dataExport.js","containers/Settings/DataExport.js","util/PrettyBytes.js","components/DataImport/index.js","actions/ui/dataImport.js","selectors/ui/dataImport.js","containers/Settings/DataImport.js","features/user/state/ui/SignOut.action.ts","features/user/state/User.selector.ts","containers/Settings/User.js","router/routes.js","containers/WorkInProgress.js","containers/Settings/index.js","features/user/state/ui/SignIn.action.ts","features/user/components/SignIn/SignIn.tsx","features/user/containers/SignIn/SignIn.ts","containers/InitialSetup/index.js","containers/SidebarMenu.js","components/Logo/index.js","actions/ui/sidebar.js","actions/ui/sync.js","components/Header/index.js","containers/DemoNotice.js","actions/ui/windowResize.js","actions/app.js","containers/App.js","components/Sentry/ErrorBoundary.js","containers/Root.js","registerServiceWorker.js","reducers/entities/accounts.js","reducers/entities/tags.js","reducers/entities/transactions/filter.js","reducers/entities/transactions/recent.js","reducers/entities/transactions/index.js","reducers/entities/index.js","reducers/ui/form/account.js","reducers/ui/form/transaction.js","reducers/ui/form/index.js","reducers/ui/report/index.js","reducers/ui/transaction/filter.js","reducers/ui/transaction/index.js","reducers/ui/dataImport.js","reducers/ui/isMobile.js","reducers/ui/isSidebarOpen.js","reducers/ui/settings.js","reducers/ui/sync.js","reducers/ui/index.js","reducers/settings.js","features/user/state/User.action.ts","features/user/state/ui/SignIn.reducer.ts","util/auth.js","features/user/state/ui/SignIn.selector.ts","entities/Transaction/AccountMutations.ts","util/storage/tags.js","util/SetDifference.js","sagas/tags.js","sagas/transactions.js","util/storage/accounts.js","sagas/accounts.js","sagas/sync.js","util/currency.js","util/storage/settings.js","sagas/settings.js","features/user/state/User.saga.ts","features/user/state/ui/SignIn.saga.ts","features/user/state/ui/SignOut.saga.ts","features/user/state/ui/index.ts","features/user/state/ui/SignOut.reducer.ts","features/user/state/User.reducer.ts","reducers/index.ts","sagas/bootstrap.js","util/CsvReader.js","sagas/dataImport.js","sagas/report.js","features/user/state/index.ts","sagas/index.ts","store/configureStore.js","tracking/trackingMiddleware.js","tracking/listeners/eventListener.js","tracking/listeners/index.js","tracking/configureTracker.js","index.js"],"names":["module","exports","__webpack_require__","p","AccountGroupT","DeleteStrategyT","createActions","loadSettingsSuccess","changeSettingsCurrency","updateExchangeRate","updateExchangeRateSuccess","updateExchangeRateFailure","toggleSectionCollapse","completeSetup","CURRENCY","AED","name","symbol","exp","flag","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BYR","BZD","CAD","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SLL","SOS","SRD","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","YER","ZAR","ZMW","ZWD","XAU","Currency","defaultBase","options","Object","keys","map","code","key","value","text","concat","minAmount","Number","numberToCents","Math","round","parseFloat","centsToNumber","centsToString","format","arguments","length","undefined","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","toString","centsToDollar","convert","rate","from","to","pow","getExchangeRate","state","settings","exchangeRate","getBaseCurrency","currency","base","getBaseCurrencySymbol","getSecondaryCurrency","secondary","getCollapsedSections","collapsedSections","connect","ownProps","objectSpread","collapsed","toggle","_ref","label","LabelComponent","children","react_default","a","createElement","className","includes","onClick","Icon","GroupToTextMap","_GroupToTextMap","defineProperty","Cash","Bank","Deposit","Credit","Asset","defaultGroup","defaultDeleteStrategy","Archive","getGroupName","formTostate","_ref3","id","balance","group","currencies","on_dashboard","archived","Date","now","reduce","acc","stateToForm","account","storageToState","_ref4","_id","stateToStorage","_ref5","TransationKindT","EntityMap","fromArray","entities","keyPropName","merge","byKey","source","entity","toConsumableArray","Set","filter","set","remove","originalKey","get","fallback","fn","limit","offset","slice","push","apply","sortByName","b","getAccountsMap","accounts","getAccountByName","createSelector","getAccountsList","find","sort","getVisibleAccountsList","getDashboardAccountsList","getAccountsNameMap","getAccountsCurrencyMap","getAccountsCurrencyList","groupAccounts","grouped","total","getBaseTotal","_arr","_i","getVisibleGroupedAccounts","getDashboardGroupedAccounts","getAccountsAsOptions","groups","_arr2","_i2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","description","err","return","getNetWorth","netWorth","floor","Amount","_ref$showColor","showColor","_ref$showCents","showCents","baseCurrency","components_Amount","AccountItem","handleEditClick","_this","props","openAccountInModal","_this2","this","Link","Button","basic","circular","icon","React","Component","Group","isCollapsed","toggleGroupCollapse","List_AccountItem","AccountsWidget","List_Group","collapsedGroups","AccountsList","getTimezoneOffset","toUtcTimestamp","date","getTime","toLocalTimestamp","Expense","Transfer","Income","TransactionKindToText","_TransactionKindToTex","defaultKind","recentListLimit","getKindLabel","kind","formToState","form","tags","amount","linkedAmount","linkedCurrency","note","accountId","linkedAccountId","Error","dateRegexMatch","match","parseInt","_ref2","PropTypes","shape","string","Header","withTransfer","activeKind","changeKind","kinds","Menu","attached","widths","Item","color","active","Account","Form","Field","width","Dropdown","selection","accountOptions","onChange","onAccountChange","Input_Input","required","type","min","step","onAmountChange","labelPosition","currencyOptions","onCurrencyChange","NoAccounts","TransactionForm","searchQuery","onSubmit","event","preventDefault","saveTransaction","handler","_","accountCurrency","onTagAdd","addTag","tag","onTagSearchChange","setState","onTagClose","getCurrencyOptions","getGridClassName","Fragment","Form_Header","Segment","Form_Account","changeAccount","changeAmount","changeCurrency","changeLinkedAccount","changeLinkedAmount","changeLinkedCurrency","multiple","search","allowAdditions","closeOnChange","placeholder","tagsOptions","changeTags","onAddItem","onClose","onSearchChange","changeNote","fluid","changeDate","primary","disabled","Form_NoAccounts","getTagOptions","ui","transaction","getAllTagsOptions","loadFilterTransactions","loadFilterTransactionsSuccess","loadRecentTransactions","loadRecentTransactionsSuccess","saveTransactionSuccess","removeTransaction","removeTransactionSuccess","loadTags","loadExpenseTagsSuccess","loadIncomeTagsSuccess","fillInTransactionForm","resetTransactionForm","openTransactionInModal","TransactionItem","_tags","accountName","renderArrow","linkedAccountName","Label","content","renderLinkedAmount","_this$props$transacti","_this$props$transacti2","ModalForm","Modal","closeIcon","size","open","isOpen","elements_Header_Header","isEdit","Content","EditForm","Actions","negative","currentTransactionId","TransactionList","renderTransaction","List_TransactionItem","Dimmer","inverted","isLoading","Loader","inline","transactions","List_ModalForm","isModalOpen","getDateLabel","dateStart","dateEnd","getFilters","start","end","applied","getPage","page","getVisiblePages","ceil","totalRows","perPage","isMobile","current","last","pages","max","windowRight","filterTransactionsSelector","getRecentTransactions","recent","joinAccount","getFilterTransactions","linked","getFilterTotal","tx","getForm","getDefaultAccountId","getDefaultCurrency","getDefaultLinkedAccountId","defaultAccountId","getDefaultLinkedCurrency","getDefaultState","loadAccounts","loadAccountsSuccess","saveAccount","saveAccountFailure","saveAccountSuccess","updateAccount","removeAccount","removeAccountRequest","removeAccountStart","removeAccountItemProcessed","removeAccountFailure","removeAccountSuccess","saveWaitTime","totalWaitTime","localStorage","getItem","numberOfWaits","isNaN","entries","performance","getEntries","currentWait","forEach","entry","duration","console","log","setItem","Dashboard","Grid","Row","Column","computer","mobile","src_components_CollapsibleSection","NetWorth","Dashboard_Accounts","Transactions_Form","RecentTransactions","currentYear","getFullYear","fromMonth","toMonth","YearMonthForm","localeUtils","months","getMonths","years","i","handleChange","e","_e$target$form","target","year","month","getMonth","DateFilterRangeT","Calendar","handleDayClick","day","range","DateUtils","addDayToRange","handleYearMonthChange","handleResetClick","handleApplyClick","_this$state","changeFilterDate","setHours","toggleFilterCalendar","_this$state2","isCalendarOpen","DayPicker_default","fixedWeeks","enableOutsideDays","numberOfMonths","selectedDays","captionElement","onDayClick","positive","Filters","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleAccountChange","handleTagsChange","applyFilters","toggleFilterModal","appliedAccounts","appliedTags","isFilterModalOpen","AppliedFilters","removeAppliedAccount","removeAppliedTag","t","accountNameMap","onRemove","daysFromToday","days","subDays","startOfToday","lastWeek","lastMonth","DateFilterRangeMap","_DateFilterRangeMap","today","endOfToday","yesterday","startOfYesterday","endOfYesterday","thisMonth","startOfMonth","custom","defaultDateFilterRange","defaultStart","defaultEnd","getDateFilterRangeEnd","Filter","slicedToArray","lastValue","handleDateRange","selectedAccount","button","defaultValue","dateRangeLabel","labeled","Filter_Calendar","Filter_Filters","Filter_AppliedFilters","changeFilterPage","Pager","handlePageChange","nextPage","handlePrevClick","handleNextClick","lastPage","pagination","as","Footer","income","expense","Table","fixed","unstackable","Body","Cell","textAlign","Transactions","params","Transactions_Filter","Transactions_List","Transactions_Pager","Transactions_Footer","fillInAccountForm","resetAccountForm","changeName","changeGroup","changeBalance","toggleCurrency","toggleOnDashboard","getModal","isDeleteRequest","isDeleteRunning","itemsToProcess","itemsProcessed","DeleteStrategy","strategy","onStrategyChange","moveTo","onProceed","getMoveTo","hasMultipleAccounts","style","marginTop","stratgies","Cleanup","Move","getDeleteStartegyOptions","Radio","checked","modal","Progress","reset","ModalForm_DeleteStrategy","renderModalActions","BalanceTable","handleCurrencyChange","handleBalanceChange","updateCurrencyList","setInitialCurrencyCheckbox","nextProps","marginBottom","Checkbox","AccountForm","handleNameChange","handleGroupChange","handleSubmit","Input","Select","Form_BalanceTable","paddingTop","Accounts","Accounts_List","Account_ModalForm","option","changeReportKind","changeReportTimespan","changeReportAccounts","changeReportExcludedTags","moveReportDateBackwards","moveReportDateForwards","loadReport","loadReportSuccess","loadReportFailure","ExpenseIncomeData","report","labels","timespan","ReportTimespanT","Yearly","setMonth","getDaysInMonth","padStart","data","Array","fill","excluded","excludeTags","period","txAmount","abs","has","series","ReportKindT","Monthly","ExpenseIncome","defaultTimespan","defaultDate","dateRange","moveDateBackwards","subYears","subMonths","moveDateForwards","addYears","addMonths","DataLoaderMap","_DataLoaderMap","ExpenseIncomeDataLoader","NetIncome","ExpenseTags","Map","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","tagAmount","sorted","values","netWorthEnd","lastPeriod","netWorthStart","loadReportData","_len","rest","_key","startFn","startOfYear","endFn","endOfYear","endOfMonth","tomorrow","setDate","getDate","axisY","labelInterpolationFnc","abbreviate","plugins","Chartist","tooltip","class","anchorToPoint","_this$props","val","Statistic","Value","sum","cur","react_chartist_dist_default","idx","nonEmptyValues","listener","draw","y","element","attr","axisX","reverseData","horizontalBars","height","showArea","low","Report","renderReportByKind","Kind_ExpenseIncome","Kind_NetWorth","Kind_ExpenseTags","Navigation","handleKindChange","handleTimespanChange","kindOptions","timespanLabel","timespanOptions","getReport","getTimespanLabel","startDate","handleAccountsChange","Reports","Reports_Navigation","src_components_Report","Reports_Filter","handleBaseChange","handleSecondaryChange","updateSecondaryOptions","secondaryOptions","renderLabel","item","ExchangeRateGrid","celled","definition","HeaderCell","other","ExchangeRateTable","toFixed","ExchangeRate","Currency_ExchangeRateTable","Currency_ExchangeRateGrid","isExchangeLoading","instancePool","instance","PouchDB","auto_compaction","remoteInstance","instanceName","userInfo","JSON","parse","couchDB","_userInfo$couchDB","username","password","skipSetup","auth","destroyInstance","destroy","settingsDB","accountsDB","transactionsDB","tagsDB","remoteSettingsDB","remoteAccountsDB","remoteTransactionsDB","remoteTagsDB","destroySettingsDB","destroyAccountsDB","destroyTransactionsDB","destroyTagsDB","storage_transactions","sync","load","then","catch","error","status","getAll","loadRecent","allDocs","include_docs","descending","startkey","endkey","response","rows","row","doc","docs","loadFiltered","filters","isArray","filterByAccount","intersection","filterByTags","save","put","_deleted","_callee2","readOnly","_args2","regenerator_default","wrap","_context2","prev","abrupt","batch_size","replicate","on","asyncToGenerator","mark","_callee","update","_context","Promise","all","processIncomingTransaction","stop","_x2","_callee3","_context3","startsWith","substr","_callee4","_context4","DataExport","handleSaveFile","TransactionsStorage","sent","stringify","Message","header","isFileSelected","saveExportFile","UNITS","DataImport","handleFileChange","openImportFile","files","handleOpenFile","fileInput","click","accept","ref","input","filename","isFinite","TypeError","neg","exponent","log10","toPrecision","prettyBytes","filesize","isProcessing","discardImportFile","Or","startDataImport","indicating","autoSuccess","linesToProcess","linesProcessed","importFileReadSuccess","importLineProcessed","importFailure","getImportFile","dataImport","file","signOut","createAction","signOutSuccess","signOutFailure","resolve","isDemoUser","user","isSignedIn","User","isSignOutComplete","Redirect","Popup","trigger","signOutButtonLabel","signOutButtonIcon","floated","loading","isSignOutRunning","isDemo","isAuthenticated","signOutState","router_routes","path","exact","component","link","Settings_Currency_Input","Settings_Currency_ExchangeRate","Settings_DataImport","Settings_DataExport","Settings_User","changeEmail","email","changeCode","sendCode","sendCodeSuccess","sendCodeFailure","verifyCode","verifyCodeSuccess","verifyCodeFailure","finishAuth","Auth","renderSendCodeForm","iconPosition","sendCodeStatus","action","renderVerifyCodeForm","verifyCodeStatus","location","hash","Divider","signIn","SignIn","InitialSetup","Accounts_Form","margin","SidebarMenu","toggleSidebar","vertical","routes","route","Route","Logo","src","logo","alt","dismissSyncWarning","setPendingChangesFlag","syncRequest","syncSuccess","syncFailure","isSyncRunning","isRunning","hasPendingChanges","src_components_Logo","cursor","DemoNotice","isVisible","href","windowResize","bootstrap","App","renderNavigationRoutes","window","pathname","endsWith","isSidebarOpen","zIndex","containers_SidebarMenu","flatten","flatRoutes","render","src_components_Header","containers_DemoNotice","addEventListener","throttle","script","document","setTimeout","instrumentation","serverUrl","scenarioId","head","appendChild","isLoaded","Router","history","Switch","isSetupComplete","ErrorBoundary","errorInfo","Sentry","scope","setExtra","Root","store","Sentry_ErrorBoundary","react_redux_es","containers_App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialState","handleActions","_handleActions","payload","combineActions","getType","_initialState","tags_handleActions","_action$payload","filter_handleActions","recent_handleActions","combineReducers","completed","Infinity","account_handleActions","isChecked","pick","_ref6","_ref7","transaction_handleActions","_ref8","_ref9","_ref10","_ref11","_ref12","report_handleActions","netWorthStack","transaction_filter_handleActions","dataImport_handleActions","message","matchMedia","matches","handleAction","settings_handleActions","sync_handleActions","isWarningVisible","reducers_settings_handleActions","section","setDemoUser","signInSuccess","auth0","WebAuth","domain","process","clientID","redirectUri","responseType","reject","passwordlessStart","connection","send","result","verificationCode","passwordlessLogin","parseHash","authResult","accessToken","getUserInfo","client","getSignInEmail","getSignInCode","getAccountsMutations","createTransaction","mutations","storage_tags","start_key","end_key","split","usage","updateUsage","delta","hasChanges","_args","docs_written","difference","left","right","diff","add","loadTagsSaga","updateTagsUsage","expenseTags","incomeTags","TagsStorage","_marked","prevTags","nextTags","newTag","oldTag","t0","finish","t1","_marked2","sagas_tags","takeLatest","resetTransactionFormSaga","loadFilterTransactionsSaga","loadRecentTransactionsSaga","removeTransactionSaga","saveTransactionSaga","updateAccountsBalance","initialData","select","transactions_marked","transactions_marked2","_marked3","_marked4","_context5","_marked5","mutation","_context6","updateAccountBalanceSaga","_marked6","sagas_transactions","storage_accounts","loadAll","archive","mutateBalance","mutateAccountBalance","rev","updateLastSyncedBalance","conflicts","resolveConflicts","lastSyncedBalance","conflictedBalances","_conflicts","resolveBalance","_x3","lastSynced","conflicted","loadAccountsSaga","saveAccountSaga","removeAccountSaga","deleteStrategyArchive","deleteStrategyCleanup","deleteStrategyMove","AccountsStorage","accounts_marked","accounts_marked2","accounts_marked3","_deleteStrategies","accounts_marked4","accounts_marked5","index","accounts_marked6","_context7","_marked7","sagas_accounts","syncSaga","setPendingChangesFlagSaga","sync_marked","sync_marked2","sagas_sync","fetchExchangeRates","pairs","fetch","join","body","json","rates","substring","storage_settings","local","defaultLocalSettings","mergeLocalWithSyncedSettings","saveLocal","defaultSettings","remote","syncSettings","synced","union","t2","t3","isEqual","t4","loadSetting","updateCurrencySaga","completeSetupSaga","saveCollapsedSectionsSaga","SettingsStorage","settings_marked","used","settings_marked2","settings_marked3","settings_marked4","sagas_settings","isUserLoggedIn","User_saga_marked","User_saga_marked2","sendCodeSaga","verifyCodeSaga","finishAuthSaga","SignIn_saga_marked","SignIn_saga_marked2","SignIn_saga_marked3","SignIn_saga","signOutSaga","SignOut_saga_marked","SignOut_saga","UserUiReducer","actions","UserUiSaga","SignInSaga","SignOutSaga","bootstrapSaga","bootstrap_marked","sagas_bootstrap","CsvReader","reader","FileReader","onerror","onload","SEPARATOR","COLUMN","line","getKind","getAccount","getAmount","getTags","NOTE","nextRow","linkedAccount","readAsText","DATE","ACCOUNT","TAGS","AMOUNT","TRANSFER","replace","trim","accountCurrencies","reverse","startDataImportSaga","updateCurrencySettings","mapAccountsId","createNewAccount","accountIdByName","lineNr","dataImport_marked","dataImport_marked2","idByName","dataImport_marked3","dataImport_marked4","sagas_dataImport","loadReportSaga","refreshReportSaga","report_marked","report_marked2","sagas_report","UserSaga","rootSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","trackingMiddleware","tracker","actionWithOrigin","assign","timestamp","moment","trackEvent","onAction","newEvent","excludeEventTypes","events","listeners","eventListener","configureStore","Tracker","trackingListeners","dsn","createStore","rootReducer","composeWithDevTools","applyMiddleware","run","configuredTracker","createBrowserHistory","ReactDOM","build","containers_Root","getElementById","URL","origin","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a3144ddc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6f8aaa78.svg\";","import Currency from 'entities/Currency';\n\ntype BalanceAsCentsT = {\n  [currency: string]: number;\n};\n\ntype BalanceAsInputStringT = {\n  [currency: string]: string;\n};\n\ninterface AccountBaseT {\n  group: AccountGroupT;\n  name: string;\n  currencies: string[];\n  on_dashboard: boolean;\n  archived?: boolean;\n}\n\nexport interface AccountStateT extends AccountBaseT {\n  id: string;\n  balance: BalanceAsCentsT;\n}\n\nexport interface AccountStorageT extends AccountBaseT {\n  _id: string;\n  _rev?: string;\n  _conflicts?: string[];\n  balance: BalanceAsCentsT;\n}\n\nexport interface AccountFormT extends AccountBaseT {\n  id?: string;\n  balance: BalanceAsInputStringT;\n  completed?: boolean;\n  isModalOpen?: boolean;\n  isDeleteRequest?: boolean;\n  isDeleteRunning?: boolean;\n  itemsToProcess?: number;\n  itemsProcessed?: number;\n}\n\nexport enum AccountGroupT {\n  Cash = 'cash',\n  Bank = 'bank',\n  Deposit = 'deposit',\n  Credit = 'credit',\n  Asset = 'asset'\n}\n\nexport enum DeleteStrategyT {\n  Archive,\n  Cleanup,\n  Move\n}\n\nconst GroupToTextMap: { [code in AccountGroupT]?: string } = {\n  [AccountGroupT.Cash]: 'Cash',\n  [AccountGroupT.Bank]: 'Bank Account',\n  [AccountGroupT.Deposit]: 'Deposit',\n  [AccountGroupT.Credit]: 'Credit',\n  [AccountGroupT.Asset]: 'Asset'\n};\n\nexport const defaultGroup = AccountGroupT.Cash;\nexport const defaultDeleteStrategy = DeleteStrategyT.Archive;\n\nexport function getGroupName(code: AccountGroupT) {\n  return GroupToTextMap[code];\n}\nexport function getAccountGroupOptions() {\n  return Object.entries(GroupToTextMap).map(([code, text]) => ({\n    key: code,\n    value: code,\n    text\n  }));\n}\n\nexport function getDeleteStartegyOptions(hasMultipleAccounts = false) {\n  const stratgies = [\n    {\n      key: DeleteStrategyT.Archive,\n      value: DeleteStrategyT.Archive,\n      text: 'Archive account, keep transactions as is'\n    },\n    {\n      key: DeleteStrategyT.Cleanup,\n      value: DeleteStrategyT.Cleanup,\n      text: 'Delete transactions with account'\n    }\n  ];\n  if (hasMultipleAccounts) {\n    stratgies.push({\n      key: DeleteStrategyT.Move,\n      value: DeleteStrategyT.Move,\n      text: 'Move transactions to another account'\n    });\n  }\n\n  return stratgies;\n}\n\nexport function formTostate({\n  id,\n  balance,\n  name,\n  group,\n  currencies,\n  on_dashboard,\n  archived\n}: AccountFormT): AccountStateT {\n  return {\n    id: id || `A${Date.now()}`,\n    balance: Object.keys(balance).reduce(\n      (acc: BalanceAsCentsT, code: string) => {\n        acc[code] = Currency.numberToCents(\n          balance[code] !== '' ? balance[code] : '0',\n          code\n        );\n        return acc;\n      },\n      {}\n    ),\n    name,\n    group,\n    currencies,\n    on_dashboard,\n    archived\n  };\n}\n\nexport function stateToForm(account: AccountStateT): AccountFormT {\n  return {\n    ...account,\n    balance: Object.keys(account.balance).reduce(\n      (acc: BalanceAsInputStringT, code: string) => {\n        acc[code] = Currency.centsToString(account.balance[code], code, false);\n        return acc;\n      },\n      {}\n    )\n  };\n}\n\nexport function storageToState({\n  _id,\n  name,\n  group,\n  balance,\n  currencies,\n  on_dashboard,\n  archived\n}: AccountStorageT): AccountStateT {\n  return {\n    id: _id,\n    name,\n    group,\n    balance,\n    currencies,\n    on_dashboard,\n    archived\n  };\n}\n\nexport function stateToStorage({\n  name,\n  group,\n  balance,\n  currencies,\n  on_dashboard,\n  archived\n}: AccountStateT) {\n  return { name, group, balance, currencies, on_dashboard, archived };\n}\n\nexport function mutateBalance(\n  account: AccountStorageT,\n  currency: string,\n  amount: number\n): AccountStorageT {\n  return {\n    ...account,\n    currencies: [...new Set([...account.currencies, currency])],\n    balance: {\n      ...account.balance,\n      [currency]: parseInt(`${account.balance[currency] || 0}`, 10) + amount\n    }\n  };\n}\n","import { createActions } from 'redux-actions';\n\nexport const {\n  loadSettingsSuccess,\n  changeSettingsCurrency,\n  updateExchangeRate,\n  updateExchangeRateSuccess,\n  updateExchangeRateFailure,\n  toggleSectionCollapse,\n  completeSetup\n} = createActions(\n  'LOAD_SETTINGS_SUCCESS',\n  'CHANGE_SETTINGS_CURRENCY',\n  'UPDATE_EXCHANGE_RATE',\n  'UPDATE_EXCHANGE_RATE_SUCCESS',\n  'UPDATE_EXCHANGE_RATE_FAILURE',\n  'COMPLETE_SETUP',\n  'TOGGLE_SECTION_COLLAPSE'\n);\n","type CurrencyT = {\n  name: string;\n  symbol: string;\n  exp: number;\n  flag?: string;\n};\n\ntype AvailableCurrencyT = {\n  [code: string]: CurrencyT;\n};\n\nconst CURRENCY: AvailableCurrencyT = {\n  AED: { name: 'Emirati Dirham', symbol: '.د.ب', exp: 2, flag: 'ae' },\n  AFN: { name: 'Afghan Afghani', symbol: '؋', exp: 2, flag: 'af' },\n  ALL: { name: 'Albanian lek', symbol: 'lek', exp: 2, flag: 'al' },\n  AMD: { name: 'Armenian dram', symbol: 'AMD', exp: 2, flag: 'am' },\n  ANG: { name: 'Dutch Guilder', symbol: 'ƒ', exp: 2, flag: 'an' },\n  AOA: { name: 'Angolan Kwanza', symbol: 'Kz', exp: 2, flag: 'ao' },\n  ARS: { name: 'Argentine peso', symbol: '$', exp: 2, flag: 'ar' },\n  AUD: { name: 'Australian Dollar', symbol: '$', exp: 2, flag: 'au' },\n  AWG: { name: 'Arubin florin', symbol: 'ƒ', exp: 2, flag: 'aw' },\n  AZN: { name: 'Azerbaijani manat', symbol: 'ман', exp: 2, flag: 'az' },\n  BAM: { name: 'Bosnian Convertible Marka', symbol: 'KM', exp: 2, flag: 'ba' },\n  BBD: { name: 'Barbadian dollar', symbol: '$', exp: 2, flag: 'bb' },\n  BDT: { name: 'Bangladeshi Taka', symbol: 'Tk', exp: 2, flag: 'bd' },\n  BGN: { name: 'Bulgarian lev', symbol: 'лв', exp: 2, flag: 'bg' },\n  BHD: { name: 'Bahraini Dinar', symbol: '.د.ب or BD', exp: 3, flag: 'bh' },\n  BIF: { name: 'Burundian Franc', symbol: 'FBu', exp: 0, flag: 'bi' },\n  BMD: { name: 'Bermudian dollar', symbol: '$', exp: 2, flag: 'bm' },\n  BND: { name: 'Bruneian Dollar', symbol: '$', exp: 2, flag: 'bn' },\n  BOB: { name: 'Bolivian Boliviano', symbol: '$b', exp: 2, flag: 'bo' },\n  BRL: { name: 'Brazilian real', symbol: 'R$', exp: 2, flag: 'br' },\n  BSD: { name: 'Bahamian dollar', symbol: 'B$', exp: 2, flag: 'bs' },\n  BTN: { name: 'Bhutanese Ngultrum', symbol: 'Nu.', exp: 2, flag: 'bt' },\n  BWP: { name: 'Botswana Pula', symbol: 'P', exp: 2, flag: 'bw' },\n  BYR: { name: 'Belarusian ruble', symbol: 'р', exp: 2, flag: 'by' },\n  BZD: { name: 'Belize dollar', symbol: 'BZ$', exp: 2, flag: 'bz' },\n  CAD: { name: 'Canadian Dollar', symbol: '$', exp: 2, flag: 'ca' },\n  CHF: { name: 'Swiss Franc', symbol: 'CHF', exp: 2, flag: 'ch' },\n  CLP: { name: 'Chilean Peso', symbol: '$', exp: 0, flag: 'cl' },\n  CNY: { name: 'Yuan or chinese renminbi', symbol: '¥', exp: 2, flag: 'cn' },\n  COP: { name: 'Colombian peso', symbol: '$', exp: 2, flag: 'co' },\n  CRC: { name: 'Costa Rican colón', symbol: '₡', exp: 2, flag: 'cr' },\n  CUC: { name: 'Cuban convertible peso', symbol: '$', exp: 2, flag: 'cu' },\n  CUP: { name: 'Cuban peso', symbol: '₱', exp: 2, flag: 'cu' },\n  CVE: { name: 'Cape Verdean Escudo', symbol: '$', exp: 0, flag: 'cv' },\n  CZK: { name: 'Czech koruna', symbol: 'Kč', exp: 2, flag: 'cz' },\n  DJF: { name: 'Djiboutian Franc', symbol: 'fdj', exp: 0, flag: 'dj' },\n  DKK: { name: 'Danish krone', symbol: 'kr', exp: 2, flag: 'dk' },\n  DOP: { name: 'Dominican peso', symbol: '$', exp: 2, flag: 'do' },\n  DZD: { name: 'Algerian Dinar', symbol: 'جد', exp: 2, flag: 'dz' },\n  EGP: { name: 'Egyptian Pound', symbol: '£ ', exp: 2, flag: 'eg' },\n  ERN: { name: 'Eritrean nakfa', symbol: 'ናቕፋ', exp: 2, flag: 'er' },\n  ETB: { name: 'Ethiopian Birr', symbol: 'Br', exp: 2, flag: 'et' },\n  EUR: { name: 'Euro', symbol: '€', exp: 2, flag: 'eu' },\n  FJD: { name: 'Fijian dollar', symbol: '$', exp: 2, flag: 'fj' },\n  FKP: { name: 'Falkland Island Pound', symbol: '£', exp: 2, flag: 'fk' },\n  GBP: { name: 'British Pound', symbol: '£', exp: 2, flag: 'gb' },\n  GEL: { name: 'Georgian lari', symbol: 'ლ', exp: 2, flag: 'ge' },\n  GHS: { name: 'Ghanaian Cedi', symbol: 'GH¢', exp: 2, flag: 'gh' },\n  GIP: { name: 'Gibraltar pound', symbol: '£', exp: 2, flag: 'gi' },\n  GMD: { name: 'Gambian dalasi', symbol: 'D', exp: 2, flag: 'gm' },\n  GNF: { name: 'Guinean Franc', symbol: 'GNF', exp: 0, flag: 'gn' },\n  GTQ: { name: 'Guatemalan Quetzal', symbol: 'Q', exp: 2, flag: 'gt' },\n  GYD: { name: 'Guyanese dollar', symbol: '$', exp: 2, flag: 'gy' },\n  HKD: { name: 'Hong Kong dollar', symbol: 'HK$', exp: 2, flag: 'hk' },\n  HNL: { name: 'Honduran lempira', symbol: 'L', exp: 2, flag: 'hn' },\n  HRK: { name: 'Croatian kuna', symbol: 'kn', exp: 2, flag: 'hr' },\n  HTG: { name: 'Haitian gourde', symbol: 'G', exp: 2, flag: 'ht' },\n  HUF: { name: 'Hungarian forint', symbol: 'Ft', exp: 2, flag: 'hu' },\n  IDR: { name: 'Indonesian Rupiah', symbol: 'Rp', exp: 2, flag: 'id' },\n  ILS: { name: 'Israeli Shekel', symbol: '₪', exp: 2, flag: 'il' },\n  INR: { name: 'Indian Rupee', symbol: '₹', exp: 2, flag: 'in' },\n  IQD: { name: 'Iraqi Dinar', symbol: 'ع.د', exp: 3, flag: 'iq' },\n  IRR: { name: 'Iranian Rial', symbol: '﷼', exp: 2, flag: 'ir' },\n  ISK: { name: 'Icelandic Krona', symbol: 'kr', exp: 0, flag: 'is' },\n  JMD: { name: 'Jamaican dollar', symbol: 'J$', exp: 2, flag: 'jm' },\n  JOD: { name: 'Jordanian Dinar', symbol: 'JOD', exp: 3, flag: 'jo' },\n  JPY: { name: 'Japanese yen', symbol: '¥', exp: 0, flag: 'jp' },\n  KES: { name: 'Kenyan Shilling', symbol: 'KSh', exp: 2, flag: 'ke' },\n  KGS: { name: 'Kyrgyzstani som', symbol: 'лв', exp: 2, flag: 'kg' },\n  KHR: { name: 'Cambodian Riel', symbol: '៛', exp: 2, flag: 'kh' },\n  KMF: { name: 'Comoro Franc', symbol: 'KMF', exp: 0, flag: 'km' },\n  KPW: { name: 'North Korean won', symbol: '₩', exp: 2, flag: 'kp' },\n  KRW: { name: 'South Korean won', symbol: '₩', exp: 0, flag: 'kr' },\n  KWD: { name: 'Kuwaiti Dinar', symbol: 'ك', exp: 3, flag: 'kw' },\n  KYD: { name: 'Caymanian Dollar', symbol: '$', exp: 2, flag: 'ky' },\n  KZT: { name: 'Kazakhstani tenge', symbol: '₸', exp: 2, flag: 'kz' },\n  LAK: { name: 'Lao or Laotian Kip', symbol: '₭', exp: 2, flag: 'la' },\n  LBP: { name: 'Lebanese Pound', symbol: 'ل.ل', exp: 2, flag: 'lb' },\n  LKR: { name: 'Sri Lankan Rupee', symbol: 'Rs', exp: 2, flag: 'lk' },\n  LRD: { name: 'Liberian Dollar', symbol: '$', exp: 2, flag: 'lr' },\n  LSL: { name: 'Lesotho loti', symbol: 'L or M', exp: 2, flag: 'ls' },\n  LTL: { name: 'Lithuanian litas', symbol: 'Lt', exp: 2, flag: 'lt' },\n  LYD: { name: 'Libyan Dinar', symbol: ' د.ل', exp: 3, flag: 'ly' },\n  MAD: { name: 'Moroccan Dirham', symbol: 'م.د.', exp: 2, flag: 'ma' },\n  MDL: { name: 'Moldovan Leu', symbol: 'L', exp: 2, flag: 'md' },\n  MGA: { name: 'Malagasy Ariary', symbol: 'Ar', exp: 2, flag: 'mg' },\n  MKD: { name: 'Macedonian Denar', symbol: 'ден', exp: 2, flag: 'mk' },\n  MMK: { name: 'Burmese Kyat', symbol: 'K', exp: 2, flag: 'mm' },\n  MNT: { name: 'Mongolian Tughrik', symbol: '₮', exp: 2, flag: 'mn' },\n  MOP: { name: 'Macau Pataca', symbol: 'MOP$', exp: 2, flag: 'mo' },\n  MRO: { name: 'Mauritanian Ouguiya', symbol: 'UM', exp: 2, flag: 'mr' },\n  MUR: { name: 'Mauritian rupee', symbol: 'Rs', exp: 2, flag: 'mu' },\n  MVR: { name: 'Maldivian Rufiyaa', symbol: 'rf', exp: 2, flag: 'mv' },\n  MWK: { name: 'Malawian Kwacha', symbol: 'MK', exp: 2, flag: 'mw' },\n  MXN: { name: 'Mexico Peso', symbol: '$', exp: 2, flag: 'mx' },\n  MYR: { name: 'Malaysian Ringgit', symbol: 'RM', exp: 2, flag: 'my' },\n  MZN: { name: 'Mozambican Metical', symbol: 'MT', exp: 2, flag: 'mz' },\n  NAD: { name: 'Namibian Dollar', symbol: '$', exp: 2, flag: 'na' },\n  NGN: { name: 'Nigerian Naira', symbol: '₦', exp: 2, flag: 'ng' },\n  NIO: { name: 'Nicaraguan córdoba', symbol: 'C$', exp: 2, flag: 'ni' },\n  NOK: { name: 'Norwegian krone', symbol: 'kr', exp: 2, flag: 'no' },\n  NPR: { name: 'Nepalese Rupee', symbol: 'Rs', exp: 2, flag: 'np' },\n  NZD: { name: 'New Zealand Dollar', symbol: '$', exp: 2, flag: 'nz' },\n  OMR: { name: 'Omani Rial', symbol: 'ع.ر.', exp: 3, flag: 'om' },\n  PAB: { name: 'Balboa panamérn', symbol: 'B/', exp: 2, flag: 'pa' },\n  PEN: { name: 'Peruvian nuevo sol', symbol: 'S/', exp: 2, flag: 'pe' },\n  PGK: { name: 'Papua New Guinean Kina', symbol: 'K', exp: 2, flag: 'pg' },\n  PHP: { name: 'Philippine Peso', symbol: '₱', exp: 2, flag: 'ph' },\n  PKR: { name: 'Pakistani Rupee', symbol: 'Rs', exp: 2, flag: 'pk' },\n  PLN: { name: 'Polish złoty', symbol: 'zł', exp: 2, flag: 'pl' },\n  PYG: { name: 'Paraguayan guarani', symbol: '₲', exp: 0, flag: 'py' },\n  QAR: { name: 'Qatari Riyal', symbol: 'ق.ر ', exp: 2, flag: 'qa' },\n  RON: { name: 'Romanian leu', symbol: 'lei', exp: 2, flag: 'ro' },\n  RSD: { name: 'Serbian Dinar', symbol: 'РСД', exp: 2, flag: 'rs' },\n  RUB: { name: 'Russian Rouble', symbol: '₽', exp: 2, flag: 'ru' },\n  RWF: { name: 'Rwandan franc', symbol: 'FRw, RF, R₣', exp: 0, flag: 'rw' },\n  SAR: { name: 'Saudi Arabian Riyal', symbol: 'ر.س', exp: 2, flag: 'sa' },\n  SBD: { name: 'Solomon Islander Dollar', symbol: 'SI$', exp: 2, flag: 'sb' },\n  SCR: { name: 'Seychellois Rupee', symbol: 'Rs', exp: 2, flag: 'sc' },\n  SDG: { name: 'Sudanese Pound', symbol: 'SDG', exp: 2, flag: 'sd' },\n  SEK: { name: 'Swedish krona', symbol: 'kr', exp: 2, flag: 'se' },\n  SGD: { name: 'Singapore Dollar', symbol: '$', exp: 2, flag: 'sg' },\n  SLL: { name: 'Sierra Leonean Leone', symbol: 'Le', exp: 2, flag: 'sl' },\n  SOS: { name: 'Somali Shilling', symbol: 'S', exp: 2, flag: 'so' },\n  SRD: { name: 'Surinamese dollar', symbol: '$', exp: 2, flag: 'sr' },\n  SYP: { name: 'Syrian Pound', symbol: '£', exp: 2, flag: 'sy' },\n  SZL: { name: 'Swazi Lilangeni', symbol: 'L or E', exp: 2, flag: 'sz' },\n  THB: { name: 'Thai Baht', symbol: '฿', exp: 2, flag: 'th' },\n  TJS: { name: 'Tajikistani somoni', symbol: 'TJS', exp: 2, flag: 'tj' },\n  TMT: { name: 'Turkmenistan manat', symbol: 'T', exp: 2, flag: 'tm' },\n  TND: { name: 'Tunisian Dinar', symbol: 'TND', exp: 3, flag: 'tn' },\n  TOP: { name: \"Tongan Pa'anga\", symbol: 'T$', exp: 2, flag: 'to' },\n  TRY: { name: 'Turkish Lira', symbol: '₺', exp: 2, flag: 'tr' },\n  TTD: { name: 'Trinidadian dollar', symbol: 'TT$', exp: 2, flag: 'tt' },\n  TWD: { name: 'Taiwan New Dollar', symbol: 'NT$', exp: 2, flag: 'tw' },\n  TZS: { name: 'Tanzanian Shilling', symbol: 'Sh', exp: 2, flag: 'tz' },\n  UAH: { name: 'Ukrainian Hryvnia', symbol: '₴', exp: 2, flag: 'ua' },\n  UGX: { name: 'Ugandan Shilling', symbol: 'USh', exp: 0, flag: 'ug' },\n  USD: { name: 'US Dollar', symbol: '$', exp: 2, flag: 'us' },\n  UYU: { name: 'Uruguayan peso', symbol: '$U', exp: 2, flag: 'uy' },\n  UZS: { name: 'Uzbekistani som', symbol: 'лв', exp: 2, flag: 'uz' },\n  VEF: { name: 'Venezuelan bolivar', symbol: 'Bs', exp: 2, flag: 've' },\n  VND: { name: 'Vietnamese Dong', symbol: '₫', exp: 0, flag: 'vn' },\n  VUV: { name: 'Vanuatu Vatu', symbol: 'VT', exp: 0, flag: 'vu' },\n  WST: { name: 'Samoan Tālā', symbol: '$', exp: 2, flag: 'ws' },\n  YER: { name: 'Yemeni Rial', symbol: 'YER', exp: 2, flag: 'ye' },\n  ZAR: { name: 'South African Rand', symbol: 'R', exp: 2, flag: 'za' },\n  ZMW: { name: 'Zambian Kwacha', symbol: 'ZMK', exp: 2, flag: 'zm' },\n  ZWD: { name: 'Zimbabwean Dollar', symbol: 'Z$', exp: 2, flag: 'zw' },\n  XAU: { name: 'Gold, troy ounce', symbol: 'XAU', exp: 2 }\n};\n\nexport interface ExchangeRateT {\n  [code: string]: number;\n}\n\ntype CurrencyOptionT = {\n  key: string;\n  value: string;\n  text: string;\n  flag?: string;\n};\n\nconst Currency = {\n  defaultBase: 'USD',\n  options(): CurrencyOptionT[] {\n    return Object.keys(CURRENCY).map(code => ({\n      key: code,\n      value: code,\n      flag: CURRENCY[code].flag,\n      text: `${code}, ${CURRENCY[code].name}`\n    }));\n  },\n  name(code: string) {\n    return CURRENCY[code].name;\n  },\n  symbol(code: string) {\n    return CURRENCY[code].symbol;\n  },\n  minAmount(code: string) {\n    return Number(`1e-${CURRENCY[code].exp}`);\n  },\n  /**\n   * Convert value to currency's subunit (e.g. cents for USD).\n   * Subunit is the minimal currency unit and it is always whole integer.\n   */\n  numberToCents(value: string | number, code: string) {\n    return Math.round(parseFloat(`${value}e${CURRENCY[code].exp}`));\n  },\n  /**\n   * Convert value from subunit back to float representation with formatting.\n   * For example 199001 USD becomes 1,990.01 USD\n   */\n  centsToNumber(value: number, code: string): number {\n    const exp = CURRENCY[code].exp;\n    const num = Number(`${value}e-${exp}`);\n\n    return num;\n  },\n  centsToString(value: number, code: string, format: boolean = true): string {\n    const exp = CURRENCY[code].exp;\n    const num = Number(`${value}e-${exp}`);\n\n    return format\n      ? num.toLocaleString(undefined, {\n          minimumFractionDigits: exp,\n          maximumFractionDigits: exp\n        })\n      : num.toString();\n  },\n  centsToDollar(value: number, code: string): string {\n    const exp = CURRENCY[code].exp;\n    const num = Number(`${value}e-${exp}`);\n\n    return num.toLocaleString(undefined, { maximumFractionDigits: 0 });\n  },\n  convert(value: number, rate: number, from: string, to: string) {\n    return (value / rate) * Math.pow(10, CURRENCY[from].exp - CURRENCY[to].exp);\n  }\n};\n\nexport default Currency;\n","import Currency from '../entities/Currency';\n\nexport const getExchangeRate = state => state.settings.exchangeRate;\nexport const getBaseCurrency = state => state.settings.currency.base;\nexport const getBaseCurrencySymbol = state => {\n  return Currency.symbol(state.settings.currency.base);\n};\nexport const getSecondaryCurrency = state => state.settings.currency.secondary;\nexport const getCollapsedSections = state => state.settings.collapsedSections;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Icon } from 'semantic-ui-react';\nimport { toggleSectionCollapse } from '../../actions/settings';\nimport { getCollapsedSections } from '../../selectors/settings';\nimport './index.css';\n\nconst CollapsibleSection = ({\n  name,\n  label,\n  LabelComponent,\n  collapsed,\n  toggle,\n  children\n}) => (\n  <div className=\"section\">\n    <div\n      className={\n        collapsed.includes(name) ? 'section__header' : 'section__header active'\n      }\n      onClick={() => toggle(name)}\n    >\n      <Icon name=\"dropdown\" />\n      <h3>{label}</h3>\n      {LabelComponent && <LabelComponent />}\n    </div>\n    {!collapsed.includes(name) && (\n      <div className=\"section__body\">{children}</div>\n    )}\n  </div>\n);\n\nCollapsibleSection.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  LabelComponent: PropTypes.func,\n  collapsed: PropTypes.arrayOf(PropTypes.string),\n  toggle: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  collapsed: getCollapsedSections(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  { toggle: toggleSectionCollapse }\n)(CollapsibleSection);\n","/**\n * Immutable map helper. All operations return new map copied from previous map.\n */\nconst EntityMap = {\n  /**\n   * Create new entity map from given array.\n   *\n   * @param {array} entities\n   * @param {string} keyPropName\n   * @return {object}\n   */\n  fromArray(entities, keyPropName = 'id') {\n    return EntityMap.merge({ byKey: {}, keys: [] }, entities, keyPropName);\n  },\n  /**\n   * Merge given entities into given map.\n   *\n   * @param {object} source\n   * @param {array} entities\n   * @return {object}\n   */\n  merge(source, entities, keyPropName = 'id') {\n    return {\n      byKey: {\n        ...source.byKey,\n        ...entities.reduce((acc, entity) => {\n          acc[entity[keyPropName]] = entity;\n          return acc;\n        }, {})\n      },\n      keys: [\n        ...new Set(\n          entities\n            .map(entity => entity[keyPropName])\n            .filter(key => !source.keys.includes(key))\n            .concat(source.keys)\n        )\n      ]\n    };\n  },\n  /**\n   * Set given entity in map.\n   *\n   * @param {object} source\n   * @param {striobjectng} entity\n   */\n  set(source, entity, keyPropName = 'id') {\n    return EntityMap.merge(source, [entity], keyPropName);\n  },\n  /**\n   * Remove value by given key.\n   *\n   * @param {object} source\n   * @param {string} key\n   * @return {object}\n   */\n  remove(source, key) {\n    if (!source.byKey || !source.byKey[key]) return source;\n\n    const keys = source.keys.filter(originalKey => originalKey !== key);\n    return {\n      byKey: keys.reduce((acc, key) => {\n        acc[key] = source.byKey[key];\n        return acc;\n      }, {}),\n      keys\n    };\n  },\n  /**\n   * Retrieve value by given key.\n   *\n   * @param {object} source\n   * @param {string} key\n   */\n  get(source, key, fallback = {}) {\n    return (source.byKey && source.byKey[key]) || fallback;\n  },\n  /**\n   * Map over all entities with given function and return array with results.\n   * Optionally slice mapping to given offset and limit.\n   *\n   * @param {object} source\n   * @param {function} fn\n   * @param {number} limit\n   * @param {number} offset\n   * @return {array}\n   */\n  map(source, fn, limit = source.keys.length, offset = 0) {\n    return source.keys\n      .slice(offset, offset + limit)\n      .map(key => fn(source.byKey[key], key));\n  },\n  /**\n   * Filter source entires with given function and return array of entries matching the filter.\n   *\n   * @param {object} source\n   * @param {function} fn\n   * @return {array}\n   */\n  filter(source, fn) {\n    return source.keys.reduce((acc, key) => {\n      if (fn(source.byKey[key], key)) {\n        acc.push(source.byKey[key]);\n      }\n      return acc;\n    }, []);\n  },\n  /**\n   * Apply given function to all entities and return new map with results.\n   *\n   * @param {object} source\n   * @param {function} fn\n   * @return {object}\n   */\n  apply(source, fn) {\n    return {\n      byKey: source.keys.reduce((acc, key) => {\n        acc[key] = fn(source.byKey[key], key);\n        return acc;\n      }, {}),\n      keys: source.keys\n    };\n  }\n};\n\nexport default EntityMap;\n","import format from 'date-fns/format';\nimport Currency from 'entities/Currency';\nimport { toLocalTimestamp } from 'util/timezone';\n\ninterface TransactionBaseT {\n  kind: TransationKindT;\n  accountId: string;\n  currency: string;\n  note?: string;\n  linkedAccountId?: string;\n  linkedCurrency?: string;\n}\n\nexport interface TransactionFormT extends TransactionBaseT {\n  id?: string;\n  amount: string;\n  date: string;\n  linkedAmount?: string;\n  tags: { [kind in TransationKindT]?: string[] };\n}\n\nexport interface TransactionStateT extends TransactionBaseT {\n  id: string;\n  amount: number;\n  date: number;\n  linkedAmount?: number;\n  tags?: string[];\n}\n\nexport interface TransactionStorageT extends TransactionBaseT {\n  _id?: string;\n  amount: number;\n  linkedAmount?: number;\n  tags?: string[];\n}\n\nexport enum TransationKindT {\n  Expense,\n  Transfer,\n  Income\n}\n\nconst { Expense, Transfer, Income } = TransationKindT;\nconst TransactionKindToText: { [kind in TransationKindT]: string } = {\n  [Expense]: 'Expense',\n  [Transfer]: 'Transfer',\n  [Income]: 'Income'\n};\n\nexport const defaultKind = Expense;\nexport const recentListLimit = 5;\nexport const rowsPerSearchPage = 10;\nexport const pagerSizeMobile = 5;\nexport const pagerSizeDesktop = 9;\n\nexport function getKindLabel(kind: TransationKindT) {\n  return TransactionKindToText[kind];\n}\n\nexport function formToState(form: TransactionFormT): TransactionStateT {\n  const tags = form.tags && form.tags[form.kind];\n\n  return {\n    ...form,\n    id: form.id || '',\n    amount: Currency.numberToCents(\n      parseFloat(form.amount) * (form.kind === Expense ? -1 : 1),\n      form.currency\n    ),\n    linkedAmount:\n      form.kind === Transfer && form.linkedCurrency && form.linkedAmount\n        ? Currency.numberToCents(form.linkedAmount, form.linkedCurrency)\n        : undefined,\n    note: form.note || undefined,\n    tags: tags && tags.length > 0 ? tags : undefined,\n    date: new Date(form.date).getTime()\n  };\n}\n\nexport function stateToForm(state: TransactionStateT): TransactionFormT {\n  return {\n    ...state,\n    amount: Currency.centsToString(\n      state.amount * (state.kind === Expense ? -1 : 1),\n      state.currency,\n      false\n    ),\n    linkedAmount:\n      state.kind === Transfer && state.linkedAmount && state.linkedCurrency\n        ? Currency.centsToString(\n            state.linkedAmount,\n            state.linkedCurrency,\n            false\n          )\n        : undefined,\n    note: state.note || '',\n    tags: {\n      [Expense]: [],\n      [Income]: [],\n      [state.kind]: state.tags || []\n    },\n    date: format(toLocalTimestamp(state.date), 'YYYY-MM-DD')\n  };\n}\n\nexport function storageToState({\n  _id,\n  kind,\n  note,\n  tags,\n  accountId,\n  amount,\n  currency,\n  linkedAccountId,\n  linkedAmount,\n  linkedCurrency\n}: TransactionStorageT): TransactionStateT {\n  if (!_id) throw new Error('Transaction storage object missing \"_id\"');\n  // date timestamp is encoded in transaction ID\n  const dateRegexMatch = _id.match(/T([0-9]+)-/);\n  if (!dateRegexMatch) throw new Error(`No date in Transaction ID \"${_id}\"`);\n\n  return {\n    id: _id,\n    date: parseInt(dateRegexMatch[1], 10),\n    kind,\n    note,\n    tags,\n    accountId,\n    amount,\n    currency,\n    linkedAccountId,\n    linkedAmount,\n    linkedCurrency\n  };\n}\n\nexport function stateToStorage({\n  kind,\n  note,\n  tags,\n  accountId,\n  amount,\n  currency,\n  linkedAccountId,\n  linkedAmount,\n  linkedCurrency\n}: TransactionStateT): TransactionStorageT {\n  return {\n    kind,\n    note,\n    tags,\n    accountId,\n    amount,\n    currency,\n    ...(kind === Transfer && {\n      linkedAccountId,\n      linkedAmount,\n      linkedCurrency\n    })\n  };\n}\n","export default (a, b) => {\n  if (a.name < b.name) return -1;\n  if (a.name > b.name) return 1;\n  return 0;\n};\n","import { createSelector } from 'reselect';\nimport { getBaseCurrency, getExchangeRate } from '../settings';\nimport { getGroupName } from '../../entities/Account';\nimport Currency from '../../entities/Currency';\nimport EntityMap from '../../entities/EntityMap';\nimport sortByName from '../../util/sortByName';\n\nexport const getAccountsMap = state => state.entities.accounts;\n\nexport const getAccount = id =>\n  createSelector(\n    getAccountsMap,\n    accounts => EntityMap.get(accounts, id)\n  );\n\nexport const getAccountByName = name =>\n  createSelector(\n    getAccountsList,\n    accounts => accounts.find(account => account.name === name)\n  );\n\nexport const getAccountsList = state =>\n  EntityMap.map(state.entities.accounts, account => ({ ...account })).sort(\n    sortByName\n  );\n\nexport const getVisibleAccountsList = createSelector(\n  getAccountsList,\n  accounts => accounts.filter(account => !account.archived)\n);\n\nexport const getDashboardAccountsList = createSelector(\n  getVisibleAccountsList,\n  accounts => accounts.filter(account => account.on_dashboard)\n);\n\nexport const getAccountsNameMap = createSelector(\n  getAccountsList,\n  accounts =>\n    accounts.reduce((acc, account) => {\n      acc[account.id] = account.name;\n      return acc;\n    }, {})\n);\n\nexport const getAccountsCurrencyMap = createSelector(\n  getAccountsList,\n  accounts =>\n    accounts.reduce((acc, account) => {\n      acc[account.id] = account.currencies;\n      return acc;\n    }, {})\n);\n\nexport const getAccountsCurrencyList = createSelector(\n  getAccountsList,\n  accounts =>\n    accounts.reduce(\n      (currencies, account) =>\n        currencies.concat(\n          account.currencies.filter(code => !currencies.includes(code))\n        ),\n      []\n    )\n);\n\nconst groupAccounts = (accounts, base, rate) => {\n  const grouped = accounts.reduce((grouped, account) => {\n    const group = account.group;\n    if (!grouped[group]) {\n      grouped[group] = {\n        name: getGroupName(group),\n        accounts: [],\n        total: 0\n      };\n    }\n\n    grouped[group].accounts.push(account);\n    grouped[group].total += getBaseTotal(account, base, rate);\n\n    return grouped;\n  }, {});\n\n  for (const group of Object.keys(grouped)) {\n    grouped[group].accounts.sort(sortByName);\n  }\n\n  return grouped;\n};\n\nexport const getVisibleGroupedAccounts = createSelector(\n  getVisibleAccountsList,\n  getBaseCurrency,\n  getExchangeRate,\n  groupAccounts\n);\n\nexport const getDashboardGroupedAccounts = createSelector(\n  getDashboardAccountsList,\n  getBaseCurrency,\n  getExchangeRate,\n  groupAccounts\n);\n\nexport const getGroupedAccounts = createSelector(\n  getAccountsList,\n  getBaseCurrency,\n  getExchangeRate,\n  groupAccounts\n);\n\nexport const getAccountsAsOptions = createSelector(\n  getVisibleGroupedAccounts,\n  groups => {\n    const options = [];\n    for (const group of Object.keys(groups)) {\n      for (const account of groups[group].accounts) {\n        options.push({\n          key: account.id,\n          value: account.id,\n          text: account.name,\n          description: getGroupName(group)\n        });\n      }\n    }\n    return options;\n  }\n);\n\nexport const getNetWorth = createSelector(\n  getAccountsList,\n  getBaseCurrency,\n  getExchangeRate,\n  (accounts, base, rate) =>\n    accounts.reduce(\n      (netWorth, account) => netWorth + getBaseTotal(account, base, rate),\n      0\n    )\n);\n\nconst getBaseTotal = (account, base, rate) =>\n  account.currencies.reduce(\n    (total, code) =>\n      Math.floor(\n        total + Currency.convert(account.balance[code], rate[code], base, code)\n      ),\n    0\n  );\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Currency from '../entities/Currency';\n\nconst Amount = ({ value, code, showColor = true, showCents = true }) => (\n  <span\n    className={`mono ${showColor && (value >= 0 ? 'positive' : 'negative')}`}\n  >\n    {showCents\n      ? Currency.centsToString(value, code)\n      : Currency.centsToDollar(value, code)}{' '}\n    {code}\n  </span>\n);\n\nAmount.propTypes = {\n  value: PropTypes.number.isRequired,\n  code: PropTypes.string.isRequired,\n  showColor: PropTypes.bool,\n  showCents: PropTypes.bool\n};\n\nexport default Amount;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getNetWorth } from '../../selectors/entities/accounts';\nimport { getBaseCurrency } from '../../selectors/settings';\nimport Amount from '../../components/Amount';\n\nconst NetWorth = ({ netWorth, baseCurrency }) => (\n  <div className=\"net-worth__total\">\n    <Amount value={netWorth} code={baseCurrency} showCents={false} />\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  netWorth: getNetWorth(state),\n  baseCurrency: getBaseCurrency(state)\n});\n\nexport default connect(mapStateToProps)(NetWorth);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'semantic-ui-react';\nimport Amount from '../../Amount';\nimport { stateToForm } from '../../../entities/Account';\n\nclass AccountItem extends React.Component {\n  handleEditClick = () => {\n    this.props.openAccountInModal(stateToForm(this.props.account));\n  };\n\n  render() {\n    return (\n      <div className=\"account-widget-account\">\n        <div className=\"account-widget-account__name\">\n          <Link to={`/transactions/${this.props.account.id}`}>\n            {this.props.account.name}\n          </Link>\n        </div>\n        <div className=\"account-widget-account__balance\">\n          {this.props.account.currencies.map(code => (\n            <Amount\n              key={code}\n              value={this.props.account.balance[code]}\n              code={code}\n            />\n          ))}\n        </div>\n        {this.props.openAccountInModal && (\n          <div className=\"account-widget-account__edit\">\n            <Button\n              basic\n              circular\n              icon=\"pencil\"\n              onClick={this.handleEditClick}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nAccountItem.propTypes = {\n  account: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    balance: PropTypes.objectOf(PropTypes.number).isRequired\n  }).isRequired,\n  openAccountInModal: PropTypes.func\n};\n\nexport default AccountItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AccountItem from './AccountItem';\nimport Amount from '../../Amount';\n\nconst Group = ({\n  baseCurrency,\n  group,\n  isCollapsed,\n  toggleGroupCollapse,\n  openAccountInModal\n}) => (\n  <div className=\"account-widget-group\">\n    <div className=\"account-widget-group__header\" onClick={toggleGroupCollapse}>\n      <span className=\"account-widget-group__name\">{group.name}</span>\n      <span className=\"account-widget-group__total\">\n        <Amount value={group.total} code={baseCurrency} showCents={false} />\n      </span>\n    </div>\n    {!isCollapsed &&\n      group.accounts.map(account => (\n        <AccountItem\n          key={account.id}\n          account={account}\n          openAccountInModal={openAccountInModal}\n        />\n      ))}\n  </div>\n);\n\nGroup.propTypes = {\n  baseCurrency: PropTypes.string.isRequired,\n  group: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    accounts: PropTypes.arrayOf(PropTypes.object).isRequired,\n    total: PropTypes.number.isRequired\n  }).isRequired,\n  isCollapsed: PropTypes.bool.isRequired,\n  toggleGroupCollapse: PropTypes.func.isRequired,\n  openAccountInModal: PropTypes.func\n};\n\nexport default Group;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Group from './Group';\nimport './index.css';\n\nclass AccountsWidget extends React.Component {\n  toggle = group => () => this.props.toggleSectionCollapse(group);\n\n  render() {\n    const groups = Object.keys(this.props.groups);\n\n    return (\n      groups.length > 0 && (\n        <div className=\"account-widget\">\n          {groups.map(group => (\n            <Group\n              key={group}\n              baseCurrency={this.props.baseCurrency}\n              group={this.props.groups[group]}\n              isCollapsed={this.props.collapsedGroups.includes(group)}\n              toggleGroupCollapse={this.toggle(group)}\n              openAccountInModal={this.props.openAccountInModal}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n}\n\nAccountsWidget.propTypes = {\n  baseCurrency: PropTypes.string.isRequired,\n  groups: PropTypes.objectOf(PropTypes.object).isRequired,\n  collapsedGroups: PropTypes.arrayOf(PropTypes.string).isRequired,\n  toggleSectionCollapse: PropTypes.func.isRequired,\n  openAccountInModal: PropTypes.func\n};\n\nexport default AccountsWidget;\n","import { connect } from 'react-redux';\nimport AccountsList from '../../components/Account/List';\nimport { getDashboardGroupedAccounts } from '../../selectors/entities/accounts';\nimport {\n  getCollapsedSections,\n  getBaseCurrency\n} from '../../selectors/settings';\nimport { toggleSectionCollapse } from '../../actions/settings';\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  baseCurrency: getBaseCurrency(state),\n  collapsedGroups: getCollapsedSections(state),\n  groups: getDashboardGroupedAccounts(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  { toggleSectionCollapse }\n)(AccountsList);\n","const offset = new Date().getTimezoneOffset();\n\nexport function toUtcTimestamp(date: Date | number) {\n  const timestamp = date instanceof Date ? date.getTime() : date;\n  return timestamp - offset * 60 * 1000;\n}\n\nexport function toLocalTimestamp(date: Date | number) {\n  const timestamp = date instanceof Date ? date.getTime() : date;\n  return timestamp + offset * 60 * 1000;\n}\n","import PropTypes from 'prop-types';\n\nexport const DropdownOption = PropTypes.shape({\n  key: PropTypes.string,\n  value: PropTypes.string,\n  text: PropTypes.string\n});\n","import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { getKindLabel, TransationKindT } from 'entities/Transaction';\n\nconst Header = ({ withTransfer, activeKind, changeKind }) => {\n  const { Expense, Transfer, Income } = TransationKindT;\n  const kinds = withTransfer ? [Expense, Transfer, Income] : [Expense, Income];\n  return (\n    <Menu attached=\"top\" widths={kinds.length}>\n      {kinds.map(kind => (\n        <Menu.Item\n          key={kind}\n          color={kind === Expense ? 'red' : kind === Income ? 'green' : 'black'}\n          name={getKindLabel(kind)}\n          active={kind === activeKind}\n          onClick={() => changeKind(kind)}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Form, Input } from 'semantic-ui-react';\nimport { DropdownOption } from '../../types';\nimport Currency from '../../../entities/Currency';\n\nconst Account = props => (\n  <Form.Group>\n    <Form.Field width={11} className=\"mobile-with-margin\">\n      <label>{props.label}</label>\n      <Dropdown\n        selection\n        options={props.accountOptions}\n        value={props.accountId}\n        onChange={props.onAccountChange}\n      />\n    </Form.Field>\n    <Form.Field width={5} className=\"mobile-with-margin input-right no-label\">\n      <Input\n        required\n        type=\"number\"\n        min={Currency.minAmount(props.currency)}\n        step={Currency.minAmount(props.currency)}\n        value={props.amount}\n        onChange={props.onAmountChange}\n        labelPosition=\"right\"\n        label={\n          props.currencyOptions.length === 1 ? (\n            props.currencyOptions[0].text\n          ) : (\n            <Dropdown\n              options={props.currencyOptions}\n              value={props.currency}\n              onChange={props.onCurrencyChange}\n            />\n          )\n        }\n      />\n    </Form.Field>\n  </Form.Group>\n);\n\nAccount.propTypes = {\n  label: PropTypes.string,\n  accountId: PropTypes.string,\n  accountOptions: PropTypes.arrayOf(DropdownOption),\n  amount: PropTypes.string,\n  currency: PropTypes.string,\n  currencyOptions: PropTypes.arrayOf(DropdownOption),\n  onAccountChange: PropTypes.func,\n  onAmountChange: PropTypes.func,\n  onCurrencyChange: PropTypes.func\n};\n\nexport default Account;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Dropdown, Input, Segment } from 'semantic-ui-react';\nimport {\n  TransationKindT,\n  getKindLabel,\n  formToState\n} from 'entities/Transaction';\nimport { DropdownOption } from 'components/types';\nimport Header from './Header';\nimport Account from './Account';\nimport './index.css';\n\nconst { Expense, Transfer, Income } = TransationKindT;\nconst NoAccounts = () => (\n  <div className=\"transactions-form__empty\">You don't have any accounts.</div>\n);\n\nclass TransactionForm extends React.Component {\n  state = { searchQuery: '' };\n\n  onSubmit = event => {\n    event.preventDefault();\n    this.props.saveTransaction(formToState(this.props.form));\n  };\n\n  onChange = handler => (_, { value }) => handler(value);\n\n  onAccountChange = handler => (_, { value }) => {\n    handler({\n      accountId: value,\n      currency: this.props.accountCurrency[value]\n    });\n  };\n\n  onTagAdd = (_, { value }) => {\n    this.props.addTag({ kind: this.props.form.kind, tag: value });\n  };\n  onTagSearchChange = (_, { searchQuery }) => this.setState({ searchQuery });\n  onTagClose = () => this.setState({ searchQuery: '' });\n\n  getCurrencyOptions = accountId => {\n    return this.props.accountCurrency[accountId].map(code => ({\n      key: code,\n      value: code,\n      text: code\n    }));\n  };\n\n  getGridClassName = () =>\n    this.props.form.kind === Transfer\n      ? 'transaction-form-grid single-line'\n      : 'transaction-form-grid';\n\n  render() {\n    if (!this.props.form.accountId) return <NoAccounts />;\n\n    return (\n      <React.Fragment>\n        <Header\n          withTransfer={!!this.props.form.linkedAccountId}\n          activeKind={this.props.form.kind}\n          changeKind={this.props.changeKind}\n        />\n        <Segment attached=\"bottom\">\n          <Form onSubmit={this.onSubmit} className=\"transaction-form\">\n            <Account\n              label={this.props.form.kind === Income ? 'To' : 'From'}\n              accountId={this.props.form.accountId}\n              amount={this.props.form.amount}\n              currency={this.props.form.currency}\n              accountOptions={this.props.accountOptions}\n              currencyOptions={this.getCurrencyOptions(\n                this.props.form.accountId\n              )}\n              onAccountChange={this.onAccountChange(this.props.changeAccount)}\n              onAmountChange={this.onChange(this.props.changeAmount)}\n              onCurrencyChange={this.onChange(this.props.changeCurrency)}\n            />\n            {this.props.form.kind === Transfer && (\n              <Account\n                label=\"To\"\n                accountId={this.props.form.linkedAccountId}\n                amount={this.props.form.linkedAmount}\n                currency={this.props.form.linkedCurrency}\n                accountOptions={this.props.accountOptions}\n                currencyOptions={this.getCurrencyOptions(\n                  this.props.form.linkedAccountId\n                )}\n                onAccountChange={this.onAccountChange(\n                  this.props.changeLinkedAccount\n                )}\n                onAmountChange={this.onChange(this.props.changeLinkedAmount)}\n                onCurrencyChange={this.onChange(\n                  this.props.changeLinkedCurrency\n                )}\n              />\n            )}\n            <div className={this.getGridClassName()}>\n              <div className=\"transaction-form-grid__column-wide\">\n                {this.props.form.kind !== Transfer && (\n                  <div className=\"transaction-form-grid__field\">\n                    <Form.Field>\n                      <label>Tags</label>\n                      <Dropdown\n                        multiple\n                        selection\n                        search\n                        allowAdditions\n                        closeOnChange\n                        placeholder=\"Choose existing tags or add new\"\n                        value={this.props.form.tags[this.props.form.kind]}\n                        options={this.props.tagsOptions}\n                        onChange={this.onChange(this.props.changeTags)}\n                        onAddItem={this.onTagAdd}\n                        onClose={this.onTagClose}\n                        onSearchChange={this.onTagSearchChange}\n                        searchQuery={this.state.searchQuery}\n                      />\n                    </Form.Field>\n                  </div>\n                )}\n                <div className=\"transaction-form-grid__field\">\n                  <Form.Field>\n                    <Input\n                      placeholder=\"Note\"\n                      value={this.props.form.note}\n                      onChange={this.onChange(this.props.changeNote)}\n                    />\n                  </Form.Field>\n                </div>\n              </div>\n              <div className=\"transaction-form-grid__column-narrow\">\n                <div className=\"transaction-form-grid__field\">\n                  <Form.Field>\n                    <Input\n                      required\n                      fluid\n                      type=\"date\"\n                      value={this.props.form.date}\n                      onChange={this.onChange(this.props.changeDate)}\n                    />\n                  </Form.Field>\n                </div>\n                <div className=\"transaction-form-grid__field\">\n                  <Button\n                    primary\n                    fluid\n                    disabled={parseFloat(this.props.form.amount) === 0}\n                  >\n                    {this.props.form.id ? 'Save' : 'Add'}{' '}\n                    {getKindLabel(this.props.form.kind)}\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </Form>\n        </Segment>\n      </React.Fragment>\n    );\n  }\n}\n\nTransactionForm.propTypes = {\n  form: PropTypes.shape({\n    id: PropTypes.string,\n    kind: PropTypes.oneOf([Expense, Transfer, Income]),\n    accountId: PropTypes.string,\n    amount: PropTypes.string,\n    currency: PropTypes.string,\n    linkedAccountId: PropTypes.string,\n    linkedAmount: PropTypes.string,\n    linkedCurrency: PropTypes.string,\n    tags: PropTypes.shape({\n      [Expense]: PropTypes.arrayOf(PropTypes.string),\n      [Income]: PropTypes.arrayOf(PropTypes.string)\n    }),\n    date: PropTypes.string,\n    note: PropTypes.string\n  }),\n  accountCurrency: PropTypes.object.isRequired,\n  accountOptions: PropTypes.arrayOf(DropdownOption).isRequired,\n  tagsOptions: PropTypes.arrayOf(DropdownOption),\n  changeKind: PropTypes.func.isRequired,\n  changeAccount: PropTypes.func.isRequired,\n  changeAmount: PropTypes.func.isRequired,\n  changeCurrency: PropTypes.func.isRequired,\n  changeLinkedAccount: PropTypes.func,\n  changeLinkedAmount: PropTypes.func,\n  changeLinkedCurrency: PropTypes.func,\n  addTag: PropTypes.func,\n  changeTags: PropTypes.func,\n  changeDate: PropTypes.func.isRequired,\n  changeNote: PropTypes.func.isRequired,\n  loadTags: PropTypes.func,\n  saveTransaction: PropTypes.func.isRequired\n};\n\nexport default TransactionForm;\n","import { TransationKindT } from '../../entities/Transaction';\n\nexport const getTagOptions = state =>\n  state.entities.tags[state.ui.form.transaction.kind].map(tag => ({\n    key: tag,\n    value: tag,\n    text: tag\n  }));\n\nexport const getAllTagsOptions = state =>\n  [\n    ...new Set([\n      ...state.entities.tags[TransationKindT.Expense],\n      ...state.entities.tags[TransationKindT.Income]\n    ])\n  ].map(tag => ({\n    key: tag,\n    value: tag,\n    text: tag\n  }));\n","import { createActions } from 'redux-actions';\n\nexport const {\n  loadFilterTransactions,\n  loadFilterTransactionsSuccess,\n  loadRecentTransactions,\n  loadRecentTransactionsSuccess,\n  saveTransaction,\n  saveTransactionSuccess,\n  removeTransaction,\n  removeTransactionSuccess\n} = createActions(\n  'LOAD_FILTER_TRANSACTIONS',\n  'LOAD_FILTER_TRANSACTIONS_SUCCESS',\n  'LOAD_RECENT_TRANSACTIONS',\n  'LOAD_RECENT_TRANSACTIONS_SUCCESS',\n  'SAVE_TRANSACTION',\n  'SAVE_TRANSACTION_SUCCESS',\n  'REMOVE_TRANSACTION',\n  'REMOVE_TRANSACTION_SUCCESS'\n);\n","import { createActions } from 'redux-actions';\n\nexport const {\n  loadTags,\n  loadExpenseTagsSuccess,\n  loadIncomeTagsSuccess\n} = createActions(\n  'LOAD_TAGS',\n  'LOAD_EXPENSE_TAGS_SUCCESS',\n  'LOAD_INCOME_TAGS_SUCCESS'\n);\n","import { createActions } from 'redux-actions';\n\nexport const {\n  fillInTransactionForm,\n  resetTransactionForm,\n  openTransactionInModal,\n  changeKind,\n  changeAccount,\n  changeAmount,\n  changeCurrency,\n  changeLinkedAccount,\n  changeLinkedAmount,\n  changeLinkedCurrency,\n  changeDate,\n  addTag,\n  changeTags,\n  changeNote\n} = createActions(\n  'FILL_IN_TRANSACTION_FORM',\n  'RESET_TRANSACTION_FORM',\n  'OPEN_TRANSACTION_IN_MODAL',\n  'CHANGE_KIND',\n  'CHANGE_ACCOUNT',\n  'CHANGE_AMOUNT',\n  'CHANGE_CURRENCY',\n  'CHANGE_LINKED_ACCOUNT',\n  'CHANGE_LINKED_AMOUNT',\n  'CHANGE_LINKED_CURRENCY',\n  'CHANGE_DATE',\n  'ADD_TAG',\n  'CHANGE_TAGS',\n  'CHANGE_NOTE'\n);\n","import { connect } from 'react-redux';\nimport TransactionForm from '../../components/Transaction/Form';\nimport {\n  getAccountsCurrencyMap,\n  getAccountsAsOptions\n} from '../../selectors/entities/accounts';\nimport { getTagOptions } from '../../selectors/entities/tags';\nimport { saveTransaction } from '../../actions/entities/transactions';\nimport { loadTags } from '../../actions/entities/tags';\nimport {\n  changeKind,\n  changeAccount,\n  changeAmount,\n  changeCurrency,\n  changeLinkedAccount,\n  changeLinkedAmount,\n  changeLinkedCurrency,\n  addTag,\n  changeTags,\n  changeDate,\n  changeNote\n} from '../../actions/ui/form/transaction';\n\nconst mapStateToProps = state => ({\n  form: state.ui.form.transaction,\n  accountCurrency: getAccountsCurrencyMap(state),\n  accountOptions: getAccountsAsOptions(state),\n  tagsOptions: getTagOptions(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    changeKind,\n    changeAccount,\n    changeAmount,\n    changeCurrency,\n    changeLinkedAccount,\n    changeLinkedAmount,\n    changeLinkedCurrency,\n    changeDate,\n    changeNote,\n    addTag,\n    changeTags,\n    loadTags,\n    saveTransaction\n  }\n)(TransactionForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\nimport { Icon, Button, Label } from 'semantic-ui-react';\nimport Amount from '../../Amount';\nimport { stateToForm, TransationKindT } from '../../../entities/Transaction';\nimport { toLocalTimestamp } from '../../../util/timezone';\n\nconst { Expense, Transfer, Income } = TransationKindT;\n\nclass TransactionItem extends React.Component {\n  handleEditClick = () => {\n    this.props.openTransactionInModal(stateToForm(this.props.transaction));\n  };\n\n  render() {\n    const { transaction } = this.props;\n    return (\n      <div className=\"transaction-item\">\n        <div className=\"transaction-item__date\">\n          {format(toLocalTimestamp(transaction.date), 'DD MMM')}\n        </div>\n        <div className=\"transaction-item__info\">\n          {transaction.accountName}\n          {this.renderArrow()}\n          {transaction.kind === Transfer && transaction.linkedAccountName}\n          {transaction.tags &&\n            transaction.tags.map(tag => <Label key={tag} content={tag} />)}\n          <span className=\"transaction-item__info__note\">\n            {transaction.note}\n          </span>\n        </div>\n        <div className=\"transaction-item__amount\">\n          <Amount\n            value={transaction.amount}\n            code={transaction.currency}\n            showColor={transaction.kind !== Transfer}\n          />\n          {transaction.kind === Transfer && this.renderLinkedAmount()}\n        </div>\n        <div className=\"transaction-item__edit\">\n          <Button\n            circular\n            basic\n            icon=\"pencil\"\n            onClick={this.handleEditClick}\n            disabled={transaction.archived}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  renderArrow() {\n    const { kind, tags, note } = this.props.transaction;\n    if (kind !== Transfer && !tags && !note) return;\n\n    return (\n      <Icon\n        color=\"grey\"\n        name={kind === Income ? 'arrow left' : 'arrow right'}\n      />\n    );\n  }\n\n  renderLinkedAmount() {\n    const { linkedAmount, linkedCurrency, currency } = this.props.transaction;\n    if (!linkedCurrency || linkedCurrency === currency) return;\n\n    return (\n      <span>\n        <Icon color=\"grey\" name=\"arrow right\" />\n        <Amount value={linkedAmount} code={linkedCurrency} showColor={false} />\n      </span>\n    );\n  }\n}\n\nTransactionItem.propTypes = {\n  transaction: PropTypes.shape({\n    kind: PropTypes.oneOf([Expense, Transfer, Income]),\n    id: PropTypes.string,\n    accountId: PropTypes.string,\n    accountName: PropTypes.string,\n    amount: PropTypes.number,\n    currency: PropTypes.string,\n    linkedAccountId: PropTypes.string,\n    linkedAccountName: PropTypes.string,\n    linkedAmount: PropTypes.number,\n    linkedCurrency: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n    note: PropTypes.string,\n    date: PropTypes.number\n  }),\n  openTransactionInModal: PropTypes.func\n};\n\nexport default TransactionItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Header } from 'semantic-ui-react';\n\nconst ModalForm = props => (\n  <Modal\n    closeIcon\n    size=\"small\"\n    className=\"transaction\"\n    open={props.isOpen}\n    onClose={props.resetTransactionForm}\n  >\n    <Header\n      icon=\"file text outline\"\n      content={props.isEdit ? 'Edit Transaction' : 'New Transaction'}\n    />\n    <Modal.Content>\n      <props.EditForm />\n    </Modal.Content>\n    {props.isEdit && (\n      <Modal.Actions>\n        <Button\n          negative\n          icon=\"trash\"\n          content=\"Delete\"\n          labelPosition=\"right\"\n          onClick={() => props.removeTransaction(props.currentTransactionId)}\n        />\n      </Modal.Actions>\n    )}\n  </Modal>\n);\n\nModalForm.propTypes = {\n  currentTransactionId: PropTypes.string,\n  isOpen: PropTypes.bool,\n  isEdit: PropTypes.bool,\n  resetTransactionForm: PropTypes.func,\n  removeTransaction: PropTypes.func,\n  EditForm: PropTypes.func\n};\n\nexport default ModalForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Dimmer, Loader } from 'semantic-ui-react';\nimport TransactionItem from './TransactionItem';\nimport ModalForm from './ModalForm';\nimport './index.css';\n\nclass TransactionList extends React.Component {\n  render() {\n    return (\n      <Segment className=\"transactions-list__wrapper\">\n        <Dimmer inverted active={this.props.isLoading}>\n          <Loader active inline=\"centered\" />\n        </Dimmer>\n        {this.props.transactions.length > 0 ? (\n          this.props.transactions.map(this.renderTransaction)\n        ) : (\n          <div className=\"transactions-list__empty\">No transactions found.</div>\n        )}\n        <ModalForm\n          currentTransactionId={this.props.currentTransactionId}\n          EditForm={this.props.EditForm}\n          isOpen={this.props.isModalOpen}\n          isEdit={this.props.isEdit}\n          resetTransactionForm={this.props.resetTransactionForm}\n          removeTransaction={this.props.removeTransaction}\n        />\n      </Segment>\n    );\n  }\n\n  renderTransaction = transaction => (\n    <TransactionItem\n      key={transaction.id}\n      transaction={transaction}\n      openTransactionInModal={this.props.openTransactionInModal}\n    />\n  );\n}\n\nTransactionList.propTypes = {\n  isLoading: PropTypes.bool,\n  transactions: PropTypes.arrayOf(PropTypes.object),\n  currentTransactionId: PropTypes.string,\n  isModalOpen: PropTypes.bool,\n  isEdit: PropTypes.bool,\n  openTransactionInModal: PropTypes.func,\n  resetTransactionForm: PropTypes.func,\n  removeTransaction: PropTypes.func,\n  EditForm: PropTypes.func\n};\n\nexport default TransactionList;\n","import format from 'date-fns/format';\nimport { createSelector } from 'reselect';\nimport {\n  pagerSizeMobile,\n  pagerSizeDesktop\n} from '../../../entities/Transaction';\nimport { toLocalTimestamp } from '../../../util/timezone';\n\nexport const getDateLabel = state => {\n  const dateStart = toLocalTimestamp(state.ui.transaction.filter.dateStart);\n  const dateEnd = toLocalTimestamp(state.ui.transaction.filter.dateEnd);\n  return format(dateStart, 'DD MMM') !== format(dateEnd, 'DD MMM')\n    ? `${format(dateStart, 'DD MMM')} — ${format(dateEnd, 'DD MMM')}`\n    : format(dateStart, 'MMMM, Do');\n};\n\nexport const getFilters = state => ({\n  date: {\n    start: state.ui.transaction.filter.dateStart,\n    end: state.ui.transaction.filter.dateEnd\n  },\n  accounts: new Set(state.ui.transaction.filter.applied.accounts),\n  tags: state.ui.transaction.filter.applied.tags || []\n});\n\nexport const getPage = state => state.ui.transaction.filter.page;\n\nexport const getLastPage = state => {\n  return Math.ceil(\n    state.ui.transaction.filter.totalRows / state.ui.transaction.filter.perPage\n  );\n};\n\nexport const getPagerSize = state =>\n  state.ui.isMobile ? pagerSizeMobile : pagerSizeDesktop;\n\nexport const getVisiblePages = createSelector(\n  getPage,\n  getLastPage,\n  getPagerSize,\n  (current, last, size) => {\n    const pages = [];\n    const offset = Math.max(0, last - current - Math.ceil(size / 2));\n    const windowRight = last > size ? Math.max(size, last - offset) : last;\n    const windowLeft = Math.max(0, windowRight - size);\n\n    for (let page = windowLeft; page < windowRight; page++) {\n      pages.push(page);\n    }\n\n    return pages;\n  }\n);\n","import { createSelector } from 'reselect';\nimport { getAccountsMap } from './accounts';\nimport { getBaseCurrency, getExchangeRate } from '../settings';\nimport { getPage } from '../ui/transaction/filter';\nimport { recentListLimit, rowsPerSearchPage } from '../../entities/Transaction';\nimport Currency from '../../entities/Currency';\nimport EntityMap from '../../entities/EntityMap';\n\nconst recentTransactionsSelector = state => state.entities.transactions.recent;\nconst filterTransactionsSelector = state => state.entities.transactions.filter;\n\nexport const getRecentTransactions = createSelector(\n  recentTransactionsSelector,\n  getAccountsMap,\n  (transactions, accounts) =>\n    EntityMap.map(\n      transactions,\n      transaction => joinAccount(transaction, accounts),\n      recentListLimit\n    )\n);\n\nexport const getFilterTransactions = createSelector(\n  filterTransactionsSelector,\n  getPage,\n  getAccountsMap,\n  (transactions, page, accounts) =>\n    EntityMap.map(\n      transactions,\n      transaction => joinAccount(transaction, accounts),\n      rowsPerSearchPage,\n      page * rowsPerSearchPage\n    )\n);\n\nfunction joinAccount(transaction, accounts) {\n  const account = EntityMap.get(accounts, transaction.accountId);\n  const linked = EntityMap.get(accounts, transaction.linkedAccountId);\n  return {\n    ...transaction,\n    archived: account.archived || linked.archived,\n    accountName: account.name,\n    linkedAccountName: linked.name\n  };\n}\n\nexport const getFilterTotal = kind =>\n  createSelector(\n    filterTransactionsSelector,\n    getBaseCurrency,\n    getExchangeRate,\n    (transactions, base, rate) =>\n      EntityMap.filter(transactions, tx => tx.kind === kind).reduce(\n        (total, tx) =>\n          Math.floor(\n            total +\n              Currency.convert(tx.amount, rate[tx.currency], base, tx.currency)\n          ),\n        0\n      )\n  );\n","import format from 'date-fns/format';\nimport { createSelector } from 'reselect';\nimport {\n  getAccountsCurrencyMap,\n  getAccountsAsOptions\n} from '../../entities/accounts';\nimport { getBaseCurrency } from '../../settings';\nimport { defaultKind, TransationKindT } from '../../../entities/Transaction';\n\nconst { Expense, Income } = TransationKindT;\n\nexport const getForm = state => state.ui.form.transaction;\n\nconst getDefaultAccountId = createSelector(\n  getAccountsAsOptions,\n  options => options.length > 0 && options[0].key\n);\n\nconst getDefaultCurrency = createSelector(\n  getDefaultAccountId,\n  getAccountsCurrencyMap,\n  getBaseCurrency,\n  (accountId, currencies, base) =>\n    accountId &&\n    (currencies[accountId].includes(base) ? base : currencies[accountId][0])\n);\n\nconst getDefaultLinkedAccountId = createSelector(\n  getAccountsAsOptions,\n  getDefaultAccountId,\n  getAccountsCurrencyMap,\n  (options, defaultAccountId, currencies) =>\n    options.length > 1\n      ? options[1].key\n      : defaultAccountId &&\n        currencies[defaultAccountId].length > 1 &&\n        defaultAccountId\n);\n\nconst getDefaultLinkedCurrency = createSelector(\n  getDefaultAccountId,\n  getDefaultLinkedAccountId,\n  getAccountsCurrencyMap,\n  getBaseCurrency,\n  (accountId, linkedAccountId, currencies, base) =>\n    accountId && accountId === linkedAccountId\n      ? currencies[accountId][1]\n      : linkedAccountId &&\n        (currencies[linkedAccountId].includes(base)\n          ? base\n          : currencies[linkedAccountId][0])\n);\n\nexport const getDefaultState = createSelector(\n  getDefaultAccountId,\n  getDefaultCurrency,\n  getDefaultLinkedAccountId,\n  getDefaultLinkedCurrency,\n  (accountId, currency, linkedAccountId, linkedCurrency) => {\n    return {\n      kind: defaultKind,\n      isModalOpen: false,\n      accountId: accountId || null,\n      currency: currency || null,\n      amount: '',\n      linkedAccountId: linkedAccountId || null,\n      linkedCurrency: linkedCurrency || null,\n      linkedAmount: '',\n      tags: {\n        [Expense]: [],\n        [Income]: []\n      },\n      date: format(new Date(), 'YYYY-MM-DD'),\n      note: ''\n    };\n  }\n);\n","import { connect } from 'react-redux';\nimport {\n  openTransactionInModal,\n  resetTransactionForm\n} from '../../actions/ui/form/transaction';\nimport { removeTransaction } from '../../actions/entities/transactions';\nimport TransactionList from '../../components/Transaction/List';\nimport { getRecentTransactions } from '../../selectors/entities/transactions';\nimport { getForm } from '../../selectors/ui/form/transaction';\nimport TransactionForm from '../Transactions/Form';\n\nconst mapStateToProps = state => ({\n  currentTransactionId: getForm(state).id,\n  transactions: getRecentTransactions(state),\n  isModalOpen: getForm(state).isModalOpen,\n  isEdit: getForm(state).id !== undefined,\n  EditForm: TransactionForm\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    openTransactionInModal,\n    resetTransactionForm,\n    removeTransaction\n  }\n)(TransactionList);\n","import { createActions } from 'redux-actions';\n\nexport const {\n  loadAccounts,\n  loadAccountsSuccess,\n  saveAccount,\n  saveAccountFailure,\n  saveAccountSuccess,\n  updateAccount,\n  removeAccount,\n  removeAccountRequest,\n  removeAccountStart,\n  removeAccountItemProcessed,\n  removeAccountFailure,\n  removeAccountSuccess\n} = createActions(\n  'LOAD_ACCOUNTS',\n  'LOAD_ACCOUNTS_SUCCESS',\n  'SAVE_ACCOUNT',\n  'SAVE_ACCOUNT_FAILURE',\n  'SAVE_ACCOUNT_SUCCESS',\n  'UPDATE_ACCOUNT',\n  'REMOVE_ACCOUNT',\n  'REMOVE_ACCOUNT_REQUEST',\n  'REMOVE_ACCOUNT_START',\n  'REMOVE_ACCOUNT_ITEM_PROCESSED',\n  'REMOVE_ACCOUNT_FAILURE',\n  'REMOVE_ACCOUNT_SUCCESS'\n);\n","export const saveWaitTime = () => {\n    let totalWaitTime = parseInt(localStorage.getItem('total_wait_time'));\n    let numberOfWaits = parseInt(localStorage.getItem('number_of_waits'));\n\n    if (numberOfWaits === null || isNaN(numberOfWaits)) {\n        totalWaitTime = 0;\n        numberOfWaits = 0;\n    }\n\n    let entries = performance.getEntries();\n    let currentWait = 0;\n    entries.forEach(entry => {\n        if (!isNaN(entry.duration)) {\n            currentWait += entry.duration;\n        }\n    });\n\n    totalWaitTime += currentWait;\n    numberOfWaits += 1;\n\n    console.log('currentWait', currentWait);\n    console.log('totalWaitTime', totalWaitTime);\n\n    localStorage.setItem('total_wait_time', totalWaitTime);\n    localStorage.setItem('number_of_waits', numberOfWaits);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Grid } from 'semantic-ui-react';\nimport CollapsibleSection from '../../components/CollapsibleSection';\nimport NetWorth from './NetWorth';\nimport Accounts from './Accounts';\nimport TransactionForm from '../Transactions/Form';\nimport RecentTransactions from './RecentTransactions';\nimport { loadAccounts } from '../../actions/entities/accounts';\nimport { loadRecentTransactions } from '../../actions/entities/transactions';\nimport { loadTags } from '../../actions/entities/tags';\nimport { saveWaitTime } from '../../tracking/wrapper/wait';\n\nclass Dashboard extends React.Component {\n  componentDidMount() {\n    this.props.loadTags();\n    this.props.loadAccounts();\n    this.props.loadRecentTransactions();\n    saveWaitTime();\n  }\n\n  render() {\n    return (\n      <div className=\"container-full-page\">\n        <Grid>\n          <Grid.Row>\n            <Grid.Column computer={6} mobile={16}>\n              <CollapsibleSection\n                name=\"net_worth\"\n                label=\"Net Worth\"\n                LabelComponent={NetWorth}\n              >\n                <Accounts />\n              </CollapsibleSection>\n            </Grid.Column>\n            <Grid.Column computer={10} mobile={16}>\n              <CollapsibleSection name=\"add_tx\" label=\"New Transaction\">\n                <TransactionForm />\n              </CollapsibleSection>\n              <CollapsibleSection name=\"recent_tx\" label=\"Recent Transactions\">\n                <RecentTransactions />\n              </CollapsibleSection>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  loadTags: PropTypes.func,\n  loadAccounts: PropTypes.func,\n  loadRecentTransactions: PropTypes.func\n};\n\nexport default connect(\n  undefined,\n  {\n    loadTags,\n    loadAccounts,\n    loadRecentTransactions\n  }\n)(Dashboard);\n","import { connect } from 'react-redux';\nimport {\n  openTransactionInModal,\n  resetTransactionForm\n} from '../../actions/ui/form/transaction';\nimport { removeTransaction } from '../../actions/entities/transactions';\nimport TransactionList from '../../components/Transaction/List';\nimport { getFilterTransactions } from '../../selectors/entities/transactions';\nimport { getForm } from '../../selectors/ui/form/transaction';\nimport TransactionForm from '../Transactions/Form';\n\nconst mapStateToProps = state => ({\n  currentTransactionId: getForm(state).id,\n  isLoading: state.ui.transaction.filter.isLoading,\n  transactions: getFilterTransactions(state),\n  isModalOpen: getForm(state).isModalOpen,\n  isEdit: getForm(state).id !== undefined,\n  EditForm: TransactionForm\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    openTransactionInModal,\n    resetTransactionForm,\n    removeTransaction\n  }\n)(TransactionList);\n","import React from 'react';\nimport { Modal, Button } from 'semantic-ui-react';\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nconst currentYear = new Date().getFullYear();\nconst fromMonth = new Date(currentYear - 8, 0);\nconst toMonth = new Date(currentYear + 2, 11);\n\nfunction YearMonthForm({ date, localeUtils, onChange }) {\n  const months = localeUtils.getMonths();\n\n  const years = [];\n  for (let i = fromMonth.getFullYear(); i <= toMonth.getFullYear(); i += 1) {\n    years.push(i);\n  }\n\n  const handleChange = function handleChange(e) {\n    const { year, month } = e.target.form;\n    onChange(new Date(year.value, month.value));\n  };\n\n  return (\n    <form className=\"DayPicker-Caption\">\n      <select name=\"month\" onChange={handleChange} value={date.getMonth()}>\n        {months.map((month, i) => (\n          <option key={i} value={i}>\n            {month}\n          </option>\n        ))}\n      </select>\n      <select name=\"year\" onChange={handleChange} value={date.getFullYear()}>\n        {years.map((year, i) => (\n          <option key={i} value={year}>\n            {year}\n          </option>\n        ))}\n      </select>\n    </form>\n  );\n}\n\nclass Calendar extends React.Component {\n  state = {\n    month: null,\n    from: null,\n    to: null\n  };\n\n  handleDayClick = day => {\n    const range = DateUtils.addDayToRange(day, this.state);\n    this.setState(range);\n  };\n\n  handleYearMonthChange = month => {\n    this.setState({ month });\n  };\n\n  handleResetClick = () => {\n    this.setState({\n      month: null,\n      from: null,\n      to: null\n    });\n  };\n\n  handleApplyClick = () => {\n    const { from, to } = this.state;\n\n    this.props.changeFilterDate({\n      dateStart: from.setHours(0, 0, 0),\n      dateEnd: (to && to.setHours(23, 59, 59)) || from.setHours(23, 59, 59)\n    });\n    this.props.toggleFilterCalendar();\n  };\n\n  render() {\n    const { month, from, to } = this.state;\n\n    return (\n      <Modal\n        open={this.props.isCalendarOpen}\n        onClose={this.props.toggleFilterCalendar}\n        className=\"transactions-filter-modal\"\n        closeIcon\n        size=\"small\"\n      >\n        <Modal.Header>Show transactions in range</Modal.Header>\n        <Modal.Content>\n          <DayPicker\n            className=\"Range\"\n            fixedWeeks\n            enableOutsideDays\n            numberOfMonths={this.props.isMobile ? 1 : 2}\n            selectedDays={[from, { from, to }]}\n            month={month}\n            captionElement={\n              <YearMonthForm onChange={this.handleYearMonthChange} />\n            }\n            onDayClick={this.handleDayClick}\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button content=\"Reset\" onClick={this.handleResetClick} />\n          <Button\n            content=\"Apply\"\n            onClick={this.handleApplyClick}\n            positive\n            disabled={this.state.from === null && this.state.to === null}\n          />\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default Calendar;\n","import subDays from 'date-fns/sub_days';\nimport startOfToday from 'date-fns/start_of_today';\nimport endOfToday from 'date-fns/end_of_today';\nimport startOfYesterday from 'date-fns/start_of_yesterday';\nimport endOfYesterday from 'date-fns/end_of_yesterday';\nimport startOfMonth from 'date-fns/start_of_month';\n\nexport enum DateFilterRangeT {\n  today,\n  yesterday,\n  lastWeek,\n  lastMonth,\n  thisMonth,\n  custom\n}\n\ninterface DateFilterItemT {\n  text: string;\n  start: () => Date;\n  end: () => Date;\n}\n\nfunction daysFromToday(days: number) {\n  return () => subDays(startOfToday(), days);\n}\n\nfunction firstDayOfThisMonth() {\n  const date = new Date();\n\n  return startOfMonth(date);\n}\n\nconst lastWeek = daysFromToday(7);\nconst lastMonth = daysFromToday(30);\n\nconst DateFilterRangeMap: { [range in DateFilterRangeT]: DateFilterItemT } = {\n  [DateFilterRangeT.today]: {\n    text: 'Today',\n    start: startOfToday,\n    end: endOfToday\n  },\n  [DateFilterRangeT.yesterday]: {\n    text: 'Yesterday',\n    start: startOfYesterday,\n    end: endOfYesterday\n  },\n  [DateFilterRangeT.lastWeek]: {\n    text: 'Last 7 days',\n    start: lastWeek,\n    end: endOfToday\n  },\n  [DateFilterRangeT.lastMonth]: {\n    text: 'Last 30 days',\n    start: lastMonth,\n    end: endOfToday\n  },\n  [DateFilterRangeT.thisMonth]: {\n    text: 'This month',\n    start: firstDayOfThisMonth,\n    end: endOfToday\n  },\n  [DateFilterRangeT.custom]: {\n    text: 'Custom date',\n    start: startOfToday,\n    end: endOfToday\n  }\n};\n\nexport const defaultDateFilterRange = DateFilterRangeT.lastWeek;\nexport const defaultStart = DateFilterRangeMap[defaultDateFilterRange].start;\nexport const defaultEnd = DateFilterRangeMap[defaultDateFilterRange].end;\n\nexport function getDateFilterRangeStart(key: DateFilterRangeT) {\n  return DateFilterRangeMap[key].start();\n}\n\nexport function getDateFilterRangeEnd(key: DateFilterRangeT) {\n  return DateFilterRangeMap[key].end();\n}\n\nexport function getDateRangeFilterOptions() {\n  return Object.entries(DateFilterRangeMap).map(([key, { text }]) => ({\n    key,\n    value: parseInt(key),\n    text\n  }));\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Form, Dropdown } from 'semantic-ui-react';\nimport { DropdownOption } from '../../types';\n\nclass Filters extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      accounts: this.props.appliedAccounts,\n      tags: this.props.appliedTags\n    };\n  }\n\n  componentWillReceiveProps({ appliedAccounts, appliedTags }) {\n    this.setState({\n      accounts: appliedAccounts,\n      tags: appliedTags\n    });\n  }\n\n  handleAccountChange = (event, { value }) =>\n    this.setState({ accounts: value });\n  handleTagsChange = (event, { value }) => this.setState({ tags: value });\n\n  handleResetClick = () => {\n    this.setState({\n      accounts: [],\n      tags: []\n    });\n  };\n\n  handleApplyClick = () => {\n    this.props.applyFilters(this.state);\n    this.props.toggleFilterModal();\n  };\n\n  render() {\n    return (\n      <Modal\n        open={this.props.isFilterModalOpen}\n        onClose={this.props.toggleFilterModal}\n        closeIcon\n        size=\"tiny\"\n      >\n        <Modal.Header>Filter transactions</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label>Account</label>\n                <Dropdown\n                  multiple\n                  selection\n                  search\n                  closeOnChange\n                  onChange={this.handleAccountChange}\n                  options={this.props.accountOptions}\n                  value={this.state.accounts}\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label>Tags</label>\n                <Dropdown\n                  multiple\n                  selection\n                  search\n                  closeOnChange\n                  onChange={this.handleTagsChange}\n                  options={this.props.tagsOptions}\n                  value={this.state.tags}\n                />\n              </Form.Field>\n            </Form.Group>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button content=\"Reset\" onClick={this.handleResetClick} />\n          <Button content=\"Apply\" onClick={this.handleApplyClick} positive />\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nFilters.propTypes = {\n  isFilterModalOpen: PropTypes.bool,\n  appliedAccounts: PropTypes.arrayOf(PropTypes.string),\n  accountOptions: PropTypes.arrayOf(DropdownOption),\n  appliedTags: PropTypes.arrayOf(PropTypes.string),\n  tagsOptions: PropTypes.arrayOf(DropdownOption),\n  toggleFilterModal: PropTypes.func,\n  applyFilters: PropTypes.func\n};\n\nexport default Filters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from 'semantic-ui-react';\n\nclass AppliedFilters extends React.Component {\n  removeAppliedAccount = accountId => () => {\n    this.props.applyFilters({\n      accounts: this.props.appliedAccounts.filter(acc => acc !== accountId),\n      tags: this.props.appliedTags\n    });\n  };\n\n  removeAppliedTag = tag => () => {\n    this.props.applyFilters({\n      accounts: this.props.appliedAccounts,\n      tags: this.props.appliedTags.filter(t => t !== tag)\n    });\n  };\n\n  render() {\n    if (\n      this.props.appliedAccounts.length === 0 &&\n      this.props.appliedTags.length === 0\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"transactions-filters-applied\">\n        {this.props.appliedAccounts.map(accountId => (\n          <Label\n            key={accountId}\n            content={this.props.accountNameMap[accountId]}\n            icon=\"credit card\"\n            onRemove={this.removeAppliedAccount(accountId)}\n          />\n        ))}\n        {this.props.appliedTags.map(tag => (\n          <Label\n            key={tag}\n            content={tag}\n            icon=\"tag\"\n            onRemove={this.removeAppliedTag(tag)}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nAppliedFilters.propTypes = {\n  appliedTags: PropTypes.arrayOf(PropTypes.string),\n  appliedAccounts: PropTypes.arrayOf(PropTypes.string),\n  accountNameMap: PropTypes.object,\n  applyFilters: PropTypes.func\n};\n\nexport default AppliedFilters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Button } from 'semantic-ui-react';\nimport Calendar from './Calendar';\nimport Filters from './Filters';\nimport AppliedFilters from './AppliedFilters';\nimport {\n  DateFilterRangeT,\n  getDateRangeFilterOptions,\n  defaultDateFilterRange,\n  getDateFilterRangeStart,\n  getDateFilterRangeEnd\n} from 'entities/Transaction/DateFilterRange';\nimport { DropdownOption } from 'components/types';\nimport './index.css';\n\nclass Filter extends React.Component {\n  options = getDateRangeFilterOptions();\n  lastValue = defaultDateFilterRange;\n\n  handleDateRange = (_, { value }) => {\n    if (value === this.lastValue) return;\n    if (value === DateFilterRangeT.custom) {\n      this.props.toggleFilterCalendar();\n    } else {\n      this.props.changeFilterDate({\n        dateStart: getDateFilterRangeStart(value),\n        dateEnd: getDateFilterRangeEnd(value)\n      });\n      this.lastValue = value;\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container-header\">\n          <Button.Group basic fluid>\n            <Button\n              icon=\"plus\"\n              labelPosition=\"left\"\n              content=\"New\"\n              onClick={() =>\n                this.props.openTransactionInModal({\n                  ...(this.props.selectedAccount\n                    ? { accountId: this.props.selectedAccount }\n                    : {})\n                })\n              }\n            />\n            <Dropdown\n              button\n              className=\"icon\"\n              options={this.options}\n              defaultValue={defaultDateFilterRange}\n              onChange={this.handleDateRange}\n              text={this.props.dateRangeLabel}\n              labeled\n              icon=\"calendar\"\n            />\n            <Button icon=\"filter\" onClick={this.props.toggleFilterModal} />\n          </Button.Group>\n          <Calendar {...this.props} />\n          <Filters {...this.props} />\n        </div>\n        <AppliedFilters {...this.props} />\n      </React.Fragment>\n    );\n  }\n}\n\nFilter.propTypes = {\n  isMobile: PropTypes.bool,\n  dateRangeLabel: PropTypes.string,\n  isCalendarOpen: PropTypes.bool,\n  isFilterModalOpen: PropTypes.bool,\n  selectedAccount: PropTypes.string,\n  appliedAccounts: PropTypes.arrayOf(PropTypes.string),\n  accountOptions: PropTypes.arrayOf(DropdownOption),\n  accountNameMap: PropTypes.object,\n  appliedTags: PropTypes.arrayOf(PropTypes.string),\n  tagsOptions: PropTypes.arrayOf(DropdownOption),\n  changeFilterDate: PropTypes.func,\n  toggleFilterCalendar: PropTypes.func,\n  toggleFilterModal: PropTypes.func,\n  applyFilters: PropTypes.func,\n  openTransactionInModal: PropTypes.func\n};\n\nexport default Filter;\n","import { createActions } from 'redux-actions';\n\nexport const {\n  changeFilterDate,\n  toggleFilterCalendar,\n  changeFilterPage,\n  toggleFilterModal,\n  applyFilters\n} = createActions(\n  'CHANGE_FILTER_DATE',\n  'TOGGLE_FILTER_CALENDAR',\n  'CHANGE_FILTER_PAGE',\n  'TOGGLE_FILTER_MODAL',\n  'APPLY_FILTERS'\n);\n","import { connect } from 'react-redux';\nimport Filter from '../../components/Transaction/Filter';\nimport {\n  changeFilterDate,\n  toggleFilterCalendar,\n  toggleFilterModal,\n  applyFilters\n} from '../../actions/ui/transaction/filter';\nimport { openTransactionInModal } from '../../actions/ui/form/transaction';\nimport { getDateLabel } from '../../selectors/ui/transaction/filter';\nimport {\n  getAccountsAsOptions,\n  getAccountsNameMap\n} from '../../selectors/entities/accounts';\nimport { getAllTagsOptions } from '../../selectors/entities/tags';\n\nconst mapStateToProps = state => ({\n  isMobile: state.ui.isMobile,\n  dateRangeLabel: getDateLabel(state),\n  isCalendarOpen: state.ui.transaction.filter.isCalendarOpen,\n  isFilterModalOpen: state.ui.transaction.filter.isFilterModalOpen,\n  accountOptions: getAccountsAsOptions(state),\n  accountNameMap: getAccountsNameMap(state),\n  appliedAccounts: state.ui.transaction.filter.applied.accounts || [],\n  tagsOptions: getAllTagsOptions(state),\n  appliedTags: state.ui.transaction.filter.applied.tags || []\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    changeFilterDate,\n    toggleFilterCalendar,\n    toggleFilterModal,\n    applyFilters,\n    openTransactionInModal\n  }\n)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Menu, Icon } from 'semantic-ui-react';\n\nclass Pager extends React.Component {\n  handlePageChange = nextPage => () => this.props.changeFilterPage(nextPage);\n\n  handlePrevClick = () => {\n    if (this.props.page > 0) {\n      this.props.changeFilterPage(this.props.page - 1);\n    }\n  };\n\n  handleNextClick = () => {\n    const lastPage = this.props.pages[this.props.pages.length - 1];\n    if (this.props.page < lastPage) {\n      this.props.changeFilterPage(this.props.page + 1);\n    }\n  };\n\n  render() {\n    if (this.props.pages.length < 2) return null;\n\n    return (\n      <div className=\"transactions-list-pager\">\n        <Menu pagination>\n          <Menu.Item as=\"a\" icon onClick={this.handlePrevClick}>\n            <Icon name=\"left chevron\" />\n          </Menu.Item>\n          {this.props.pages.map(page => (\n            <Menu.Item\n              as=\"a\"\n              key={page}\n              active={page === this.props.page}\n              onClick={this.handlePageChange(page)}\n            >\n              {page + 1}\n            </Menu.Item>\n          ))}\n          <Menu.Item as=\"a\" icon onClick={this.handleNextClick}>\n            <Icon name=\"right chevron\" />\n          </Menu.Item>\n        </Menu>\n      </div>\n    );\n  }\n}\n\nPager.propTypes = {\n  page: PropTypes.number,\n  pages: PropTypes.arrayOf(PropTypes.number),\n  changeFilterPage: PropTypes.func\n};\n\nexport default Pager;\n","import { connect } from 'react-redux';\nimport Pager from '../../components/Transaction/List/Pager';\nimport { changeFilterPage } from '../../actions/ui/transaction/filter';\nimport {\n  getPage,\n  getVisiblePages\n} from '../../selectors/ui/transaction/filter';\n\nconst mapStateToProps = state => ({\n  page: getPage(state),\n  pages: getVisiblePages(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  { changeFilterPage }\n)(Pager);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport Amount from '../../Amount';\n\nconst Footer = ({ base, income, expense }) => (\n  <div className=\"transactions-list-footer\">\n    <Table fixed basic=\"very\" unstackable>\n      <Table.Body>\n        <Table.Row>\n          <Table.Cell>Total income</Table.Cell>\n          <Table.Cell textAlign=\"right\">\n            <Amount code={base} value={income} />\n          </Table.Cell>\n        </Table.Row>\n        <Table.Row>\n          <Table.Cell>Total expense</Table.Cell>\n          <Table.Cell textAlign=\"right\">\n            <Amount code={base} value={expense} />\n          </Table.Cell>\n        </Table.Row>\n        <Table.Row>\n          <Table.Cell />\n          <Table.Cell textAlign=\"right\">\n            <Amount code={base} value={income + expense} />\n          </Table.Cell>\n        </Table.Row>\n      </Table.Body>\n    </Table>\n  </div>\n);\n\nFooter.propTypes = {\n  base: PropTypes.string,\n  income: PropTypes.number,\n  expense: PropTypes.number\n};\n\nexport default Footer;\n","import { connect } from 'react-redux';\nimport Footer from '../../components/Transaction/List/Footer';\nimport { getFilterTotal } from '../../selectors/entities/transactions';\nimport { getBaseCurrency } from '../../selectors/settings';\nimport { TransationKindT } from '../../entities/Transaction';\n\nconst mapStateToProps = state => ({\n  base: getBaseCurrency(state),\n  income: getFilterTotal(TransationKindT.Income)(state),\n  expense: getFilterTotal(TransationKindT.Expense)(state)\n});\n\nexport default connect(mapStateToProps)(Footer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport List from './List';\nimport Filter from './Filter';\nimport Pager from './Pager';\nimport Footer from './Footer';\nimport { loadAccounts } from '../../actions/entities/accounts';\nimport { loadTags } from '../../actions/entities/tags';\nimport { loadFilterTransactions } from '../../actions/entities/transactions';\nimport { applyFilters } from '../../actions/ui/transaction/filter';\n\nclass Transactions extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.props.applyFilters({\n      accounts: props.match.params.accountId\n        ? [props.match.params.accountId]\n        : []\n    });\n  }\n\n  componentDidMount() {\n    this.props.loadAccounts();\n    this.props.loadTags();\n    this.props.loadFilterTransactions();\n  }\n\n  render() {\n    return (\n      <div className=\"container-full-page flat search-page\">\n        <Filter selectedAccount={this.props.match.params.accountId} />\n        <List />\n        <Pager />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default connect(undefined, {\n  loadAccounts,\n  loadTags,\n  loadFilterTransactions,\n  applyFilters\n})(Transactions);\n","import { createActions } from 'redux-actions';\n\nexport const {\n  fillInAccountForm,\n  resetAccountForm,\n  openAccountInModal,\n  changeName,\n  changeGroup,\n  changeBalance,\n  toggleCurrency,\n  toggleOnDashboard\n} = createActions(\n  'FILL_IN_ACCOUNT_FORM',\n  'RESET_ACCOUNT_FORM',\n  'OPEN_ACCOUNT_IN_MODAL',\n  'CHANGE_NAME',\n  'CHANGE_GROUP',\n  'CHANGE_BALANCE',\n  'TOGGLE_CURRENCY',\n  'TOGGLE_ON_DASHBOARD'\n);\n","export const getForm = state => state.ui.form.account;\nexport const getModal = state => ({\n  isOpen: state.ui.form.account.isModalOpen,\n  isDeleteRequest: state.ui.form.account.isDeleteRequest,\n  isDeleteRunning: state.ui.form.account.isDeleteRunning,\n  itemsToProcess: state.ui.form.account.itemsToProcess,\n  itemsProcessed: state.ui.form.account.itemsProcessed\n});\n","import React from 'react';\nimport { Button, Radio, Dropdown, Form, Progress } from 'semantic-ui-react';\nimport {\n  defaultDeleteStrategy,\n  getDeleteStartegyOptions,\n  DeleteStrategyT\n} from 'entities/Account';\n\nclass DeleteStrategy extends React.Component {\n  state = {\n    strategy: defaultDeleteStrategy\n  };\n\n  onStrategyChange = (e, { value }) => {\n    this.setState({ ...this.state, strategy: value });\n  };\n\n  onAccountChange = (e, { value }) => {\n    this.setState({ ...this.state, moveTo: value });\n  };\n\n  onProceed = () => {\n    this.props.removeAccount({\n      id: this.props.form.id,\n      strategy: this.state.strategy,\n      moveTo: this.getMoveTo()\n    });\n  };\n\n  getMoveTo = () =>\n    this.state.moveTo ||\n    (this.props.accountOptions.length && this.props.accountOptions[0].key);\n\n  render() {\n    const hasMultipleAccounts = this.props.accountOptions.length > 0;\n    return (\n      <React.Fragment>\n        <h3>You are about to delete account \"{this.props.form.name}\"</h3>\n        <p style={{ marginTop: '1em' }}>\n          What should we do with transactions linked to this account?\n        </p>\n        <Form>\n          {getDeleteStartegyOptions(hasMultipleAccounts).map(strategy => (\n            <Form.Field key={strategy.key}>\n              <Radio\n                name=\"deleteStrategy\"\n                label={strategy.text}\n                value={strategy.value}\n                checked={this.state.strategy === strategy.value}\n                onChange={this.onStrategyChange}\n                disabled={this.props.modal.isDeleteRunning}\n              />\n            </Form.Field>\n          ))}\n          {hasMultipleAccounts && this.state.strategy === DeleteStrategyT.Move && (\n            <Form.Field>\n              <Dropdown\n                selection\n                value={this.getMoveTo()}\n                options={this.props.accountOptions}\n                onChange={this.onAccountChange}\n                disabled={this.props.modal.isDeleteRunning}\n              />\n            </Form.Field>\n          )}\n          <Form.Field>\n            {this.props.modal.isDeleteRunning ? (\n              <Progress\n                value={this.props.modal.itemsProcessed}\n                total={this.props.modal.itemsToProcess}\n              />\n            ) : (\n              <Button\n                negative\n                labelPosition=\"right\"\n                icon=\"arrow right\"\n                content=\"Proceed\"\n                onClick={this.onProceed}\n              />\n            )}\n          </Form.Field>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DeleteStrategy;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, Header, Modal } from 'semantic-ui-react';\nimport { DropdownOption } from '../../types';\nimport DeleteStrategy from './DeleteStrategy';\n\nclass ModalForm extends React.Component {\n  reset = () => {\n    if (this.props.modal.isDeleteRunning) return false;\n    this.props.resetAccountForm();\n  };\n\n  render() {\n    return (\n      <Modal\n        closeIcon\n        size=\"small\"\n        className=\"account-form\"\n        open={this.props.modal.isOpen}\n        onClose={this.reset}\n      >\n        <Header\n          icon=\"file text outline\"\n          content={this.props.isEdit ? 'Edit Account' : 'New Account'}\n        />\n        <Modal.Content>\n          {this.props.modal.isDeleteRequest ? (\n            <DeleteStrategy {...this.props} />\n          ) : (\n            <this.props.EditForm />\n          )}\n        </Modal.Content>\n        <Modal.Actions>{this.renderModalActions()}</Modal.Actions>\n      </Modal>\n    );\n  }\n\n  renderModalActions() {\n    if (!this.props.isEdit) return;\n\n    return this.props.modal.isDeleteRequest ? (\n      <Button\n        labelPosition=\"left\"\n        disabled={this.props.modal.isDeleteRunning}\n        onClick={this.props.removeAccountRequest}\n        content=\"Cancel\"\n        icon=\"cancel\"\n      />\n    ) : (\n      <Button\n        negative\n        labelPosition=\"right\"\n        onClick={this.props.removeAccountRequest}\n        content=\"Delete\"\n        icon=\"trash\"\n      />\n    );\n  }\n}\n\nModalForm.propTypes = {\n  modal: PropTypes.shape({\n    isOpen: PropTypes.bool,\n    isDeleteRequest: PropTypes.bool,\n    isDeleteRunning: PropTypes.bool,\n    itemsToProcess: PropTypes.number,\n    itemsProcessed: PropTypes.number\n  }),\n  isEdit: PropTypes.bool,\n  resetAccountForm: PropTypes.func,\n  removeAccountRequest: PropTypes.func,\n  removeAccount: PropTypes.func,\n  EditForm: PropTypes.func,\n  accountOptions: PropTypes.arrayOf(DropdownOption).isRequired\n};\n\nexport default ModalForm;\n","import { connect } from 'react-redux';\nimport AccountsList from '../../components/Account/List';\nimport { getVisibleGroupedAccounts } from '../../selectors/entities/accounts';\nimport {\n  getCollapsedSections,\n  getBaseCurrency\n} from '../../selectors/settings';\nimport { toggleSectionCollapse } from '../../actions/settings';\nimport { openAccountInModal } from '../../actions/ui/form/account';\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  baseCurrency: getBaseCurrency(state),\n  collapsedGroups: getCollapsedSections(state),\n  groups: getVisibleGroupedAccounts(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    toggleSectionCollapse,\n    openAccountInModal\n  }\n)(AccountsList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox, Input, Form } from 'semantic-ui-react';\nimport Amount from '../../../components/Amount';\nimport Currency from '../../../entities/Currency';\n\nclass BalanceTable extends React.Component {\n  componentWillMount() {\n    this.updateCurrencyList(this.props.base, this.props.secondary);\n    this.setInitialCurrencyCheckbox(this.props.base);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.updateCurrencyList(nextProps.base, nextProps.secondary);\n    this.setInitialCurrencyCheckbox(nextProps.base);\n  }\n\n  updateCurrencyList(base, secondary) {\n    this.currencies = [base, ...secondary];\n  }\n\n  setInitialCurrencyCheckbox(base) {\n    if (this.props.form.currencies.length === 0) {\n      this.props.toggleCurrency(base);\n    }\n  }\n\n  handleCurrencyChange = (event, { value }) => {\n    this.props.toggleCurrency(value);\n  };\n\n  handleBalanceChange = code => (event, { value }) => {\n    this.props.changeBalance({ code, balance: value });\n  };\n\n  render() {\n    return this.currencies.map(code => (\n      <Form.Group\n        unstackable\n        key={code}\n        style={{ marginBottom: '1em', marginTop: '1em' }}\n      >\n        <Form.Field className=\"checkbox\" width={9}>\n          <Checkbox\n            value={code}\n            label={Currency.name(code)}\n            checked={this.props.form.currencies.includes(code)}\n            onChange={this.handleCurrencyChange}\n          />\n        </Form.Field>\n        <Form.Field className=\"input-right\" width={7}>\n          {this.props.form.id ? (\n            <Amount\n              code={code}\n              value={Currency.numberToCents(\n                this.props.form.balance[code] || 0,\n                code\n              )}\n            />\n          ) : (\n            <Input\n              fluid\n              type=\"number\"\n              placeholder=\"Balance\"\n              labelPosition=\"right\"\n              label={code}\n              step={Currency.minAmount(code)}\n              value={this.props.form.balance[code] || ''}\n              onChange={this.handleBalanceChange(code)}\n            />\n          )}\n        </Form.Field>\n      </Form.Group>\n    ));\n  }\n}\n\nBalanceTable.propTypes = {\n  base: PropTypes.string.isRequired,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  form: PropTypes.shape({\n    id: PropTypes.string,\n    balance: PropTypes.objectOf(PropTypes.string),\n    currencies: PropTypes.arrayOf(PropTypes.string)\n  }).isRequired,\n  toggleCurrency: PropTypes.func.isRequired,\n  changeBalance: PropTypes.func.isRequired\n};\n\nexport default BalanceTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Checkbox } from 'semantic-ui-react';\nimport { getAccountGroupOptions, formTostate } from 'entities/Account';\nimport BalanceTable from './BalanceTable';\nimport './index.css';\n\nclass AccountForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.groups = getAccountGroupOptions();\n  }\n\n  handleNameChange = (event, { value }) => this.props.changeName(value);\n  handleGroupChange = (event, { value }) => this.props.changeGroup(value);\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.saveAccount(formTostate(this.props.form));\n  };\n\n  render() {\n    return (\n      <Form className=\"account-form\" onSubmit={this.handleSubmit}>\n        <Form.Group>\n          <Form.Input\n            width={9}\n            required\n            label=\"Name\"\n            placeholder=\"Account name\"\n            value={this.props.form.name}\n            onChange={this.handleNameChange}\n          />\n          <Form.Select\n            width={7}\n            label=\"Group\"\n            value={this.props.form.group}\n            options={this.groups}\n            onChange={this.handleGroupChange}\n          />\n        </Form.Group>\n        <BalanceTable {...this.props} />\n        <Form.Group unstackable>\n          <Form.Field width={9} style={{ paddingTop: '0.5em' }}>\n            <Checkbox\n              label=\"Show on Dashboard\"\n              checked={this.props.form.on_dashboard}\n              onChange={this.props.toggleOnDashboard}\n            />\n          </Form.Field>\n          <Form.Button width={7} primary fluid content=\"Save Account\" />\n        </Form.Group>\n      </Form>\n    );\n  }\n}\n\nAccountForm.propTypes = {\n  form: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    group: PropTypes.string,\n    balance: PropTypes.objectOf(PropTypes.string),\n    currencies: PropTypes.arrayOf(PropTypes.string),\n    on_dashboard: PropTypes.bool\n  }),\n  base: PropTypes.string.isRequired,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  changeName: PropTypes.func,\n  changeGroup: PropTypes.func,\n  toggleOnDashboard: PropTypes.func,\n  toggleCurrency: PropTypes.func.isRequired,\n  changeBalance: PropTypes.func.isRequired,\n  saveAccount: PropTypes.func\n};\n\nexport default AccountForm;\n","import { connect } from 'react-redux';\nimport AccountForm from '../../components/Account/Form';\nimport {\n  changeName,\n  changeGroup,\n  changeBalance,\n  toggleOnDashboard,\n  toggleCurrency\n} from '../../actions/ui/form/account';\nimport { saveAccount, removeAccount } from '../../actions/entities/accounts';\nimport {\n  getBaseCurrency,\n  getSecondaryCurrency\n} from '../../selectors/settings';\nimport { getForm } from '../../selectors/ui/form/account';\n\nconst mapStateToProps = state => ({\n  form: getForm(state),\n  base: getBaseCurrency(state),\n  secondary: getSecondaryCurrency(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    changeName,\n    changeGroup,\n    changeBalance,\n    toggleCurrency,\n    toggleOnDashboard,\n    saveAccount,\n    removeAccount\n  }\n)(AccountForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport {\n  loadAccounts,\n  removeAccountRequest,\n  removeAccount\n} from '../../actions/entities/accounts';\nimport {\n  openAccountInModal,\n  resetAccountForm\n} from '../../actions/ui/form/account';\nimport { getForm, getModal } from '../../selectors/ui/form/account';\nimport ModalForm from '../../components/Account/ModalForm';\nimport AccountsList from './List';\nimport AccountForm from './Form';\nimport { getAccountsAsOptions } from '../../selectors/entities/accounts';\nimport { saveWaitTime } from '../../tracking/wrapper/wait';\n\nclass Accounts extends React.Component {\n  componentWillMount() {\n    this.props.loadAccounts();\n    saveWaitTime();\n  }\n\n  render() {\n    return (\n      <div className=\"container-full-page flat\">\n        <div className=\"container-header\">\n          <Button.Group basic>\n            <Button\n              icon=\"plus\"\n              labelPosition=\"left\"\n              content=\"New\"\n              onClick={this.props.openAccountInModal}\n            />\n          </Button.Group>\n        </div>\n        <div className=\"accounts-list-wrapper\">\n          <AccountsList />\n        </div>\n        <ModalForm {...this.props} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  form: getForm(state),\n  modal: getModal(state),\n  isEdit: getForm(state).id !== undefined,\n  accountOptions: getAccountsAsOptions(state).filter(\n    option => option.key !== getForm(state).id\n  ),\n  EditForm: AccountForm\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    loadAccounts,\n    openAccountInModal,\n    resetAccountForm,\n    removeAccountRequest,\n    removeAccount\n  }\n)(Accounts);\n","import { createActions } from 'redux-actions';\n\nexport const {\n  changeReportKind,\n  changeReportTimespan,\n  changeReportAccounts,\n  changeReportExcludedTags,\n  moveReportDateBackwards,\n  moveReportDateForwards,\n  loadReport,\n  loadReportSuccess,\n  loadReportFailure\n} = createActions(\n  'CHANGE_REPORT_KIND',\n  'CHANGE_REPORT_TIMESPAN',\n  'CHANGE_REPORT_ACCOUNTS',\n  'CHANGE_REPORT_EXCLUDED_TAGS',\n  'MOVE_REPORT_DATE_BACKWARDS',\n  'MOVE_REPORT_DATE_FORWARDS',\n  'LOAD_REPORT',\n  'LOAD_REPORT_SUCCESS',\n  'LOAD_REPORT_FAILURE'\n);\n","import format from 'date-fns/format';\nimport getDaysInMonth from 'date-fns/get_days_in_month';\nimport range from 'lodash/range';\nimport Currency, { ExchangeRateT } from 'entities/Currency';\nimport { ReportDataT, ReportStateT, ReportTimespanT } from 'entities/Report';\nimport { TransactionStateT, TransationKindT } from 'entities/Transaction';\nimport { toUtcTimestamp } from 'util/timezone';\n\nconst { Expense, Income } = TransationKindT;\n\nexport default function ExpenseIncomeData(\n  report: ReportStateT,\n  transactions: TransactionStateT[],\n  exchangeRate: ExchangeRateT,\n  base: string\n): ReportDataT {\n  const labels =\n    report.timespan === ReportTimespanT.Yearly\n      ? range(0, 12).map(month => format(new Date().setMonth(month), 'MMM'))\n      : range(1, getDaysInMonth(report.date.start) + 1).map(day =>\n          `${day}`.padStart(2, '0')\n        );\n  const data = [\n    new Array(labels.length).fill(0), // income series\n    new Array(labels.length).fill(0) // expense series\n  ];\n  const excluded = new Set(report.excludeTags);\n\n  for (const tx of transactions) {\n    if (tx.kind !== Expense && tx.kind !== Income) continue;\n\n    const period = format(\n      toUtcTimestamp(tx.date),\n      report.timespan === ReportTimespanT.Yearly ? 'M' : 'D'\n    );\n    const txAmount = Currency.convert(\n      Math.abs(tx.amount),\n      exchangeRate[tx.currency],\n      base,\n      tx.currency\n    );\n    data[tx.kind === Income ? 0 : 1][parseInt(period) - 1] += txAmount;\n    if (tx.tags && tx.tags.find(tag => excluded.has(tag))) {\n      data[0][parseInt(period) - 1] -= txAmount;\n      data[1][parseInt(period) - 1] -= txAmount;\n    }\n  }\n\n  return {\n    labels,\n    series: data.map(set =>\n      set.map(amount => Math.floor(Currency.centsToNumber(amount, base)))\n    )\n  };\n}\n","import addMonths from 'date-fns/add_months';\nimport addYears from 'date-fns/add_years';\nimport endOfMonth from 'date-fns/end_of_month';\nimport endOfYear from 'date-fns/end_of_year';\nimport format from 'date-fns/format';\nimport startOfMonth from 'date-fns/start_of_month';\nimport startOfYear from 'date-fns/start_of_year';\nimport subMonths from 'date-fns/sub_months';\nimport subYears from 'date-fns/sub_years';\nimport { ExchangeRateT } from 'entities/Currency';\nimport { toUtcTimestamp } from 'util/timezone';\nimport { TransactionStateT } from './Transaction';\nimport ExpenseIncomeDataLoader from './Report/ExpenseIncomeData';\nimport NetWorthDataLoader from './Report/NetWorthData';\nimport ExpenseTagsDataLoader from './Report/ExpenseTagsData';\n\nexport interface ReportDataT {\n  labels: string[];\n  series: number[][];\n  netWorthStart?: number;\n  netWorthEnd?: number;\n}\n\nexport interface ReportStateT {\n  kind: ReportKindT;\n  data: ReportDataT;\n  date: DateRangeT;\n  timespan: ReportTimespanT;\n  accounts: string[];\n  excludeTags: string[];\n  netWorthStack: number[];\n  isLoading: boolean;\n}\n\nexport enum ReportKindT {\n  ExpenseIncome = 'expense_income',\n  NetIncome = 'net_income',\n  ExpenseTags = 'expense_tags',\n  NetWorth = 'net_worth'\n}\n\nexport enum ReportTimespanT {\n  Yearly = 'yearly',\n  Monthly = 'monthly'\n}\n\ninterface DateRangeT {\n  start: number; // timestamp\n  end: number; // timestamp\n}\n\nconst { Yearly, Monthly } = ReportTimespanT;\nexport const defaultKind = ReportKindT.ExpenseIncome;\nexport const defaultTimespan = Yearly;\n\nexport function defaultDate(timespan = defaultTimespan) {\n  return dateRange(new Date(), timespan);\n}\n\nexport function moveDateBackwards(\n  { start }: DateRangeT,\n  timespan: ReportTimespanT\n) {\n  return dateRange(\n    timespan === Yearly ? subYears(start, 1) : subMonths(start, 1),\n    timespan\n  );\n}\n\nexport function moveDateForwards(\n  { start }: DateRangeT,\n  timespan: ReportTimespanT\n) {\n  return dateRange(\n    timespan === Yearly ? addYears(start, 1) : addMonths(start, 1),\n    timespan\n  );\n}\n\nexport function kindOptions() {\n  return [\n    {\n      key: ReportKindT.ExpenseIncome,\n      value: ReportKindT.ExpenseIncome,\n      text: 'Expense & Income'\n    },\n    {\n      key: ReportKindT.ExpenseTags,\n      value: ReportKindT.ExpenseTags,\n      text: 'Expense by Tags'\n    },\n    {\n      key: ReportKindT.NetIncome,\n      value: ReportKindT.NetIncome,\n      text: 'Net Income'\n    },\n    {\n      key: ReportKindT.NetWorth,\n      value: ReportKindT.NetWorth,\n      text: 'Net Worth'\n    }\n  ];\n}\n\nexport function timespanOptions() {\n  return [\n    {\n      key: Yearly,\n      value: Yearly,\n      text: 'Yearly'\n    },\n    {\n      key: Monthly,\n      value: Monthly,\n      text: 'Monthly'\n    }\n  ];\n}\n\nexport function timespanLabel(date: Date, timespan: ReportTimespanT) {\n  return format(date, timespan === Yearly ? 'YYYY' : 'MMM, YYYY');\n}\n\nexport function transactionFilters({ date, accounts }: ReportStateT) {\n  return { date, accounts };\n}\n\ntype DataLoaderFn = (\n  report: ReportStateT,\n  transactions: TransactionStateT[],\n  exchangeRate: ExchangeRateT,\n  base: string,\n  netWorthEnd: number\n) => ReportDataT;\ntype DataLoaderMapT = { [kind in ReportKindT]: DataLoaderFn };\n\nconst DataLoaderMap: DataLoaderMapT = {\n  [ReportKindT.ExpenseIncome]: ExpenseIncomeDataLoader,\n  [ReportKindT.NetIncome]: ExpenseIncomeDataLoader,\n  [ReportKindT.ExpenseTags]: ExpenseTagsDataLoader,\n  [ReportKindT.NetWorth]: NetWorthDataLoader\n};\n\nexport const loadReportData: DataLoaderFn = (report, ...rest) => {\n  return DataLoaderMap[report.kind](report, ...rest);\n};\n\nfunction dateRange(date: Date | number, timespan: ReportTimespanT): DateRangeT {\n  const startFn = timespan === Yearly ? startOfYear : startOfMonth;\n  const endFn = timespan === Yearly ? endOfYear : endOfMonth;\n  const tomorrow = new Date(date);\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  return {\n    start: toUtcTimestamp(startFn(tomorrow)),\n    end: toUtcTimestamp(endFn(tomorrow))\n  };\n}\n","import format from 'date-fns/format';\nimport getDaysInMonth from 'date-fns/get_days_in_month';\nimport range from 'lodash/range';\nimport { toUtcTimestamp } from 'util/timezone';\nimport Currency, { ExchangeRateT } from 'entities/Currency';\nimport { ReportStateT, ReportDataT, ReportTimespanT } from 'entities/Report';\nimport { TransactionStateT, TransationKindT } from 'entities/Transaction';\n\nconst { Expense, Income } = TransationKindT;\n\nexport default function NetWorthData(\n  report: ReportStateT,\n  transactions: TransactionStateT[],\n  exchangeRate: ExchangeRateT,\n  base: string,\n  netWorthEnd: number\n): ReportDataT {\n  const labels =\n    report.timespan === ReportTimespanT.Yearly\n      ? range(0, 12).map(month => format(new Date().setMonth(month), 'MMM'))\n      : range(1, getDaysInMonth(report.date.start) + 1).map(day =>\n          `${day}`.padStart(2, '0')\n        );\n\n  const data = [];\n  let lastPeriod: number | undefined;\n  for (const tx of transactions) {\n    if (tx.kind !== Expense && tx.kind !== Income) continue;\n\n    const period =\n      parseInt(\n        format(\n          toUtcTimestamp(tx.date),\n          report.timespan === ReportTimespanT.Yearly ? 'M' : 'D'\n        )\n      ) - 1;\n    if (period !== lastPeriod) {\n      if (lastPeriod === undefined) {\n        lastPeriod = period + 1;\n        data[lastPeriod] = netWorthEnd;\n      }\n      data[period] = data[lastPeriod];\n    }\n\n    lastPeriod = period;\n\n    data[period] -= Currency.convert(\n      tx.amount,\n      exchangeRate[tx.currency],\n      base,\n      tx.currency\n    );\n  }\n\n  if (lastPeriod && lastPeriod > 0) data[0] = data[lastPeriod];\n  if (report.date.end < Date.now() && data.length < labels.length) {\n    data[labels.length - 1] = data[data.length - 1];\n  }\n\n  return {\n    labels,\n    series: [\n      data.map(amount => Math.floor(Currency.centsToNumber(amount, base)))\n    ],\n    netWorthStart: data[0],\n    netWorthEnd\n  };\n}\n","import Currency, { ExchangeRateT } from 'entities/Currency';\nimport { TransactionStateT, TransationKindT } from 'entities/Transaction';\nimport { ReportDataT, ReportStateT } from 'entities/Report';\n\nexport default function ExpenseTagsData(\n  report: ReportStateT,\n  transactions: TransactionStateT[],\n  exchangeRate: ExchangeRateT,\n  base: string\n): ReportDataT {\n  const data = new Map();\n  const excluded = new Set(report.excludeTags);\n\n  for (const tx of transactions) {\n    if (\n      tx.kind !== TransationKindT.Expense ||\n      !tx.tags ||\n      tx.tags.find(tag => excluded.has(tag))\n    ) {\n      continue;\n    }\n    for (const tag of tx.tags) {\n      const tagAmount = data.get(tag) || 0;\n      const amount = Currency.convert(\n        Math.abs(tx.amount),\n        exchangeRate[tx.currency],\n        base,\n        tx.currency\n      );\n      data.set(tag, tagAmount + amount);\n    }\n  }\n\n  const sorted = new Map([...data.entries()].sort((a, b) => b[1] - a[1]));\n\n  return {\n    labels: [...sorted.keys()],\n    series: [\n      [...sorted.values()].map(amount =>\n        Math.floor(Currency.centsToNumber(amount, base))\n      )\n    ]\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ChartistGraph from 'react-chartist';\nimport Chartist from 'chartist';\nimport abbreviate from 'number-abbreviate';\nimport 'chartist-plugin-tooltips';\nimport 'chartist/dist/chartist.min.css';\nimport 'chartist-plugin-tooltips/dist/chartist-plugin-tooltip.css';\nimport { Statistic } from 'semantic-ui-react';\nimport Amount from '../../Amount';\nimport Currency from '../../../entities/Currency';\n\nclass ExpenseIncome extends React.Component {\n  render() {\n    const options = {\n      axisY: {\n        labelInterpolationFnc: value => abbreviate(value, 2)\n      },\n      plugins: [\n        Chartist.plugins.tooltip({\n          class: 'mono',\n          currency: this.props.currency,\n          anchorToPoint: true\n        })\n      ]\n    };\n    const { data, base } = this.props;\n    const income = data.series ? data.series[0].filter(val => val !== 0) : [];\n    const expense = data.series ? data.series[1].filter(val => val !== 0) : [];\n\n    return (\n      <React.Fragment>\n        <div className=\"mt-report-stats\">\n          <Statistic.Group size=\"mini\">\n            <Statistic>\n              <Statistic.Value>\n                <Amount\n                  code={base}\n                  value={Currency.numberToCents(\n                    income.reduce((sum, cur) => sum + cur, 0),\n                    base\n                  )}\n                  showCents={false}\n                />\n              </Statistic.Value>\n              <Statistic.Label>Total income</Statistic.Label>\n            </Statistic>\n            <Statistic>\n              <Statistic.Value>\n                <Amount\n                  code={base}\n                  value={\n                    Currency.numberToCents(\n                      expense.reduce((sum, cur) => sum + cur, 0),\n                      base\n                    ) * -1\n                  }\n                  showCents={false}\n                />\n              </Statistic.Value>\n              <Statistic.Label>Total expense</Statistic.Label>\n            </Statistic>\n          </Statistic.Group>\n        </div>\n        <ChartistGraph\n          type=\"Bar\"\n          className=\"ct-octave mt-report-expense-income\"\n          data={data}\n          options={options}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nExpenseIncome.propTypes = {\n  currency: PropTypes.string,\n  data: PropTypes.shape({\n    labels: PropTypes.array,\n    series: PropTypes.array\n  })\n};\n\nexport default ExpenseIncome;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ChartistGraph from 'react-chartist';\nimport Chartist from 'chartist';\nimport abbreviate from 'number-abbreviate';\nimport 'chartist-plugin-tooltips';\nimport 'chartist/dist/chartist.min.css';\nimport 'chartist-plugin-tooltips/dist/chartist-plugin-tooltip.css';\nimport Amount from '../../Amount';\nimport { Statistic } from 'semantic-ui-react';\nimport Currency from '../../../entities/Currency';\n\nclass ExpenseIncome extends React.Component {\n  render() {\n    const options = {\n      axisY: {\n        labelInterpolationFnc: value => abbreviate(value, 2)\n      },\n      plugins: [\n        Chartist.plugins.tooltip({\n          class: 'mono',\n          currency: this.props.currency,\n          anchorToPoint: true\n        })\n      ]\n    };\n    const { data, base } = this.props;\n    const series = data.series[0].map(\n      (income, idx) => income - data.series[1][idx]\n    );\n    const nonEmptyValues = series.filter(val => val !== 0);\n\n    return (\n      <React.Fragment>\n        {nonEmptyValues.length > 0 && (\n          <div className=\"mt-report-stats\">\n            <Statistic.Group size=\"mini\">\n              <Statistic>\n                <Statistic.Value>\n                  <Amount\n                    code={base}\n                    value={Currency.numberToCents(\n                      nonEmptyValues.reduce((sum, cur) => sum + cur, 0),\n                      base\n                    )}\n                    showCents={false}\n                  />\n                </Statistic.Value>\n                <Statistic.Label>Total net income</Statistic.Label>\n              </Statistic>\n              <Statistic>\n                <Statistic.Value>\n                  <Amount\n                    code={base}\n                    value={Currency.numberToCents(\n                      nonEmptyValues.reduce((sum, cur) => sum + cur, 0) /\n                        nonEmptyValues.length,\n                      base\n                    )}\n                    showCents={false}\n                  />\n                </Statistic.Value>\n                <Statistic.Label>Average net income</Statistic.Label>\n              </Statistic>\n            </Statistic.Group>\n          </div>\n        )}\n        <ChartistGraph\n          type=\"Bar\"\n          className=\"ct-octave mt-report-expense-income\"\n          data={{ ...data, series: [series] }}\n          options={options}\n          listener={{\n            draw: data => {\n              if (data.type === 'bar' && data.value.y < 0) {\n                data.element.attr({ style: 'stroke: #f44336' });\n              }\n            }\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nExpenseIncome.propTypes = {\n  currency: PropTypes.string,\n  data: PropTypes.shape({\n    labels: PropTypes.array,\n    series: PropTypes.array\n  })\n};\n\nexport default ExpenseIncome;\n","import Chartist from 'chartist';\nimport 'chartist-plugin-tooltips';\nimport 'chartist-plugin-tooltips/dist/chartist-plugin-tooltip.css';\nimport 'chartist/dist/chartist.min.css';\nimport abbreviate from 'number-abbreviate';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ChartistGraph from 'react-chartist';\n\nclass ExpenseTags extends React.Component {\n  render() {\n    const options = {\n      axisY: {\n        offset: 70\n      },\n      axisX: {\n        labelInterpolationFnc: value => abbreviate(value, 2)\n      },\n      reverseData: true,\n      horizontalBars: true,\n      plugins: [\n        Chartist.plugins.tooltip({\n          class: 'mono',\n          currency: this.props.currency,\n          anchorToPoint: true\n        })\n      ]\n    };\n\n    return (\n      <ChartistGraph\n        type=\"Bar\"\n        className=\"mt-report-expense-tags\"\n        style={{ height: `${this.props.data.labels.length * 3}em` }}\n        data={this.props.data}\n        options={options}\n      />\n    );\n  }\n}\n\nExpenseTags.propTypes = {\n  currency: PropTypes.string,\n  data: PropTypes.shape({\n    labels: PropTypes.array,\n    series: PropTypes.array\n  })\n};\n\nexport default ExpenseTags;\n","import Chartist from 'chartist';\nimport 'chartist-plugin-tooltips';\nimport 'chartist-plugin-tooltips/dist/chartist-plugin-tooltip.css';\nimport 'chartist/dist/chartist.min.css';\nimport abbreviate from 'number-abbreviate';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ChartistGraph from 'react-chartist';\n\nclass NetWorth extends React.Component {\n  render() {\n    const options = {\n      showArea: true,\n      low: 0,\n      axisY: {\n        labelInterpolationFnc: value => abbreviate(value, 2)\n      },\n      plugins: [\n        Chartist.plugins.tooltip({\n          class: 'mono',\n          currency: this.props.currency,\n          anchorToPoint: true\n        })\n      ]\n    };\n\n    return (\n      <ChartistGraph\n        type=\"Line\"\n        className=\"ct-octave mt-report-net-worth\"\n        data={this.props.data}\n        options={options}\n      />\n    );\n  }\n}\n\nNetWorth.propTypes = {\n  currency: PropTypes.string,\n  data: PropTypes.shape({\n    labels: PropTypes.array,\n    series: PropTypes.array\n  })\n};\n\nexport default NetWorth;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Loader } from 'semantic-ui-react';\nimport { ReportKindT } from 'entities/Report';\nimport ExpenseIncome from './Kind/ExpenseIncome';\nimport NetIncome from './Kind/NetIncome';\nimport ExpenseTags from './Kind/ExpenseTags';\nimport NetWorth from './Kind/NetWorth';\nimport './index.css';\n\nclass Report extends React.Component {\n  render() {\n    return (\n      <div className=\"ct-octave mt-report\">\n        <Loader active={this.props.isLoading} />\n\n        {!this.props.isLoading && this.renderReportByKind()}\n      </div>\n    );\n  }\n\n  renderReportByKind() {\n    switch (this.props.kind) {\n      case ReportKindT.ExpenseIncome:\n        return <ExpenseIncome {...this.props} />;\n      case ReportKindT.NetIncome:\n        return <NetIncome {...this.props} />;\n      case ReportKindT.NetWorth:\n        return <NetWorth {...this.props} />;\n      case ReportKindT.ExpenseTags:\n        return <ExpenseTags {...this.props} />;\n      default:\n        return 'Not available';\n    }\n  }\n}\n\nReport.propTypes = {\n  isLoading: PropTypes.bool,\n  currency: PropTypes.string,\n  kind: PropTypes.string,\n  data: PropTypes.shape({\n    labels: PropTypes.array,\n    series: PropTypes.array\n  })\n};\n\nexport default Report;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Button } from 'semantic-ui-react';\n\nclass Navigation extends React.Component {\n  handleKindChange = (_, { value }) => {\n    this.props.changeReportKind(value);\n  };\n\n  handleTimespanChange = (_, { value }) => {\n    this.props.changeReportTimespan(value);\n  };\n\n  render() {\n    return (\n      <div className=\"container-header\">\n        <Button.Group basic>\n          <Dropdown\n            button\n            value={this.props.kind}\n            options={this.props.kindOptions}\n            onChange={this.handleKindChange}\n          />\n          <Button\n            icon=\"chevron left\"\n            onClick={this.props.moveReportDateBackwards}\n          />\n          <Dropdown\n            basic\n            button\n            icon={false}\n            text={this.props.timespanLabel}\n            value={this.props.timespan}\n            options={this.props.timespanOptions}\n            onChange={this.handleTimespanChange}\n          />\n          <Button\n            icon=\"chevron right\"\n            onClick={this.props.moveReportDateForwards}\n          />\n        </Button.Group>\n      </div>\n    );\n  }\n}\n\nNavigation.propTypes = {\n  kind: PropTypes.string,\n  kindOptions: PropTypes.array,\n  timespan: PropTypes.string,\n  timespanLabel: PropTypes.string,\n  timespanOptions: PropTypes.array,\n  changeReportKind: PropTypes.func,\n  changeReportTimespan: PropTypes.func,\n  moveReportDateBackwards: PropTypes.func,\n  moveReportDateForwards: PropTypes.func\n};\n\nexport default Navigation;\n","import { timespanLabel } from 'entities/Report';\n\nexport const getReport = state => state.ui.report;\nexport const getTimespanLabel = state => {\n  const startDate = new Date(state.ui.report.date.start);\n  startDate.setDate(startDate.getDate() + 1);\n  return timespanLabel(startDate, state.ui.report.timespan);\n};\n","import { connect } from 'react-redux';\nimport Navigation from 'components/Report/Navigation';\nimport {\n  changeReportKind,\n  changeReportTimespan,\n  moveReportDateBackwards,\n  moveReportDateForwards\n} from 'actions/ui/report';\nimport { getTimespanLabel } from 'selectors/ui/report';\nimport { kindOptions, timespanOptions } from 'entities/Report';\n\nconst mapStateToProps = state => ({\n  kind: state.ui.report.kind,\n  kindOptions: kindOptions(),\n  timespan: state.ui.report.timespan,\n  timespanOptions: timespanOptions(),\n  timespanLabel: getTimespanLabel(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    changeReportKind,\n    changeReportTimespan,\n    moveReportDateBackwards,\n    moveReportDateForwards\n  }\n)(Navigation);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\nimport { DropdownOption } from '../types';\n\nclass Filter extends React.Component {\n  handleAccountsChange = (_, { value }) => {\n    this.props.changeReportAccounts(value);\n  };\n\n  handleTagsChange = (_, { value }) => {\n    this.props.changeReportExcludedTags(value);\n  };\n\n  render() {\n    return (\n      <div className=\"container-footer\">\n        <Dropdown\n          multiple\n          selection\n          fluid\n          placeholder=\"Specify accounts\"\n          value={this.props.accounts}\n          options={this.props.accountOptions}\n          onChange={this.handleAccountsChange}\n        />\n        <Dropdown\n          multiple\n          selection\n          fluid\n          search\n          placeholder=\"Exclude tags\"\n          value={this.props.excludeTags}\n          options={this.props.tagsOptions}\n          onChange={this.handleTagsChange}\n        />\n      </div>\n    );\n  }\n}\n\nFilter.propTypes = {\n  accounts: PropTypes.array,\n  accountOptions: PropTypes.array,\n  changeReportAccounts: PropTypes.func,\n  excludeTags: PropTypes.arrayOf(PropTypes.string),\n  tagsOptions: PropTypes.arrayOf(DropdownOption),\n  changeReportExcludedTags: PropTypes.func\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\nimport Filter from '../../components/Report/Filter';\nimport {\n  changeReportAccounts,\n  changeReportExcludedTags\n} from '../../actions/ui/report';\nimport { getAccountsAsOptions } from '../../selectors/entities/accounts';\nimport { getAllTagsOptions } from '../../selectors/entities/tags';\n\nconst mapStateToProps = state => ({\n  accounts: state.ui.report.accounts,\n  accountOptions: getAccountsAsOptions(state),\n  excludeTags: state.ui.report.excludeTags,\n  tagsOptions: getAllTagsOptions(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  { changeReportAccounts, changeReportExcludedTags }\n)(Filter);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { loadReport } from 'actions/ui/report';\nimport { loadAccounts } from 'actions/entities/accounts';\nimport { getBaseCurrency, getBaseCurrencySymbol } from 'selectors/settings';\nimport Report from 'components/Report';\nimport Navigation from './Navigation';\nimport Filter from './Filter';\nimport { saveWaitTime } from '../../tracking/wrapper/wait';\n\nclass Reports extends React.Component {\n  componentWillMount() {\n    this.props.loadAccounts();\n    this.props.loadReport();\n    saveWaitTime();\n  }\n\n  render() {\n    return (\n      <div className=\"container-full-page flat\">\n        <Navigation />\n        <Report {...this.props} />\n        <Filter />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.ui.report.isLoading,\n  currency: getBaseCurrencySymbol(state),\n  base: getBaseCurrency(state),\n  kind: state.ui.report.kind,\n  data: state.ui.report.data\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadAccounts, loadReport }\n)(Reports);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Form } from 'semantic-ui-react';\nimport Currency from '../../../entities/Currency';\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.options = Currency.options();\n    this.updateSecondaryOptions(props.base);\n  }\n\n  componentWillReceiveProps(props) {\n    this.updateSecondaryOptions(props.base);\n  }\n\n  updateSecondaryOptions(base) {\n    this.secondaryOptions = this.options.filter(option => option.key !== base);\n  }\n\n  handleBaseChange = (event, { value }) => {\n    this.props.changeSettingsCurrency({\n      base: value,\n      secondary: this.props.secondary\n    });\n  };\n\n  handleSecondaryChange = (event, { value }) => {\n    this.props.changeSettingsCurrency({\n      base: this.props.base,\n      secondary: value\n    });\n  };\n\n  render() {\n    return (\n      <Form>\n        <Form.Group widths=\"equal\">\n          <Form.Field>\n            <label>Base Currency</label>\n            <Dropdown\n              search\n              selection\n              onChange={this.handleBaseChange}\n              options={this.options}\n              value={this.props.base}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Additional Currencies (optional)</label>\n            <Dropdown\n              placeholder=\"Select additional currencies\"\n              search\n              selection\n              multiple\n              renderLabel={item => item.key}\n              closeOnChange\n              onChange={this.handleSecondaryChange}\n              options={this.secondaryOptions}\n              value={this.props.secondary}\n            />\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    );\n  }\n}\n\nInput.propTypes = {\n  base: PropTypes.string,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  changeSettingsCurrency: PropTypes.func\n};\n\nexport default Input;\n","import { connect } from 'react-redux';\nimport { changeSettingsCurrency } from '../../../actions/settings';\nimport {\n  getBaseCurrency,\n  getSecondaryCurrency\n} from '../../../selectors/settings';\nimport Input from '../../../components/Settings/Currency/Input';\n\nconst mapStateToProps = state => ({\n  base: getBaseCurrency(state),\n  secondary: getSecondaryCurrency(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  { changeSettingsCurrency }\n)(Input);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\n\nconst ExchangeRateGrid = props => {\n  const currencies = [props.base, ...props.secondary];\n  return (\n    <Table celled unstackable definition>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell />\n          {currencies.map(code => (\n            <Table.HeaderCell key={code} textAlign=\"center\" content={code} />\n          ))}\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {currencies.map(code => (\n          <Table.Row key={code}>\n            <Table.Cell textAlign=\"center\" content={code} />\n            {currencies.map(other => {\n              const rate = props.exchangeRate[other] / props.exchangeRate[code];\n              return (\n                <Table.Cell\n                  key={`${code}-${other}`}\n                  disabled={code === other}\n                  textAlign=\"center\"\n                  content={Number(rate).toLocaleString(undefined, {\n                    minimumFractionDigits: 4,\n                    maximumFractionDigits: rate < 0.001 ? 6 : 4\n                  })}\n                />\n              );\n            })}\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n\nExchangeRateGrid.propTypes = {\n  base: PropTypes.string,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  exchangeRate: PropTypes.objectOf(PropTypes.number)\n};\n\nexport default ExchangeRateGrid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\n\nclass ExchangeRateTable extends React.Component {\n  render() {\n    const { base, secondary, exchangeRate } = this.props;\n    return (\n      <Table basic>\n        <Table.Body>\n          {secondary.map(code => (\n            <Table.Row key={code}>\n              <Table.Cell>\n                1 {code} = {Number(1 / exchangeRate[code]).toFixed(6)} {base}\n              </Table.Cell>\n              <Table.Cell>\n                1 {base} = {exchangeRate[code]} {code}\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nExchangeRateTable.propTypes = {\n  base: PropTypes.string,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  exchangeRate: PropTypes.objectOf(PropTypes.number)\n};\n\nexport default ExchangeRateTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Dimmer, Loader, Button } from 'semantic-ui-react';\nimport ExchangeRateGrid from './ExchangeRateGrid';\nimport ExchangeRateTable from './ExchangeRateTable';\nimport './index.css';\n\nconst ExchangeRate = props =>\n  props.secondary.length > 0 && (\n    <Segment basic className=\"exchange-rate-table\">\n      <Dimmer inverted active={props.isLoading}>\n        <Loader />\n      </Dimmer>\n      {props.isMobile ? (\n        <ExchangeRateTable {...props} />\n      ) : (\n        <ExchangeRateGrid {...props} />\n      )}\n      <Button\n        basic\n        content=\"Update exchange rate\"\n        icon=\"refresh\"\n        onClick={props.updateExchangeRate}\n      />\n    </Segment>\n  );\n\nExchangeRate.propTypes = {\n  base: PropTypes.string,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  isLoading: PropTypes.bool,\n  isMobile: PropTypes.bool,\n  exchangeRate: PropTypes.objectOf(PropTypes.number),\n  updateExchangeRate: PropTypes.func\n};\n\nexport default ExchangeRate;\n","import { connect } from 'react-redux';\nimport { updateExchangeRate } from '../../../actions/settings';\nimport {\n  getBaseCurrency,\n  getSecondaryCurrency,\n  getExchangeRate\n} from '../../../selectors/settings';\nimport ExchangeRate from '../../../components/Settings/Currency/ExchangeRate';\n\nconst mapStateToProps = state => ({\n  base: getBaseCurrency(state),\n  secondary: getSecondaryCurrency(state),\n  exchangeRate: getExchangeRate(state),\n  isLoading: state.ui.settings.isExchangeLoading,\n  isMobile: state.ui.isMobile\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateExchangeRate }\n)(ExchangeRate);\n","import PouchDB from 'pouchdb';\n\nconst instancePool = {};\n\nfunction instance(name) {\n  if (instancePool[name] === undefined) {\n    instancePool[name] = new PouchDB(name, { auto_compaction: true });\n  }\n\n  return instancePool[name];\n}\n\nfunction remoteInstance(name) {\n  const instanceName = `remote_${name}`;\n  if (instancePool[instanceName] === undefined) {\n    const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n    if (userInfo && userInfo.couchDB && userInfo.couchDB[name]) {\n      const { username, password } = userInfo.couchDB;\n      instancePool[instanceName] = new PouchDB(userInfo.couchDB[name], {\n        skipSetup: true,\n        auth: username && password ? { username, password } : undefined\n      });\n    }\n  }\n\n  return instancePool[instanceName];\n}\n\nfunction destroyInstance(name) {\n  if (instancePool[name] !== undefined) {\n    const instance = instancePool[name];\n    delete instancePool[name];\n    delete instancePool[`remote_${name}`];\n\n    return instance.destroy();\n  }\n}\n\nexport const settingsDB = () => instance('settings');\nexport const accountsDB = () => instance('accounts');\nexport const transactionsDB = () => instance('transactions');\nexport const tagsDB = () => instance('tags');\nexport const remoteSettingsDB = () => remoteInstance('settings');\nexport const remoteAccountsDB = () => remoteInstance('accounts');\nexport const remoteTransactionsDB = () => remoteInstance('transactions');\nexport const remoteTagsDB = () => remoteInstance('tags');\nexport const destroySettingsDB = () => destroyInstance('settings');\nexport const destroyAccountsDB = () => destroyInstance('accounts');\nexport const destroyTransactionsDB = () => destroyInstance('transactions');\nexport const destroyTagsDB = () => destroyInstance('tags');\n","import {\n  transactionsDB,\n  remoteTransactionsDB,\n  destroyTransactionsDB\n} from './pouchdb';\nimport {\n  recentListLimit,\n  storageToState,\n  stateToStorage\n} from '../../entities/Transaction';\nimport intersection from 'lodash/intersection';\n\nexport default {\n  sync,\n  load,\n  getAll,\n  loadRecent,\n  loadFiltered,\n  save,\n  remove,\n  destroy\n};\n\nasync function sync(readOnly = true) {\n  if (!remoteTransactionsDB()) return;\n  const options = { batch_size: 500 };\n\n  await transactionsDB()\n    .replicate.from(remoteTransactionsDB(), options)\n    .on('change', async update => {\n      await Promise.all(update.docs.map(processIncomingTransaction));\n    });\n\n  if (!readOnly) {\n    await transactionsDB().replicate.to(remoteTransactionsDB(), options);\n  }\n}\n\nasync function processIncomingTransaction(tx) {\n  if (tx._id.startsWith('T') && !tx._id.includes('-') && !tx._deleted) {\n    await save({\n      ...tx,\n      id: `T${tx.date}-${tx._id.substr(1)}`,\n      date: undefined,\n      tags: tx.tags && tx.tags.length ? tx.tags : undefined,\n      note: tx.note && tx.note.length ? tx.note : undefined\n    });\n    await transactionsDB().remove(tx);\n  }\n\n  return tx;\n}\n\nfunction load(id) {\n  return transactionsDB()\n    .get(id)\n    .then(storageToState)\n    .catch(error => {\n      if (error.status !== 404) throw error;\n    });\n}\n\nfunction loadRecent(limit = recentListLimit) {\n  return transactionsDB()\n    .allDocs({\n      include_docs: true,\n      descending: true,\n      startkey: 'T\\uffff',\n      endkey: 'T',\n      limit\n    })\n    .then(response => response.rows.map(row => row.doc))\n    .then(docs => docs.map(storageToState));\n}\n\nasync function getAll() {\n  return transactionsDB()\n    .allDocs({\n      include_docs: true,\n      descending: true,\n      startkey: 'T\\uffff',\n      endkey: 'T'\n    })\n    .then(response => response.rows.map(row => row.doc))\n    .then(docs => docs.map(storageToState));\n}\n\nfunction loadFiltered(filters = {}) {\n  return transactionsDB()\n    .allDocs({\n      include_docs: true,\n      descending: true,\n      startkey: filters.date ? `T${filters.date.end}-\\uffff` : 'T\\uffff',\n      endkey: filters.date ? `T${filters.date.start}-` : 'T'\n    })\n    .then(response => response.rows.map(row => row.doc))\n    .then(docs => filterByAccount(docs, filters.accounts))\n    .then(docs => filterByTags(docs, filters.tags))\n    .then(docs => docs.map(doc => storageToState(doc)));\n}\n\n/**\n * Filter transactions by account.\n *\n * @param {array} docs\n * @param {Set} accounts\n * @return {array}\n */\nfunction filterByAccount(docs, accounts) {\n  if (Array.isArray(accounts)) accounts = new Set(accounts);\n  if (!accounts || !accounts.size) return docs;\n\n  return docs.filter(\n    tx => accounts.has(tx.accountId) || accounts.has(tx.linkedAccountId)\n  );\n}\n\n/**\n * Filter transactions by tag.\n *\n * @param {array} docs\n * @param {array} tags\n * @return {array}\n */\nfunction filterByTags(docs, tags) {\n  return tags && tags.length > 0\n    ? docs.filter(tx => intersection(tx.tags, tags).length > 0)\n    : docs;\n}\n\nfunction save(transaction) {\n  return transactionsDB()\n    .get(transaction.id)\n    .then(doc =>\n      transactionsDB().put({\n        ...doc,\n        ...stateToStorage(transaction)\n      })\n    )\n    .catch(err => {\n      if (err.status !== 404) throw err;\n\n      return transactionsDB().put({\n        _id: transaction.id,\n        ...stateToStorage(transaction)\n      });\n    });\n}\n\nfunction remove(id) {\n  if (!id) return false;\n\n  return transactionsDB()\n    .get(id)\n    .then(doc =>\n      transactionsDB()\n        .put({ ...doc, _deleted: true })\n        .then(() => doc)\n    )\n    .catch(err => {\n      if (err.status !== 404) throw err;\n      return false;\n    });\n}\n\nfunction destroy() {\n  return destroyTransactionsDB();\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Message } from 'semantic-ui-react';\nimport './index.css';\nimport {save} from 'save-file';\nimport TransactionsStorage from '../../util/storage/transactions';\n\nclass DataExport extends React.Component {\n\n  handleSaveFile = async () => {\n    let transactions = await TransactionsStorage.getAll();\n    save(JSON.stringify(transactions), JSON.stringify(new Date(Date.now())) + '_export.json');\n  }\n\n  render() {\n    return (\n      <div className=\"mt-dataExport\">\n        <p>Export transactions to a JSON file.</p>\n        {this.props.error && (\n          <Message\n            error\n            icon=\"warning circle\"\n            header=\"Failed to Export\"\n            content={this.props.error}\n          />\n        )}\n        {!this.props.isFileSelected && (\n          <React.Fragment>\n            <Button\n              content=\"Export JSON File\"\n              icon=\"file text\"\n              onClick={this.handleSaveFile}\n            />            \n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nDataExport.propTypes = {\n  error: PropTypes.string\n};\n\nexport default DataExport;\n","import { createActions } from 'redux-actions';\n\nexport const {\n  saveExportFile\n} = createActions(\n  'SAVE_EXPORT_FILE'\n);\n","import { connect } from 'react-redux';\nimport DataExport from '../../components/DataExport';\nimport {\n  saveExportFile\n} from '../../actions/ui/dataExport';\n\nconst mapStateToProps = state => {\n  return {\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    saveExportFile\n  }\n)(DataExport);\n","const UNITS = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\nexport default num => {\n  if (!Number.isFinite(num)) {\n    throw new TypeError(`Expected a finite number, got ${typeof num}: ${num}`);\n  }\n\n  const neg = num < 0;\n\n  if (neg) {\n    num = -num;\n  }\n\n  if (num < 1) {\n    return (neg ? '-' : '') + num + ' B';\n  }\n\n  const exponent = Math.min(Math.floor(Math.log10(num) / 3), UNITS.length - 1);\n  const numStr = Number((num / Math.pow(1000, exponent)).toPrecision(3));\n  const unit = UNITS[exponent];\n\n  return (neg ? '-' : '') + numStr + ' ' + unit;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport prettyBytes from '../../util/PrettyBytes';\nimport { Button, Progress, Message } from 'semantic-ui-react';\nimport './index.css';\n\nclass DataImport extends React.Component {\n  handleFileChange = event => this.props.openImportFile(event.target.files[0]);\n  handleOpenFile = () => this.fileInput.click();\n\n  render() {\n    return (\n      <div className=\"mt-dataImport\">\n        <p>Import transactions from a CSV file.</p>\n        {this.props.error && (\n          <Message\n            error\n            icon=\"warning circle\"\n            header=\"Failed to import\"\n            content={this.props.error}\n          />\n        )}\n        {!this.props.isFileSelected && (\n          <React.Fragment>\n            <Button\n              content=\"Open File\"\n              icon=\"file text\"\n              onClick={this.handleOpenFile}\n            />\n            <input\n              type=\"file\"\n              accept=\"text/csv\"\n              ref={input => {\n                this.fileInput = input;\n              }}\n              onChange={this.handleFileChange}\n            />\n          </React.Fragment>\n        )}\n        {this.props.isFileSelected && (\n          <React.Fragment>\n            <p>\n              Selected file:{' '}\n              <strong>\n                {this.props.filename} ({prettyBytes(this.props.filesize)})\n              </strong>\n            </p>\n            {!this.props.isProcessing && (\n              <Button.Group>\n                <Button onClick={this.props.discardImportFile}>\n                  Discard File\n                </Button>\n                <Button.Or />\n                <Button onClick={this.props.startDataImport} positive>\n                  Start Import\n                </Button>\n              </Button.Group>\n            )}\n            {this.props.isProcessing && (\n              <Progress\n                active\n                indicating\n                autoSuccess\n                total={this.props.linesToProcess}\n                value={this.props.linesProcessed}\n              />\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nDataImport.propTypes = {\n  isFileSelected: PropTypes.bool,\n  isProcessing: PropTypes.bool,\n  filename: PropTypes.string,\n  filesize: PropTypes.number,\n  linesToProcess: PropTypes.number,\n  linesProcessed: PropTypes.number,\n  error: PropTypes.string,\n  openImportFile: PropTypes.func,\n  discardImportFile: PropTypes.func,\n  startDataImport: PropTypes.func\n};\n\nexport default DataImport;\n","import { createActions } from 'redux-actions';\n\nexport const {\n  openImportFile,\n  discardImportFile,\n  startDataImport,\n  importFileReadSuccess,\n  importLineProcessed,\n  importFailure\n} = createActions(\n  'OPEN_IMPORT_FILE',\n  'DISCARD_IMPORT_FILE',\n  'START_DATA_IMPORT',\n  'IMPORT_FILE_READ_SUCCESS',\n  'IMPORT_LINE_PROCESSED',\n  'IMPORT_FAILURE'\n);\n","export const getImportFile = state => state.ui.dataImport.file;\n","import { connect } from 'react-redux';\nimport DataImport from '../../components/DataImport';\nimport {\n  openImportFile,\n  discardImportFile,\n  startDataImport\n} from '../../actions/ui/dataImport';\nimport { getImportFile } from '../../selectors/ui/dataImport';\n\nconst mapStateToProps = state => {\n  const file = getImportFile(state);\n  return {\n    isFileSelected: state.ui.dataImport.isFileSelected,\n    isProcessing: state.ui.dataImport.isProcessing,\n    linesToProcess: state.ui.dataImport.linesToProcess,\n    linesProcessed: state.ui.dataImport.linesProcessed,\n    filename: file && file.name,\n    filesize: file && file.size,\n    error: state.ui.dataImport.error\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    openImportFile,\n    discardImportFile,\n    startDataImport\n  }\n)(DataImport);\n","import { createAction } from 'typesafe-actions';\n\nexport const signOut = createAction('user/ui/sign_out/SIGN_OUT_REQUEST');\nexport const signOutSuccess = createAction('user/ui/sign_out/SIGN_OUT_SUCCESS');\nexport const signOutFailure = createAction(\n  'user/ui/sign_out/SIGN_OUT_FAILURE',\n  resolve => (error: Error) => resolve(error)\n);\n","import { RootStateT } from 'reducers';\n\nexport const isDemoUser = ({ user }: RootStateT) => user.isDemoUser;\nexport const isSignedIn = ({ user }: RootStateT) => user.isSignedIn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Popup, Button } from 'semantic-ui-react';\nimport { signOut } from 'features/user/state/ui/SignOut.action';\nimport { isSignedIn, isDemoUser } from 'features/user/state/User.selector';\n\nclass User extends React.Component {\n  render() {\n    if (this.props.isSignOutComplete) return <Redirect to=\"/\" />;\n\n    return (\n      <Popup\n        on=\"click\"\n        trigger={\n          <Button\n            content={this.signOutButtonLabel()}\n            icon={this.signOutButtonIcon()}\n            labelPosition=\"right\"\n          />\n        }\n        header=\"Local data will de deleted!\"\n        content={\n          <Button\n            content=\"Confirm\"\n            negative\n            style={{ marginTop: '1em' }}\n            floated=\"right\"\n            loading={this.props.isSignOutRunning}\n            disabled={this.props.isSignOutRunning}\n            onClick={this.props.signOut}\n          />\n        }\n      />\n    );\n  }\n\n  signOutButtonLabel() {\n    if (this.props.isDemo) return 'Reset demo';\n\n    return this.props.isAuthenticated ? 'Sign out' : 'Delete data';\n  }\n\n  signOutButtonIcon() {\n    if (this.props.isDemo) return 'refresh';\n\n    return this.props.isAuthenticated ? 'sign out' : 'trash';\n  }\n}\n\nUser.propTypes = {\n  isDemo: PropTypes.bool,\n  isAuthenticated: PropTypes.bool,\n  isSignOutRunning: PropTypes.bool,\n  isSignOutComplete: PropTypes.bool,\n  signOut: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isDemo: isDemoUser(state),\n  isAuthenticated: isSignedIn(state),\n  isSignOutRunning: state.user.ui.signOut.signOutState === 'REQUEST',\n  isSignOutComplete: state.user.ui.signOut.signOutState === 'COMPLETE'\n});\n\nexport default connect(\n  mapStateToProps,\n  { signOut }\n)(User);\n","import Dashboard from '../containers/Dashboard';\nimport Transactions from '../containers/Transactions';\nimport Accounts from '../containers/Accounts';\nimport Reports from '../containers/Reports';\nimport Settings from '../containers/Settings';\nimport WorkInProgress from '../containers/WorkInProgress';\n\nexport default [\n  {\n    path: '/',\n    exact: true,\n    label: 'Dashboard',\n    icon: 'newspaper',\n    component: Dashboard\n  },\n  {\n    path: '/accounts',\n    exact: false,\n    label: 'Accounts',\n    icon: 'credit card',\n    component: Accounts\n  },\n  {\n    path: '/reports',\n    exact: false,\n    label: 'Reports',\n    icon: 'line chart',\n    component: Reports\n  },\n  {\n    path: '/transactions/:accountId?',\n    link: '/transactions',\n    exact: false,\n    label: 'Transactions',\n    icon: 'exchange',\n    component: Transactions\n  },\n  {\n    path: '/budget',\n    exact: false,\n    label: 'Budget',\n    icon: 'shopping basket',\n    component: WorkInProgress\n  },\n  {\n    path: '/settings',\n    exact: true,\n    label: 'Settings',\n    icon: 'options',\n    component: Settings\n  }\n];\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\nexport default () => (\n  <Message\n    size=\"large\"\n    icon=\"hourglass half\"\n    header=\"Work in Progress\"\n    content=\"This page is not ready yet, check back later 😉\"\n  />\n);\n","import React from 'react';\nimport CurrencyInput from './Currency/Input';\nimport CurrenchExchangeRate from './Currency/ExchangeRate';\nimport DataExport from './DataExport';\nimport DataImport from './DataImport';\nimport User from './User';\nimport CollapsibleSection from '../../components/CollapsibleSection';\n\nconst Settings = () => (\n  <div className=\"container-full-page mt-settings\">\n    <CollapsibleSection name=\"settings_currency\" label=\"Currency\">\n      <CurrencyInput />\n      <CurrenchExchangeRate />\n    </CollapsibleSection>\n    <CollapsibleSection name=\"settings_import\" label=\"Data Import\">\n      <DataImport />      \n    </CollapsibleSection>\n    <CollapsibleSection name=\"settings_export\" label=\"Data Export\">\n      <DataExport />\n      </CollapsibleSection>\n    <CollapsibleSection name=\"settings_user\" label=\"User\">\n      <User />\n    </CollapsibleSection>\n  </div>\n);\n\nexport default Settings;\n","import { createAction } from 'typesafe-actions';\n\nexport const changeEmail = createAction(\n  'user/ui/sign_in/CHANGE_EMAIL',\n  resolve => (email: string) => resolve(email)\n);\nexport const changeCode = createAction(\n  'user/ui/sign_in/CHANGE_CODE',\n  resolve => (code: string) => resolve(code)\n);\nexport const sendCode = createAction('user/ui/sign_in/SEND_CODE');\nexport const sendCodeSuccess = createAction(\n  'user/ui/sign_in/SEND_CODE_SUCCESS'\n);\nexport const sendCodeFailure = createAction(\n  'user/ui/sign_in/SEND_CODE_FAILURE',\n  resolve => (error: Error) => resolve(error)\n);\nexport const verifyCode = createAction('user/ui/sign_in/VERIFY_CODE');\nexport const verifyCodeSuccess = createAction(\n  'user/ui/sign_in/VERIFY_CODE_SUCCESS'\n);\nexport const verifyCodeFailure = createAction(\n  'user/ui/sign_in/VERIFY_CODE_FAILURE',\n  resolve => (error: Error) => resolve(error)\n);\nexport const finishAuth = createAction('user/ui/sign_in/FINISH_AUTH');\n","import React from 'react';\nimport { Redirect, Link, RouteProps } from 'react-router-dom';\nimport {\n  Header,\n  Divider,\n  Form,\n  Button,\n  Input,\n  Message,\n  Loader\n} from 'semantic-ui-react';\nimport { AsyncOperationStateT } from 'typings/async';\nimport {\n  changeEmail,\n  changeCode,\n  sendCode,\n  verifyCode,\n  finishAuth\n} from 'features/user/state/ui/SignIn.action';\nimport './index.css';\n\nexport interface SignInPropsT {\n  isSignedIn: boolean;\n  sendCodeStatus?: AsyncOperationStateT;\n  verifyCodeStatus?: AsyncOperationStateT;\n  email: string;\n  code: string;\n  error?: string;\n  changeEmail: typeof changeEmail;\n  changeCode: typeof changeCode;\n  sendCode: typeof sendCode;\n  verifyCode: typeof verifyCode;\n  finishAuth: typeof finishAuth;\n}\n\nclass Auth extends React.Component<SignInPropsT & RouteProps, {}> {\n  componentDidMount() {\n    if (this.props.location && this.props.location.hash) {\n      this.props.finishAuth();\n    }\n  }\n\n  render() {\n    if (this.props.isSignedIn) return <Redirect to=\"/\" />;\n    if (this.props.location && this.props.location.hash) {\n      return (\n        <Loader\n          active\n          content=\"Synchronizing data, this might take a moment...\"\n        />\n      );\n    }\n\n    return (\n      <div className=\"container-raised-desktop\">\n        <Header as=\"h2\" icon=\"id card outline\" content=\"Sign In\" />\n        <Divider />\n        {this.props.error && (\n          <Message error>\n            <Message.Header>Error</Message.Header>\n            <Message.Content>{this.props.error}</Message.Content>\n          </Message>\n        )}\n        {this.props.sendCodeStatus !== 'SUCCESS'\n          ? this.renderSendCodeForm()\n          : this.renderVerifyCodeForm()}\n        <Divider />\n        <p>\n          <Link to=\"/\">Back</Link>\n        </p>\n      </div>\n    );\n  }\n\n  renderSendCodeForm = () => (\n    <React.Fragment>\n      <p>\n        Please provide your email address and we will send you a verification\n        code for sign in.\n      </p>\n      <Form onSubmit={this.props.sendCode}>\n        <div className=\"auth--input-field\">\n          <Input\n            fluid\n            required\n            placeholder=\"Email Address\"\n            name=\"email\"\n            type=\"email\"\n            icon=\"mail\"\n            iconPosition=\"left\"\n            value={this.props.email}\n            onChange={(_, { value }) => this.props.changeEmail(value)}\n            disabled={this.props.sendCodeStatus === 'REQUEST'}\n            action={{\n              primary: true,\n              content: 'Send Code',\n              loading: this.props.sendCodeStatus === 'REQUEST'\n            }}\n          />\n        </div>\n      </Form>\n      <Header as=\"h3\">Why do I need to sign in?</Header>\n      <p style={{ marginTop: '1em' }}>\n        After you sign in for the first time we will create a new database for\n        you hosted in the cloud. This database will be used to synchronize your\n        data among different devices as well as for back up.\n      </p>\n    </React.Fragment>\n  );\n\n  renderVerifyCodeForm = () => (\n    <Form onSubmit={this.props.verifyCode}>\n      <p>An email with the code has been sent to {this.props.email}</p>\n      <div className=\"auth--input-field\">\n        <Input\n          fluid\n          required\n          placeholder=\"Your Code\"\n          type=\"number\"\n          icon=\"lock\"\n          iconPosition=\"left\"\n          value={this.props.code}\n          onChange={(_, { value }) => this.props.changeCode(value)}\n          disabled={this.props.verifyCodeStatus === 'REQUEST'}\n          action={\n            <Button\n              primary\n              content=\"Sign In\"\n              loading={this.props.verifyCodeStatus === 'REQUEST'}\n            />\n          }\n        />\n        <Button basic as=\"a\">\n          Didn't get the code?\n        </Button>\n      </div>\n    </Form>\n  );\n}\n\nexport default Auth;\n","import { connect } from 'react-redux';\nimport SignIn from 'features/user/components/SignIn';\nimport {\n  changeEmail,\n  changeCode,\n  sendCode,\n  verifyCode,\n  finishAuth\n} from 'features/user/state/ui/SignIn.action';\nimport { RootStateT } from 'reducers';\n\nconst mapStateToProps = ({ user }: RootStateT) => ({\n  ...user.ui.signIn,\n  isSignedIn: user.isSignedIn\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    changeEmail,\n    changeCode,\n    sendCode,\n    verifyCode,\n    finishAuth\n  }\n)(SignIn);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Divider, Header } from 'semantic-ui-react';\nimport CurrencyInput from '../Settings/Currency/Input';\nimport CurrencyExchangeRate from '../Settings/Currency/ExchangeRate';\nimport AccountForm from '../Accounts/Form';\nimport AccountList from '../Accounts/List';\nimport { completeSetup } from '../../actions/settings';\nimport { loadAccounts } from '../../actions/entities/accounts';\nimport { getAccountsList } from '../../selectors/entities/accounts';\nimport { isSignedIn } from 'features/user/state/User.selector';\nimport { saveWaitTime } from '../../tracking/wrapper/wait';\n\nclass InitialSetup extends React.Component {\n  componentDidMount() {\n    this.props.loadAccounts();\n    saveWaitTime();\n  }\n\n  render() {\n    return (\n      <div className=\"container-raised-desktop\">\n        <Header as=\"h2\" icon=\"settings\" content=\"Money Tracker Setup\" />\n        <Divider />\n        {!this.props.isAuthenticated && (\n          <p>\n            <Link to=\"/auth\">Sign in</Link> if you want to sync your data with\n            the cloud. You may also use the tracker without signing in. Your\n            data will be stored only on current device in this case. You can\n            sign in and sync your data any time later.\n          </p>\n        )}\n        <Header as=\"h2\">Currencies</Header>\n        <p>\n          Select your base currency — the currency which will be used by\n          default.\n          <br />\n          You can also select any number of additional currencies, if you use\n          them.\n        </p>\n        <CurrencyInput />\n        <CurrencyExchangeRate />\n        <Header as=\"h2\">Accounts</Header>\n        <p>\n          Create accounts that you would like to keep track of.\n          <br />\n          It could be cash in your wallet, bank accounts, credit cards or even a\n          loan to your friend.\n        </p>\n        <AccountForm />\n        {this.props.accounts.length > 0 && (\n          <div style={{ margin: '1em' }}>\n            <AccountList />\n            <div className=\"form-submit\">\n              <Button\n                primary\n                content=\"Finish\"\n                onClick={this.props.completeSetup}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nInitialSetup.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  accounts: PropTypes.arrayOf(PropTypes.object),\n  loadAccounts: PropTypes.func,\n  completeSetup: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: isSignedIn(state),\n  accounts: getAccountsList(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadAccounts, completeSetup }\n)(InitialSetup);\n","import React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { Icon, Menu } from 'semantic-ui-react';\nimport routes from '../router/routes';\n\nconst SidebarMenu = ({ isOpen, toggleSidebar }) => (\n  <nav className={isOpen ? 'open' : 'closed'} onClick={toggleSidebar}>\n    <Menu fluid color=\"blue\" vertical icon=\"labeled\">\n      {routes.map(route => (\n        <Route\n          key={route.path}\n          exact={route.exact}\n          path={route.path}\n          children={({ match }) => (\n            <Menu.Item as={Link} to={route.link || route.path} active={!!match}>\n              <Icon name={route.icon} />\n              {route.label}\n            </Menu.Item>\n          )}\n        />\n      ))}\n    </Menu>\n  </nav>\n);\n\nexport default SidebarMenu;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './index.css';\n\nconst Logo = () => (\n  <div className=\"logo\">\n    <img src={logo} alt=\"Money Tracker\" />\n  </div>\n);\n\nexport default Logo;\n","import { createAction } from 'redux-actions';\n\nexport const toggleSidebar = createAction('TOGGLE_SIDEBAR');\n","import { createActions } from 'redux-actions';\n\nexport const {\n  dismissSyncWarning,\n  setPendingChangesFlag,\n  sync,\n  syncRequest,\n  syncSuccess,\n  syncFailure\n} = createActions(\n  'DISMISS_SYNC_WARNING',\n  'SET_PENDING_CHANGES_FLAG',\n  'SYNC',\n  'SYNC_REQUEST',\n  'SYNC_SUCCESS',\n  'SYNC_FAILURE'\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Icon, Header } from 'semantic-ui-react';\nimport Logo from '../Logo';\nimport { toggleSidebar } from '../../actions/ui/sidebar';\nimport { sync } from '../../actions/ui/sync';\nimport { isSignedIn } from 'features/user/state/User.selector';\nimport './index.css';\n\nconst AppHeader = ({\n  label,\n  isMobile,\n  isAuthenticated,\n  isSyncRunning,\n  hasPendingChanges,\n  toggleSidebar,\n  sync\n}) => (\n  <header>\n    <Header>\n      {isMobile && <Icon name=\"bars\" onClick={toggleSidebar} />}\n      {!isMobile && <Logo />}\n      <Header.Content as=\"h2\">{label}</Header.Content>\n      {isAuthenticated &&\n        (isSyncRunning ? (\n          <Icon name=\"refresh\" loading />\n        ) : (\n          <Icon\n            name=\"refresh\"\n            color={hasPendingChanges ? 'olive' : undefined}\n            onClick={sync}\n            style={{ cursor: 'pointer' }}\n          />\n        ))}\n    </Header>\n  </header>\n);\n\nAppHeader.propTypes = {\n  label: PropTypes.string.isRequired,\n  isMobile: PropTypes.bool,\n  isAuthenticated: PropTypes.bool,\n  isSyncRunning: PropTypes.bool,\n  toggleSidebar: PropTypes.func,\n  sync: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  isMobile: state.ui.isMobile,\n  isAuthenticated: isSignedIn(state),\n  isSyncRunning: state.ui.sync.isRunning,\n  hasPendingChanges: state.ui.sync.hasPendingChanges\n});\n\nexport default connect(\n  mapStateToProps,\n  { toggleSidebar, sync }\n)(AppHeader);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Message, Button } from 'semantic-ui-react';\nimport { isDemoUser } from 'features/user/state/User.selector';\n\nclass DemoNotice extends React.Component {\n  render() {\n    if (!this.props.isVisible) return null;\n\n    return (\n      <Message\n        size=\"large\"\n        icon=\"user circle outline\"\n        header=\"Welcome to demo account!\"\n        content={\n          <div style={{ marginTop: '0.5em' }}>\n            <p>\n              You are logged in as a demo user with sample data generated to\n              show you how things might look like.\n            </p>\n            <p>\n              All the changes you make will only be stored locally on your\n              device.\n            </p>\n            <p>\n              <Button\n                as=\"a\"\n                href=\"https://app.moneytracker.cc\"\n                icon=\"sign in\"\n                content=\"Go to Live app\"\n                labelPosition=\"right\"\n              />\n            </p>\n          </div>\n        }\n      />\n    );\n  }\n}\n\nDemoNotice.propTypes = {\n  isVisible: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isVisible: isDemoUser(state)\n});\n\nexport default connect(mapStateToProps)(DemoNotice);\n","import { createAction } from 'redux-actions';\n\nexport const windowResize = createAction('WINDOW_RESIZE');\n","import { createAction } from 'redux-actions';\n\nexport const bootstrap = createAction('BOOTSTRAP');\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { Dimmer, Loader } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport throttle from 'lodash/throttle';\nimport routes from '../router/routes';\nimport SignIn from 'features/user/containers/SignIn';\nimport InitialSetup from './InitialSetup';\nimport SidebarMenu from './SidebarMenu';\nimport Header from '../components/Header';\nimport DemoNotice from './DemoNotice';\nimport { windowResize } from '../actions/ui/windowResize';\nimport { toggleSidebar } from '../actions/ui/sidebar';\nimport { bootstrap } from '../actions/app';\n\nclass App extends React.Component {\n  componentDidMount() {\n    window.addEventListener('resize', throttle(this.props.windowResize, 500));\n    this.props.bootstrap();\n    const script = document.createElement('script');\n    script.src =\n      'https://usability-session.onrender.com/static/plugin/instrumentation.js';\n\n    script.addEventListener('load', () => {\n      localStorage.setItem('scenarioId', '6455873c93620f7be7a1cd4b');\n\n      setTimeout(() => {\n        window.instrumentation.start({\n          serverUrl: 'usability-session.onrender.com',\n          scenarioId: '6455873c93620f7be7a1cd4b'\n        });\n      }, 3000);\n    });\n\n    document.head.appendChild(script);\n  }\n\n  render() {\n    if (!this.props.isLoaded) {\n      return (\n        <Loader\n          active\n          content={\n            this.props.isSyncRunning &&\n            'Synchronizing data, this might take a moment...'\n          }\n        />\n      );\n    }\n\n    return (\n      <div>\n        <Router history={this.props.history}>\n          <Switch>\n            <Route path=\"/auth\" exact={true} component={SignIn} />\n            {!this.props.isSetupComplete ? (\n              <Route component={InitialSetup} />\n            ) : (\n              <Route render={this.renderNavigationRoutes} />\n            )}\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n\n  /**\n   * Navigation routes are the pages associated to navigation menu items,\n   * e.g. Dashboard, Transactions, Settings etc.\n   * They are rendered with common structure: sidebar menu and sticky header.\n   */\n  renderNavigationRoutes = () => {\n    if (window.location.pathname.endsWith('index.html')) {\n      return <Redirect to=\"/\" />;\n    }\n    const { isSidebarOpen, isMobile, toggleSidebar } = this.props;\n    return (\n      <React.Fragment>\n        <Dimmer\n          page\n          active={isMobile && isSidebarOpen}\n          onClick={toggleSidebar}\n          style={{ zIndex: 100 }}\n        />\n        <SidebarMenu\n          isOpen={!isMobile || isSidebarOpen}\n          toggleSidebar={toggleSidebar}\n        />\n        {flatten(routes).map(route => (\n          <Route\n            key={route.path}\n            path={route.path}\n            exact={route.exact}\n            render={props => (\n              <React.Fragment>\n                <Header label={route.label} />\n                <div className=\"container\">\n                  <DemoNotice />\n                  <route.component {...props} />\n                </div>\n              </React.Fragment>\n            )}\n          />\n        ))}\n      </React.Fragment>\n    );\n  };\n}\n\nfunction flatten(routes) {\n  let flatRoutes = [];\n  routes.forEach(route => {\n    if (route.routes) {\n      flatRoutes.push({ ...route, exact: true });\n      flatRoutes.push(...flatten(route.routes));\n    } else {\n      flatRoutes.push(route);\n    }\n  });\n\n  return flatRoutes;\n}\n\nApp.propTypes = {\n  history: PropTypes.object.isRequired,\n  isLoaded: PropTypes.bool,\n  isSyncRunning: PropTypes.bool,\n  isSetupComplete: PropTypes.bool,\n  isMobile: PropTypes.bool,\n  isSidebarOpen: PropTypes.bool,\n  bootstrap: PropTypes.func,\n  windowResize: PropTypes.func,\n  toggleSidebar: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  history: ownProps.history,\n  isLoaded: state.settings.isLoaded,\n  isSyncRunning: state.ui.sync.isRunning,\n  isSetupComplete: state.settings.isSetupComplete,\n  isMobile: state.ui.isMobile,\n  isSidebarOpen: state.ui.isSidebarOpen\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    bootstrap,\n    windowResize,\n    toggleSidebar\n  }\n)(App);\n","import React from 'react';\nimport * as Sentry from '@sentry/browser';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({ error });\n    console.log('sentry error', error);\n    Sentry.withScope(scope => {\n      Object.keys(errorInfo).forEach(key => {\n        scope.setExtra(key, errorInfo[key]);\n      });\n      Sentry.captureException(error);\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      //render fallback UI\n      return (\n        <button onClick={() => Sentry.showReportDialog()}>\n          Report feedback\n        </button>\n      );\n    } else {\n      //when there's not an error, render children untouched\n      return this.props.children;\n    }\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport ErrorBoundary from 'components/Sentry/ErrorBoundary';\n\nconst Root = ({ store, history }) => (\n  <ErrorBoundary>\n    <Provider store={store}>\n      <App history={history} />\n    </Provider>\n  </ErrorBoundary>\n);\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nexport default Root;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { handleActions, combineActions } from 'redux-actions';\nimport { getType } from 'typesafe-actions';\nimport {\n  loadAccountsSuccess,\n  saveAccount,\n  saveAccountFailure,\n  updateAccount,\n  removeAccountSuccess\n} from '../../actions/entities/accounts';\nimport { signOutSuccess } from 'features/user/state/ui/SignOut.action';\nimport EntityMap from '../../entities/EntityMap';\n\nconst initialState = EntityMap.fromArray([]);\n\nexport default handleActions(\n  {\n    [loadAccountsSuccess]: (state, action) => {\n      const accounts = action.payload;\n      return EntityMap.fromArray(accounts);\n    },\n    [combineActions(saveAccount, updateAccount)]: (state, action) => {\n      const account = action.payload;\n      return EntityMap.set(state, account);\n    },\n    [combineActions(removeAccountSuccess, saveAccountFailure)]: (\n      state,\n      action\n    ) => {\n      const accountId = action.payload;\n      return EntityMap.remove(state, accountId);\n    },\n    [getType(signOutSuccess)]: () => initialState\n  },\n  initialState\n);\n","import { handleActions } from 'redux-actions';\nimport { getType } from 'typesafe-actions';\nimport {\n  loadExpenseTagsSuccess,\n  loadIncomeTagsSuccess\n} from '../../actions/entities/tags';\nimport { addTag } from '../../actions/ui/form/transaction';\nimport { signOutSuccess } from 'features/user/state/ui/SignOut.action';\nimport { TransationKindT } from '../../entities/Transaction';\n\nconst { Expense, Transfer, Income } = TransationKindT;\nconst initialState = { [Expense]: [], [Transfer]: [], [Income]: [] };\n\nexport default handleActions(\n  {\n    [loadExpenseTagsSuccess]: (state, { payload }) => ({\n      ...state,\n      [Expense]: payload\n    }),\n    [loadIncomeTagsSuccess]: (state, { payload }) => ({\n      ...state,\n      [Income]: payload\n    }),\n    [addTag]: (state, action) => {\n      const { kind, tag } = action.payload;\n      return state[kind].includes(tag)\n        ? state\n        : { ...state, [kind]: state[kind].concat(tag) };\n    },\n    [getType(signOutSuccess)]: () => initialState\n  },\n  initialState\n);\n","import { handleActions } from 'redux-actions';\nimport { getType } from 'typesafe-actions';\nimport { loadFilterTransactionsSuccess } from '../../../actions/entities/transactions';\nimport { signOutSuccess } from 'features/user/state/ui/SignOut.action';\nimport EntityMap from '../../../entities/EntityMap';\n\nconst initialState = EntityMap.fromArray([]);\n\nexport default handleActions(\n  {\n    [loadFilterTransactionsSuccess]: (state, action) => {\n      const transactions = action.payload;\n      return EntityMap.fromArray(transactions);\n    },\n    [getType(signOutSuccess)]: () => initialState\n  },\n  initialState\n);\n","import { handleActions } from 'redux-actions';\nimport { getType } from 'typesafe-actions';\nimport { loadRecentTransactionsSuccess } from '../../../actions/entities/transactions';\nimport { signOutSuccess } from 'features/user/state/ui/SignOut.action';\nimport EntityMap from '../../../entities/EntityMap';\n\nconst initialState = EntityMap.fromArray([]);\n\nexport default handleActions(\n  {\n    [loadRecentTransactionsSuccess]: (state, action) => {\n      const transactions = action.payload;\n      return EntityMap.fromArray(transactions);\n    },\n    [getType(signOutSuccess)]: () => initialState\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\nimport filter from './filter';\nimport recent from './recent';\n\nexport default combineReducers({\n  filter,\n  recent\n});\n","import { combineReducers } from 'redux';\nimport accounts from './accounts';\nimport tags from './tags';\nimport transactions from './transactions';\n\nexport default combineReducers({ accounts, tags, transactions });\n","import { handleActions, combineActions } from 'redux-actions';\nimport pick from 'lodash/pick';\nimport {\n  fillInAccountForm,\n  openAccountInModal,\n  resetAccountForm,\n  toggleOnDashboard,\n  toggleCurrency,\n  changeBalance,\n  changeGroup,\n  changeName\n} from '../../../actions/ui/form/account';\nimport {\n  saveAccountSuccess,\n  removeAccountRequest,\n  removeAccountStart,\n  removeAccountFailure,\n  removeAccountSuccess,\n  removeAccountItemProcessed\n} from '../../../actions/entities/accounts';\nimport { changeSettingsCurrency } from '../../../actions/settings';\nimport { defaultGroup, stateToForm } from '../../../entities/Account';\n\nconst initialState = {\n  name: '',\n  group: defaultGroup,\n  balance: {},\n  currencies: [],\n  on_dashboard: true,\n  completed: false,\n  isModalOpen: false,\n  isDeleteRequest: false,\n  isDeleteRunning: false,\n  itemsToProcess: Infinity,\n  itemsProcessed: 0\n};\nexport default handleActions(\n  {\n    [changeGroup]: (state, { payload }) => ({ ...state, group: payload }),\n    [changeName]: (state, { payload }) => ({ ...state, name: payload }),\n    [toggleCurrency]: (state, { payload }) => {\n      const isChecked = state.currencies.includes(payload);\n      if (isChecked && state.currencies.length === 1) return state;\n      return {\n        ...state,\n        currencies: isChecked\n          ? state.currencies.filter(code => code !== payload)\n          : state.currencies.concat(payload),\n        balance:\n          !isChecked && state.balance[payload] === undefined\n            ? { ...state.balance, [payload]: '' }\n            : state.balance\n      };\n    },\n    [changeBalance]: (state, { payload }) => ({\n      ...state,\n      currencies: state.currencies.includes(payload.code)\n        ? state.currencies\n        : state.currencies.concat(payload.code),\n      balance: { ...state.balance, [payload.code]: payload.balance }\n    }),\n    [toggleOnDashboard]: state => ({\n      ...state,\n      on_dashboard: !state.on_dashboard\n    }),\n    [changeSettingsCurrency]: (state, { payload }) => {\n      const currencies = new Set([payload.base, ...payload.secondary]);\n      return {\n        ...state,\n        currencies: state.currencies.filter(code => currencies.has(code)),\n        balance: pick(state.balance, [...currencies])\n      };\n    },\n    [openAccountInModal]: (state, { payload }) => ({\n      ...state,\n      ...payload,\n      isModalOpen: true\n    }),\n    [resetAccountForm]: () => initialState,\n    [combineActions(saveAccountSuccess, removeAccountSuccess)]: () => ({\n      ...initialState,\n      completed: true\n    }),\n    [fillInAccountForm]: (state, { payload }) => ({\n      ...state,\n      ...stateToForm(payload)\n    }),\n    [removeAccountRequest]: state => ({\n      ...state,\n      isDeleteRequest: !state.isDeleteRequest\n    }),\n    [removeAccountStart]: (state, action) => ({\n      ...state,\n      isDeleteRunning: true,\n      itemsToProcess: action.payload\n    }),\n    [combineActions(removeAccountSuccess, removeAccountFailure)]: state => ({\n      ...state,\n      isDeleteRunning: false\n    }),\n    [removeAccountItemProcessed]: (state, action) => ({\n      ...state,\n      itemsProcessed: action.payload\n    })\n  },\n  initialState\n);\n","import { handleActions } from 'redux-actions';\nimport {\n  fillInTransactionForm,\n  openTransactionInModal,\n  changeKind,\n  changeAccount,\n  changeAmount,\n  changeCurrency,\n  changeLinkedAccount,\n  changeLinkedAmount,\n  changeLinkedCurrency,\n  changeTags,\n  changeDate,\n  changeNote\n} from '../../../actions/ui/form/transaction';\nimport { defaultKind } from '../../../entities/Transaction';\n\nconst initialState = {\n  kind: defaultKind,\n  isModalOpen: false\n};\n\nexport default handleActions(\n  {\n    [fillInTransactionForm]: (state, { payload }) => payload,\n    [openTransactionInModal]: (state, { payload }) => ({\n      ...state,\n      ...payload,\n      isModalOpen: true\n    }),\n    [changeKind]: (state, { payload }) => ({ ...state, kind: payload }),\n    [changeAccount]: (state, { payload }) => ({\n      ...state,\n      accountId: payload.accountId,\n      currency: payload.currency.includes(state.currency)\n        ? state.currency\n        : payload.currency[0]\n    }),\n    [changeLinkedAccount]: (state, { payload }) => ({\n      ...state,\n      linkedAccountId: payload.accountId,\n      linkedCurrency: payload.currency.includes(state.linkedCurrency)\n        ? state.linkedCurrency\n        : payload.currency[0]\n    }),\n    [changeAmount]: (state, { payload }) => ({\n      ...state,\n      amount: payload,\n      linkedAmount:\n        state.currency === state.linkedCurrency ? payload : state.linkedAmount\n    }),\n    [changeLinkedAmount]: (state, { payload }) => ({\n      ...state,\n      amount: state.currency === state.linkedCurrency ? payload : state.amount,\n      linkedAmount: payload\n    }),\n    [changeCurrency]: (state, { payload }) => ({\n      ...state,\n      currency: payload,\n      linkedAmount:\n        state.linkedCurrency === payload ? state.amount : state.linkedAmount\n    }),\n    [changeLinkedCurrency]: (state, { payload }) => ({\n      ...state,\n      linkedCurrency: payload,\n      linkedAmount:\n        state.currency === payload ? state.amount : state.linkedAmount\n    }),\n    [changeTags]: (state, { payload }) => ({\n      ...state,\n      tags: { ...state.tags, [state.kind]: payload }\n    }),\n    [changeDate]: (state, { payload }) => ({ ...state, date: payload }),\n    [changeNote]: (state, { payload }) => ({ ...state, note: payload })\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\nimport account from './account';\nimport transaction from './transaction';\n\nexport default combineReducers({ account, transaction });\n","import { handleActions } from 'redux-actions';\nimport {\n  changeReportKind,\n  changeReportTimespan,\n  changeReportAccounts,\n  changeReportExcludedTags,\n  moveReportDateBackwards,\n  moveReportDateForwards,\n  loadReport,\n  loadReportSuccess,\n  loadReportFailure\n} from 'actions/ui/report';\nimport {\n  defaultKind,\n  defaultTimespan,\n  defaultDate,\n  moveDateBackwards,\n  moveDateForwards\n} from 'entities/Report';\n\nexport default handleActions(\n  {\n    [changeReportKind]: (state, { payload }) => ({ ...state, kind: payload }),\n    [changeReportTimespan]: (state, { payload }) => ({\n      ...state,\n      timespan: payload,\n      date: defaultDate(payload)\n    }),\n    [changeReportAccounts]: (state, { payload }) => ({\n      ...state,\n      accounts: payload\n    }),\n    [changeReportExcludedTags]: (state, { payload }) => ({\n      ...state,\n      excludeTags: payload\n    }),\n    [moveReportDateBackwards]: state => ({\n      ...state,\n      date: moveDateBackwards(state.date, state.timespan),\n      data: {\n        ...state.data,\n        netWorthEnd: state.data.netWorthStart\n      },\n      netWorthStack: [state.data.netWorthEnd, ...state.netWorthStack]\n    }),\n    [moveReportDateForwards]: state => ({\n      ...state,\n      date: moveDateForwards(state.date, state.timespan),\n      data: {\n        ...state.data,\n        netWorthEnd: state.netWorthStack[0]\n      },\n      netWorthStack: state.netWorthStack.slice(1)\n    }),\n    [loadReport]: state => ({ ...state, isLoading: true }),\n    [loadReportSuccess]: (state, { payload }) => ({\n      ...state,\n      isLoading: false,\n      data: payload\n    }),\n    [loadReportFailure]: state => ({ ...state, isLoading: false })\n  },\n  {\n    isLoading: false,\n    data: {},\n    kind: defaultKind,\n    timespan: defaultTimespan,\n    date: defaultDate(),\n    accounts: [],\n    netWorthStack: [],\n    excludeTags: []\n  }\n);\n","import { handleActions } from 'redux-actions';\nimport {\n  changeFilterDate,\n  changeFilterPage,\n  toggleFilterCalendar,\n  toggleFilterModal,\n  applyFilters\n} from 'actions/ui/transaction/filter';\nimport {\n  loadFilterTransactions,\n  loadFilterTransactionsSuccess\n} from 'actions/entities/transactions';\nimport { defaultStart, defaultEnd } from 'entities/Transaction/DateFilterRange';\nimport { rowsPerSearchPage } from 'entities/Transaction';\nimport { toUtcTimestamp } from 'util/timezone';\n\nconst initialState = {\n  dateStart: toUtcTimestamp(defaultStart()),\n  dateEnd: toUtcTimestamp(defaultEnd()),\n  isCalendarOpen: false,\n  isFilterModalOpen: false,\n  applied: {},\n  isLoading: false,\n  totalRows: 0,\n  page: 0,\n  perPage: rowsPerSearchPage\n};\n\nexport default handleActions(\n  {\n    [loadFilterTransactions]: state => ({ ...state, isLoading: true }),\n    [loadFilterTransactionsSuccess]: (state, { payload }) => ({\n      ...state,\n      page: 0,\n      totalRows: payload.length,\n      isLoading: false\n    }),\n    [changeFilterDate]: (state, { payload }) => ({\n      ...state,\n      dateStart: toUtcTimestamp(payload.dateStart),\n      dateEnd: toUtcTimestamp(payload.dateEnd),\n      isLoading: true\n    }),\n    [changeFilterPage]: (state, { payload }) => ({ ...state, page: payload }),\n    [toggleFilterCalendar]: state => ({\n      ...state,\n      isCalendarOpen: !state.isCalendarOpen\n    }),\n    [toggleFilterModal]: state => ({\n      ...state,\n      isFilterModalOpen: !state.isFilterModalOpen\n    }),\n    [applyFilters]: (state, { payload }) => ({ ...state, applied: payload })\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\nimport filter from './filter';\n\nexport default combineReducers({ filter });\n","import { handleActions } from 'redux-actions';\nimport {\n  openImportFile,\n  discardImportFile,\n  startDataImport,\n  importFileReadSuccess,\n  importLineProcessed,\n  importFailure\n} from '../../actions/ui/dataImport';\n\nconst initialState = {\n  isFileSelected: false,\n  file: undefined,\n  error: '',\n  isProcessing: false,\n  linesToProcess: Infinity,\n  linesProcessed: 0\n};\n\nexport default handleActions(\n  {\n    [openImportFile]: (state, action) => ({\n      ...state,\n      isFileSelected: true,\n      file: action.payload\n    }),\n    [discardImportFile]: state => ({\n      ...state,\n      isFileSelected: false,\n      file: undefined\n    }),\n    [startDataImport]: state => ({ ...state, isProcessing: true }),\n    [importFileReadSuccess]: (state, action) => ({\n      ...state,\n      linesToProcess: action.payload\n    }),\n    [importLineProcessed]: (state, action) => ({\n      ...state,\n      linesProcessed: action.payload\n    }),\n    [importFailure]: (state, action) => ({\n      ...state,\n      isFileSelected: false,\n      isProcessing: false,\n      file: undefined,\n      error: action.payload.message\n    })\n  },\n  initialState\n);\n","import { handleAction } from 'redux-actions';\nimport { windowResize } from '../../actions/ui/windowResize';\n\nconst isMobile = () => window.matchMedia('(max-width: 768px)').matches;\nexport default handleAction(windowResize, isMobile, isMobile());\n","import { handleAction } from 'redux-actions';\nimport { toggleSidebar } from '../../actions/ui/sidebar';\n\nexport default handleAction(toggleSidebar, state => !state, false);\n","import { handleActions, combineActions } from 'redux-actions';\nimport {\n  changeSettingsCurrency,\n  updateExchangeRate,\n  updateExchangeRateSuccess,\n  updateExchangeRateFailure\n} from '../../actions/settings';\n\nexport default handleActions(\n  {\n    [combineActions(changeSettingsCurrency, updateExchangeRate)]: state => ({\n      ...state,\n      isExchangeLoading: true\n    }),\n    [combineActions(\n      updateExchangeRateSuccess,\n      updateExchangeRateFailure\n    )]: state => ({\n      ...state,\n      isExchangeLoading: false\n    })\n  },\n  { isExchangeLoading: false }\n);\n","import { handleActions } from 'redux-actions';\nimport {\n  dismissSyncWarning,\n  setPendingChangesFlag,\n  syncRequest,\n  syncSuccess,\n  syncFailure\n} from '../../actions/ui/sync';\n\nexport default handleActions(\n  {\n    [syncRequest]: state => ({ ...state, isRunning: true }),\n    [syncSuccess]: state => ({\n      ...state,\n      isRunning: false,\n      hasPendingChanges: false\n    }),\n    [syncFailure]: state => ({ isRunning: false }),\n    [dismissSyncWarning]: state => ({ ...state, isWarningVisible: false }),\n    [setPendingChangesFlag]: state => ({ ...state, hasPendingChanges: true })\n  },\n  {\n    isRunning: false,\n    isWarningVisible: true,\n    hasPendingChanges: false\n  }\n);\n","import { combineReducers } from 'redux';\nimport form from './form';\nimport report from './report';\nimport transaction from './transaction';\nimport dataImport from './dataImport';\nimport isMobile from './isMobile';\nimport isSidebarOpen from './isSidebarOpen';\nimport settings from './settings';\nimport sync from './sync';\n\nexport default combineReducers({\n  form,\n  report,\n  transaction,\n  dataImport,\n  settings,\n  sync,\n  isMobile,\n  isSidebarOpen\n});\n","import pick from 'lodash/pick';\nimport { handleActions } from 'redux-actions';\nimport { getType } from 'typesafe-actions';\nimport {\n  loadSettingsSuccess,\n  changeSettingsCurrency,\n  updateExchangeRateSuccess,\n  toggleSectionCollapse,\n  completeSetup\n} from '../actions/settings';\nimport { signOutSuccess } from 'features/user/state/ui/SignOut.action';\nimport Currency from '../entities/Currency';\n\nconst initialState = {\n  isLoaded: false,\n  isSetupComplete: false,\n  currency: { base: Currency.defaultBase, secondary: [] },\n  exchangeRate: { [Currency.defaultBase]: 1.0 },\n  collapsedSections: []\n};\n\nexport default handleActions(\n  {\n    [loadSettingsSuccess]: (state, { payload }) => ({\n      ...state,\n      isLoaded: true,\n      ...pick(payload, Object.keys(state))\n    }),\n    [changeSettingsCurrency]: (state, { payload }) => {\n      let { base, secondary } = payload;\n      if (secondary.includes(base)) {\n        secondary = secondary\n          .concat(state.currency.base)\n          .filter(code => code !== base);\n      }\n\n      return { ...state, currency: { base, secondary } };\n    },\n    [updateExchangeRateSuccess]: (state, { payload }) => ({\n      ...state,\n      exchangeRate: payload\n    }),\n    [toggleSectionCollapse]: (state, { payload }) => ({\n      ...state,\n      collapsedSections: state.collapsedSections.includes(payload)\n        ? state.collapsedSections.filter(section => section !== payload)\n        : state.collapsedSections.concat(payload)\n    }),\n    [completeSetup]: state => ({ ...state, isSetupComplete: true }),\n    [getType(signOutSuccess)]: () => initialState\n  },\n  initialState\n);\n","import { createAction } from 'typesafe-actions';\n\nexport const setDemoUser = createAction('user/SET_DEMO_USER');\nexport const signInSuccess = createAction('user/SIGN_IN_SUCCESS');\n","import { ActionType, getType } from 'typesafe-actions';\nimport * as SignIn from './SignIn.action';\nimport { AsyncOperationStateT } from 'typings/async';\n\nexport interface SignInStateT {\n  email: string;\n  code: string;\n  error?: string;\n  sendCodeStatus?: AsyncOperationStateT;\n  verifyCodeStatus?: AsyncOperationStateT;\n}\n\nexport type SignInActionT = ActionType<typeof SignIn>;\n\nconst initialState: SignInStateT = {\n  email: '',\n  code: ''\n};\n\nexport default (state = initialState, action: SignInActionT): SignInStateT => {\n  switch (action.type) {\n    case getType(SignIn.changeEmail):\n      return { ...state, email: action.payload };\n    case getType(SignIn.changeCode):\n      return { ...state, code: action.payload };\n    case getType(SignIn.sendCode):\n      return { ...state, sendCodeStatus: 'REQUEST' };\n    case getType(SignIn.sendCodeSuccess):\n      return { ...state, sendCodeStatus: 'SUCCESS' };\n    case getType(SignIn.sendCodeFailure):\n      return {\n        ...state,\n        sendCodeStatus: 'FAILURE',\n        error: action.payload.message\n      };\n    case getType(SignIn.verifyCode):\n      return { ...state, verifyCodeStatus: 'REQUEST' };\n    case getType(SignIn.verifyCodeSuccess):\n      return { ...state, verifyCodeStatus: 'SUCCESS' };\n    case getType(SignIn.verifyCodeFailure):\n      return {\n        ...state,\n        verifyCodeStatus: 'FAILURE',\n        error: action.payload.message\n      };\n    default:\n      return state;\n  }\n};\n","import { WebAuth } from 'auth0-js';\n/**\n * @see https://auth0.com/docs/connections/passwordless/spa-email-code/v8\n */\nconst auth0 = new WebAuth({\n  domain: process.env.REACT_APP_AUTH_DOMAIN,\n  clientID: process.env.REACT_APP_AUTH_CLIENT_ID,\n  redirectUri: process.env.REACT_APP_AUTH_REDIRECT,\n  responseType: 'token'\n});\n\nexport default {\n  sendCode,\n  verifyCode,\n  parseHash,\n  getUserInfo\n};\n\nfunction sendCode(email) {\n  return new Promise((resolve, reject) => {\n    auth0.passwordlessStart(\n      {\n        connection: 'email',\n        send: 'code',\n        email\n      },\n      (error, result) => (error ? reject(error) : resolve(result))\n    );\n  });\n}\n\nfunction verifyCode(email, verificationCode) {\n  return new Promise((resolve, reject) => {\n    auth0.passwordlessLogin(\n      {\n        connection: 'email',\n        email,\n        verificationCode\n      },\n      (error, result) => (error ? reject(error) : resolve(result))\n    );\n  });\n}\n\nfunction parseHash() {\n  return new Promise((resolve, reject) => {\n    auth0.parseHash((error, authResult) => {\n      if (error) return reject(error);\n\n      resolve(authResult.accessToken);\n    });\n  });\n}\n\nfunction getUserInfo(accessToken) {\n  return new Promise((resolve, reject) => {\n    auth0.client.userInfo(accessToken, (error, userInfo) => {\n      if (error) return reject(error);\n\n      resolve({ accessToken, couchDB: userInfo.couchDB });\n    });\n  });\n}\n","import { RootStateT } from 'reducers';\n\nexport const getSignInEmail = ({ user }: RootStateT) => user.ui.signIn.email;\nexport const getSignInCode = ({ user }: RootStateT) => user.ui.signIn.code;\n","import { TransactionStateT, TransationKindT } from 'entities/Transaction';\n\nconst { Transfer } = TransationKindT;\n\nexport interface AccountMutationT {\n  accountId: string;\n  currency: string;\n  amount: number;\n}\n\n/**\n * Get all necessary accounts balance mutations for given transaction change.\n */\nexport default function getAccountsMutations(\n  prev?: TransactionStateT,\n  next?: TransactionStateT\n): AccountMutationT[] {\n  if (!prev && next) {\n    return createTransaction(next);\n  } else if (prev && !next) {\n    return removeTransaction(prev);\n  } else if (prev && next) {\n    return [...removeTransaction(prev), ...createTransaction(next)];\n  } else {\n    return [];\n  }\n}\n\nfunction createTransaction(transaction: TransactionStateT): AccountMutationT[] {\n  const mutations: AccountMutationT[] = [];\n  if (\n    transaction.kind === Transfer &&\n    transaction.accountId === transaction.linkedAccountId &&\n    transaction.currency === transaction.linkedCurrency\n  ) {\n    return mutations;\n  }\n\n  mutations.push({\n    accountId: transaction.accountId,\n    currency: transaction.currency,\n    amount: transaction.amount * (transaction.kind === Transfer ? -1 : 1)\n  });\n\n  if (\n    transaction.kind === Transfer &&\n    transaction.linkedAccountId &&\n    transaction.linkedCurrency &&\n    transaction.linkedAmount\n  ) {\n    mutations.push({\n      accountId: transaction.linkedAccountId,\n      currency: transaction.linkedCurrency,\n      amount: transaction.linkedAmount\n    });\n  }\n\n  return mutations;\n}\n\nfunction removeTransaction(transaction: TransactionStateT): AccountMutationT[] {\n  const mutations = [];\n  mutations.push({\n    accountId: transaction.accountId,\n    currency: transaction.currency,\n    amount: transaction.amount * (transaction.kind === Transfer ? 1 : -1)\n  });\n  if (\n    transaction.kind === Transfer &&\n    transaction.linkedAccountId &&\n    transaction.linkedCurrency &&\n    transaction.linkedAmount\n  ) {\n    mutations.push({\n      accountId: transaction.linkedAccountId,\n      currency: transaction.linkedCurrency,\n      amount: transaction.linkedAmount * -1\n    });\n  }\n\n  return mutations;\n}\n","import { tagsDB, remoteTagsDB, destroyTagsDB } from './pouchdb';\n\nexport default {\n  sync,\n  load,\n  updateUsage,\n  destroy\n};\n\nasync function sync(readOnly = false) {\n  let hasChanges = false;\n  if (!remoteTagsDB()) return hasChanges;\n\n  const from = await tagsDB().replicate.from(remoteTagsDB());\n  if (from.docs_written > 0) hasChanges = true;\n  if (readOnly) return hasChanges;\n\n  await tagsDB().replicate.to(remoteTagsDB());\n\n  return hasChanges;\n}\n\nfunction destroy() {\n  return destroyTagsDB();\n}\n\nfunction load(kind) {\n  return tagsDB()\n    .allDocs({\n      include_docs: true,\n      start_key: `t${kind}`,\n      end_key: `t${kind}\\uffff`\n    })\n    .then(response =>\n      response.rows.map(row => ({\n        tag: row.doc._id.split('/')[1],\n        usage: row.doc.usage\n      }))\n    )\n    .then(docs => docs.sort((a, b) => b.usage - a.usage))\n    .then(docs => docs.map(doc => doc.tag));\n}\n\nfunction updateUsage(kind, tag, delta) {\n  const id = `t${kind}/${tag}`;\n  return tagsDB()\n    .get(id)\n    .then(doc =>\n      tagsDB().put({ ...doc, usage: parseInt(doc.usage, 10) + delta })\n    )\n    .catch(err => {\n      if (err.status !== 404) throw err;\n\n      return tagsDB().put({ _id: id, usage: 1 });\n    });\n}\n","/**\n * Return new set containing set difference of given left and right sets.\n *\n * @param {Set} left\n * @param {Set} right\n * @return {Set}\n */\nexport default function difference(left, right) {\n  const diff = new Set();\n  for (const item of left) {\n    if (!right.has(item)) diff.add(item);\n  }\n\n  return diff;\n}\n","import { takeLatest, call, put } from 'redux-saga/effects';\nimport {\n  loadTags,\n  loadExpenseTagsSuccess,\n  loadIncomeTagsSuccess\n} from '../actions/entities/tags';\nimport { TransationKindT } from '../entities/Transaction';\nimport TagsStorage from '../util/storage/tags';\nimport difference from '../util/SetDifference';\n\nconst { Expense, Income } = TransationKindT;\n\nexport function* loadTagsSaga() {\n  const expenseTags = yield call(TagsStorage.load, Expense);\n  yield put(loadExpenseTagsSuccess(expenseTags));\n  const incomeTags = yield call(TagsStorage.load, Income);\n  yield put(loadIncomeTagsSuccess(incomeTags));\n}\n\nexport function* updateTagsUsage(prev, next) {\n  const prevTags = new Set((prev && prev.tags) || []);\n  const nextTags = new Set((next && next.tags) || []);\n\n  for (const newTag of difference(nextTags, prevTags)) {\n    yield call(TagsStorage.updateUsage, next.kind, newTag, 1);\n  }\n  for (const oldTag of difference(prevTags, nextTags)) {\n    yield call(TagsStorage.updateUsage, prev.kind, oldTag, -1);\n  }\n}\n\nexport default [takeLatest(loadTags, loadTagsSaga)];\n","import { takeLatest, call, put, select } from 'redux-saga/effects';\nimport {\n  loadFilterTransactions,\n  loadFilterTransactionsSuccess,\n  loadRecentTransactions,\n  loadRecentTransactionsSuccess,\n  saveTransaction,\n  saveTransactionSuccess,\n  removeTransaction,\n  removeTransactionSuccess\n} from '../actions/entities/transactions';\nimport {\n  changeFilterDate,\n  applyFilters\n} from '../actions/ui/transaction/filter';\nimport {\n  fillInTransactionForm,\n  resetTransactionForm\n} from '../actions/ui/form/transaction';\nimport { getDefaultState } from '../selectors/ui/form/transaction';\nimport { getFilters } from '../selectors/ui/transaction/filter';\nimport getAccountsMutations from '../entities/Transaction/AccountMutations';\nimport { updateAccountBalanceSaga } from './accounts';\nimport { updateTagsUsage } from './tags';\nimport TransactionsStorage from '../util/storage/transactions';\n\nexport function* resetTransactionFormSaga() {\n  const initialData = yield select(getDefaultState);\n  yield put(fillInTransactionForm(initialData));\n}\n\nexport function* loadFilterTransactionsSaga() {\n  const filters = yield select(getFilters);\n  const transactions = yield call(TransactionsStorage.loadFiltered, filters);\n  yield put(loadFilterTransactionsSuccess(transactions));\n}\n\nexport function* loadRecentTransactionsSaga() {\n  const transactions = yield call(TransactionsStorage.loadRecent);\n  yield put(loadRecentTransactionsSuccess(transactions));\n}\n\nexport function* removeTransactionSaga(action) {\n  const prev = yield call(TransactionsStorage.remove, action.payload);\n\n  yield call(updateAccountsBalance, prev);\n  yield call(updateTagsUsage, prev);\n  yield call(loadRecentTransactionsSaga);\n  yield call(loadFilterTransactionsSaga);\n  yield call(resetTransactionFormSaga);\n  yield put(removeTransactionSuccess());\n}\n\nexport function* saveTransactionSaga(action) {\n  const next = action.payload;\n  const prev = yield call(TransactionsStorage.remove, next.id);\n  next.id = `T${next.date}-${Date.now()}`;\n\n  yield call(TransactionsStorage.save, next);\n  yield call(updateAccountsBalance, prev, next);\n  yield call(updateTagsUsage, prev, next);\n  yield call(loadRecentTransactionsSaga);\n  yield call(loadFilterTransactionsSaga);\n  yield call(resetTransactionFormSaga);\n  yield put(saveTransactionSuccess());\n}\n\nfunction* updateAccountsBalance(prev, next) {\n  for (const mutation of getAccountsMutations(prev, next)) {\n    yield call(updateAccountBalanceSaga, mutation);\n  }\n}\n\nexport default [\n  takeLatest(resetTransactionForm, resetTransactionFormSaga),\n  takeLatest(loadFilterTransactions, loadFilterTransactionsSaga),\n  takeLatest(changeFilterDate, loadFilterTransactionsSaga),\n  takeLatest(applyFilters, loadFilterTransactionsSaga),\n  takeLatest(loadRecentTransactions, loadRecentTransactionsSaga),\n  takeLatest(removeTransaction, removeTransactionSaga),\n  takeLatest(saveTransaction, saveTransactionSaga)\n];\n","import { accountsDB, remoteAccountsDB, destroyAccountsDB } from './pouchdb';\nimport {\n  storageToState,\n  stateToStorage,\n  mutateBalance as mutateAccountBalance\n} from '../../entities/Account';\n\nexport default {\n  sync,\n  loadAll,\n  save,\n  archive,\n  mutateBalance,\n  remove,\n  destroy\n};\n\nasync function sync(readOnly = false) {\n  if (!remoteAccountsDB()) return;\n  let accounts;\n\n  const from = await accountsDB().replicate.from(remoteAccountsDB());\n  if (from.docs_written > 0) {\n    accounts = await loadAll();\n    updateLastSyncedBalance(accounts);\n  }\n\n  if (readOnly) return;\n\n  const to = await accountsDB().replicate.to(remoteAccountsDB());\n  if (to.docs_written > 0) {\n    accounts = await loadAll();\n    updateLastSyncedBalance(accounts);\n  }\n}\n\nfunction destroy() {\n  return destroyAccountsDB();\n}\n\nfunction loadAll() {\n  return accountsDB()\n    .allDocs({\n      include_docs: true,\n      conflicts: true,\n      startkey: 'A',\n      endkey: 'A\\uffff'\n    })\n    .then(response => Promise.all(response.rows.map(resolveConflicts)))\n    .then(docs => docs.map(storageToState));\n}\n\nfunction save(account) {\n  return accountsDB()\n    .get(account.id)\n    .then(doc => accountsDB().put({ ...doc, ...stateToStorage(account) }))\n    .catch(err => {\n      if (err.status !== 404) throw err;\n      return accountsDB().put({\n        _id: account.id,\n        ...stateToStorage(account)\n      });\n    });\n}\n\nfunction archive(accountId) {\n  return accountsDB()\n    .get(accountId)\n    .then(doc => accountsDB().put({ ...doc, archived: true }));\n}\n\nfunction mutateBalance({ accountId, currency, amount }) {\n  return accountsDB()\n    .get(accountId)\n    .then(doc => accountsDB().put(mutateAccountBalance(doc, currency, amount)))\n    .then(({ rev }) => accountsDB().get(accountId, rev))\n    .then(doc => storageToState(doc));\n}\n\nfunction remove(accountId) {\n  return accountsDB()\n    .get(accountId)\n    .then(doc => accountsDB().put({ ...doc, _deleted: true }))\n    .catch(err => {\n      if (err.status !== 404) throw err;\n      return true;\n    });\n}\n\nfunction updateLastSyncedBalance(accounts) {\n  accounts.forEach(account => {\n    localStorage.setItem(account.id, JSON.stringify(account.balance));\n  });\n}\n\nasync function resolveConflicts(row) {\n  if (!row.doc._conflicts) return row.doc;\n\n  const lastSyncedBalance = JSON.parse(localStorage.getItem(row.doc._id));\n  const conflictedBalances = await Promise.all(\n    row.doc._conflicts.map(async rev =>\n      accountsDB()\n        .get(row.doc._id, { rev })\n        .then(doc => doc.balance)\n    )\n  );\n  conflictedBalances.push(row.doc.balance);\n  row.doc.balance = resolveBalance(lastSyncedBalance, conflictedBalances);\n\n  return Promise.all(\n    row.doc._conflicts.map(async rev => accountsDB().remove(row.doc._id, rev))\n  )\n    .then(() => accountsDB().put(row.doc))\n    .then(() => row.doc);\n}\n\nfunction resolveBalance(lastSynced, conflictedBalances) {\n  return Object.keys(lastSynced).reduce((balance, code) => {\n    balance[code] =\n      lastSynced[code] +\n      conflictedBalances.reduce(\n        (delta, conflicted) => delta + (conflicted[code] - lastSynced[code]),\n        0\n      );\n    return balance;\n  }, {});\n}\n","import { takeLatest, call, put, select } from 'redux-saga/effects';\nimport {\n  loadAccounts,\n  loadAccountsSuccess,\n  saveAccount,\n  saveAccountSuccess,\n  saveAccountFailure,\n  updateAccount,\n  removeAccount,\n  removeAccountStart,\n  removeAccountItemProcessed,\n  removeAccountFailure,\n  removeAccountSuccess\n} from '../actions/entities/accounts';\nimport { getForm } from '../selectors/ui/form/transaction';\nimport {\n  resetTransactionFormSaga,\n  removeTransactionSaga,\n  saveTransactionSaga\n} from './transactions';\nimport {\n  removeTransaction,\n  saveTransaction\n} from '../actions/entities/transactions';\nimport AccountsStorage from '../util/storage/accounts';\nimport TransactionsStorage from '../util/storage/transactions';\nimport { DeleteStrategyT } from '../entities/Account';\n\nexport function* loadAccountsSaga() {\n  const accounts = yield call(AccountsStorage.loadAll);\n  yield put(loadAccountsSuccess(accounts));\n  const transactionForm = yield select(getForm);\n  if (!transactionForm.accountId && accounts.length > 0) {\n    yield resetTransactionFormSaga();\n  }\n}\n\nexport function* saveAccountSaga(action) {\n  const account = action.payload;\n  try {\n    yield call(AccountsStorage.save, account);\n    yield resetTransactionFormSaga();\n    yield put(saveAccountSuccess());\n  } catch (error) {\n    yield put(saveAccountFailure(account.id));\n  }\n}\n\nexport function* updateAccountBalanceSaga(mutation) {\n  const account = yield call(AccountsStorage.mutateBalance, mutation);\n  yield put(updateAccount(account));\n}\n\nexport function* removeAccountSaga({ payload }) {\n  try {\n    const deleteStrategies = {\n      [DeleteStrategyT.Archive]: deleteStrategyArchive,\n      [DeleteStrategyT.Cleanup]: deleteStrategyCleanup,\n      [DeleteStrategyT.Move]: deleteStrategyMove\n    };\n    const strategy = deleteStrategies[payload.strategy];\n    if (strategy) yield strategy(payload.id, payload.moveTo);\n  } catch (error) {\n    yield put(removeAccountFailure(error.message));\n  }\n}\n\nfunction* deleteStrategyArchive(accountId) {\n  yield call(AccountsStorage.archive, accountId);\n  yield put(removeAccountSuccess(accountId));\n}\n\nfunction* deleteStrategyCleanup(accountId) {\n  const transactions = yield call(TransactionsStorage.loadFiltered, {\n    accounts: [accountId]\n  });\n  if (transactions.length > 0) {\n    yield put(removeAccountStart(transactions.length));\n\n    for (const [index, tx] of transactions.entries()) {\n      yield removeTransactionSaga(removeTransaction(tx.id));\n      yield put(removeAccountItemProcessed(index));\n    }\n  }\n\n  yield call(AccountsStorage.remove, accountId);\n  yield put(removeAccountSuccess(accountId));\n}\n\nfunction* deleteStrategyMove(accountId, moveTo) {\n  const transactions = yield call(TransactionsStorage.loadFiltered, {\n    accounts: [accountId]\n  });\n  if (transactions.length > 0) {\n    yield put(removeAccountStart(transactions.length));\n\n    for (const [index, tx] of transactions.entries()) {\n      yield saveTransactionSaga(\n        saveTransaction({\n          ...tx,\n          accountId: tx.accountId === accountId ? moveTo : tx.accountId,\n          linkedAccountId:\n            tx.linkedAccountId === accountId ? moveTo : tx.linkedAccountId\n        })\n      );\n      yield put(removeAccountItemProcessed(index));\n    }\n  }\n\n  yield call(AccountsStorage.remove, accountId);\n  yield put(removeAccountSuccess(accountId));\n}\n\nexport default [\n  takeLatest(loadAccounts, loadAccountsSaga),\n  takeLatest(saveAccount, saveAccountSaga),\n  takeLatest(removeAccount, removeAccountSaga),\n  takeLatest(removeAccountSuccess, resetTransactionFormSaga)\n];\n","import { takeLatest, call, put, select } from 'redux-saga/effects';\nimport {\n  sync,\n  syncRequest,\n  syncSuccess,\n  syncFailure,\n  setPendingChangesFlag\n} from '../actions/ui/sync';\nimport {\n  saveAccountSuccess,\n  removeAccountSuccess\n} from '../actions/entities/accounts';\nimport {\n  saveTransactionSuccess,\n  removeTransactionSuccess\n} from '../actions/entities/transactions';\nimport { loadAccountsSaga } from './accounts';\nimport { loadTagsSaga } from './tags';\nimport { loadRecentTransactionsSaga } from './transactions';\nimport { isDemoUser } from 'features/user/state/User.selector';\nimport AccountsStorage from '../util/storage/accounts';\nimport TransactionsStorage from '../util/storage/transactions';\nimport TagsStorage from '../util/storage/tags';\n\nexport function* syncSaga() {\n  yield put(syncRequest());\n  try {\n    const readOnly = yield select(isDemoUser);\n    yield call(AccountsStorage.sync, readOnly);\n    yield call(TransactionsStorage.sync, readOnly);\n    yield call(TagsStorage.sync, readOnly);\n    yield loadRecentTransactionsSaga();\n    yield loadAccountsSaga();\n    yield loadTagsSaga();\n    yield put(syncSuccess());\n  } catch (error) {\n    yield put(syncFailure(error));\n  }\n}\n\nexport function* setPendingChangesFlagSaga() {\n  yield put(setPendingChangesFlag());\n}\n\nexport default [\n  takeLatest(sync, syncSaga),\n  takeLatest(saveAccountSuccess, setPendingChangesFlagSaga),\n  takeLatest(removeAccountSuccess, setPendingChangesFlagSaga),\n  takeLatest(saveTransactionSuccess, setPendingChangesFlagSaga),\n  takeLatest(removeTransactionSuccess, setPendingChangesFlagSaga)\n];\n","import fetch from 'isomorphic-fetch';\n\nexport function fetchExchangeRates(base, target) {\n  if (!target.includes(base)) target.push(base);\n  const exchangeServiceUrl = process.env.REACT_APP_XCHANGE_URL;\n  const pairs = target.map(code => `${base}${code}`);\n\n  return fetch(`${exchangeServiceUrl}?pairs=${pairs.join(',')}`)\n    .then(body => body.json())\n    .then(response =>\n      response.rates.reduce((result, row) => {\n        result[row.id.substring(3)] = parseFloat(row['rate']);\n        return result;\n      }, {})\n    );\n}\n","import union from 'lodash/union';\nimport pick from 'lodash/pick';\nimport isEqual from 'lodash/isEqual';\nimport { settingsDB, remoteSettingsDB, destroySettingsDB } from './pouchdb';\nimport { fetchExchangeRates } from '../currency';\nimport Currency from '../../entities/Currency';\n\nexport default {\n  load,\n  save,\n  saveLocal,\n  destroy\n};\n\nconst defaultLocalSettings = {\n  _id: '_local/settings',\n  collapsedSections: []\n};\nconst defaultSettings = {\n  _id: 'settings',\n  currency: { base: Currency.defaultBase, secondary: [] },\n  exchangeRate: { [Currency.defaultBase]: 1 }\n};\n\nfunction destroy() {\n  return destroySettingsDB();\n}\n\nasync function save(settings) {\n  if (remoteSettingsDB()) {\n    await remoteSettingsDB()\n      .get('settings')\n      .then(remote => remote, err => defaultSettings)\n      .then(doc => remoteSettingsDB().put({ ...doc, ...settings }))\n      .catch(error => {\n        if (error.status !== 403) throw error;\n      });\n  }\n\n  return settingsDB()\n    .get('settings')\n    .then(local => local, err => defaultSettings)\n    .then(doc => settingsDB().put({ ...doc, ...settings }));\n}\n\nfunction saveLocal(settings) {\n  return settingsDB()\n    .get('_local/settings')\n    .then(doc => doc, err => defaultLocalSettings)\n    .then(doc => settingsDB().put({ ...doc, ...settings }));\n}\n\nfunction load() {\n  return settingsDB()\n    .get('_local/settings')\n    .then(local => local, err => defaultLocalSettings)\n    .then(local => mergeLocalWithSyncedSettings(local));\n}\n\nasync function mergeLocalWithSyncedSettings(local) {\n  return settingsDB()\n    .get('settings')\n    .then(settings => settings, err => defaultSettings)\n    .then(settings => syncSettings(settings))\n    .then(settings => ({ ...settings, ...local }));\n}\n\nasync function syncSettings(settings) {\n  if (!remoteSettingsDB()) return settings;\n\n  try {\n    const remote = await remoteSettingsDB().get('settings');\n    const base = remote.currency.base;\n    const secondary = union(\n      settings.currency.base,\n      settings.currency.secondary,\n      remote.currency.secondary\n    ).filter(code => code !== base);\n\n    const synced = {\n      currency: { base, secondary },\n      exchangeRate:\n        settings.currency.base === base\n          ? { ...settings.exchangeRate, ...remote.exchangeRate }\n          : await fetchExchangeRates(base, secondary),\n      isSetupComplete: remote.isSetupComplete\n    };\n\n    if (!isEqual(pick(settings, Object.keys(synced)), synced)) {\n      await save(synced);\n    }\n\n    return synced;\n  } catch (error) {\n    return settings;\n  }\n}\n","import { takeLatest, call, put, select } from 'redux-saga/effects';\nimport union from 'lodash/union';\nimport {\n  loadSettingsSuccess,\n  changeSettingsCurrency,\n  updateExchangeRate,\n  updateExchangeRateSuccess,\n  updateExchangeRateFailure,\n  completeSetup,\n  toggleSectionCollapse\n} from '../actions/settings';\nimport {\n  getCollapsedSections,\n  getBaseCurrency,\n  getSecondaryCurrency\n} from '../selectors/settings';\nimport { getAccountsCurrencyList } from '../selectors/entities/accounts';\nimport SettingsStorage from '../util/storage/settings';\nimport { fetchExchangeRates } from '../util/currency';\n\nexport function* loadSetting() {\n  const settings = yield call(SettingsStorage.load);\n  yield put(loadSettingsSuccess(settings));\n}\n\nexport function* updateCurrencySaga() {\n  const base = yield select(getBaseCurrency);\n  const secondary = yield select(getSecondaryCurrency);\n  const used = yield select(getAccountsCurrencyList);\n  try {\n    const exchangeRate = yield call(\n      fetchExchangeRates,\n      base,\n      union(secondary, used)\n    );\n    yield put(updateExchangeRateSuccess(exchangeRate));\n    yield call(SettingsStorage.save, {\n      currency: { base, secondary },\n      exchangeRate\n    });\n  } catch (error) {\n    yield put(updateExchangeRateFailure(error));\n  }\n}\n\nexport function* completeSetupSaga() {\n  yield call(SettingsStorage.save, { isSetupComplete: true });\n}\n\nexport function* saveCollapsedSectionsSaga() {\n  const collapsedSections = yield select(getCollapsedSections);\n  yield call(SettingsStorage.saveLocal, { collapsedSections });\n}\n\nexport default [\n  takeLatest(changeSettingsCurrency, updateCurrencySaga),\n  takeLatest(updateExchangeRate, updateCurrencySaga),\n  takeLatest(completeSetup, completeSetupSaga),\n  takeLatest(toggleSectionCollapse, saveCollapsedSectionsSaga)\n];\n","import { call, put } from 'redux-saga/effects';\nimport { syncSaga } from 'sagas/sync';\nimport * as user from './User.action';\n\nexport function* isDemoUser() {\n  if (window.location.hostname === process.env.REACT_APP_DEMO_HOST) {\n    const userInfo = yield call([localStorage, 'getItem'], 'userInfo');\n    if (!userInfo) {\n      yield call(\n        [localStorage, 'setItem'],\n        'userInfo',\n        JSON.stringify({\n          couchDB: {\n            accounts: process.env.REACT_APP_DEMO_DB_ACCOUNTS,\n            settings: process.env.REACT_APP_DEMO_DB_SETTINGS,\n            tags: process.env.REACT_APP_DEMO_DB_TAGS,\n            transactions: process.env.REACT_APP_DEMO_DB_TRANSACTIONS\n          }\n        })\n      );\n      yield syncSaga();\n    }\n    yield put(user.setDemoUser());\n    yield put(user.signInSuccess());\n  }\n}\n\nexport function* isUserLoggedIn() {\n  const userInfo = yield call([localStorage, 'getItem'], 'userInfo');\n  if (userInfo) yield put(user.signInSuccess());\n}\n","import { takeLatest, select, call, put } from 'redux-saga/effects';\nimport { getType } from 'typesafe-actions';\nimport Auth from 'util/auth';\nimport { getSignInEmail, getSignInCode } from './SignIn.selector';\nimport * as SignIn from './SignIn.action';\nimport { syncSaga } from 'sagas/sync';\nimport { loadSetting } from 'sagas/settings';\nimport { isUserLoggedIn } from 'features/user/state/User.saga';\n\nexport function* sendCodeSaga() {\n  const email = yield select(getSignInEmail);\n  try {\n    yield call(Auth.sendCode, email);\n    yield put(SignIn.sendCodeSuccess());\n  } catch (error) {\n    yield put(SignIn.sendCodeFailure(error));\n  }\n}\n\nexport function* verifyCodeSaga() {\n  const email = yield select(getSignInEmail);\n  const code = yield select(getSignInCode);\n  try {\n    yield call(Auth.verifyCode, email, code);\n    yield put(SignIn.verifyCodeSuccess());\n  } catch (error) {\n    yield put(SignIn.verifyCodeFailure(error));\n  }\n}\n\nexport function* finishAuthSaga() {\n  const accessToken = yield call(Auth.parseHash);\n  const userInfo = yield call(Auth.getUserInfo, accessToken);\n  yield call([localStorage, 'setItem'], 'userInfo', JSON.stringify(userInfo));\n\n  yield loadSetting();\n  yield syncSaga();\n  yield isUserLoggedIn();\n}\n\nexport default [\n  takeLatest(getType(SignIn.sendCode), sendCodeSaga),\n  takeLatest(getType(SignIn.verifyCode), verifyCodeSaga),\n  takeLatest(getType(SignIn.finishAuth), finishAuthSaga)\n];\n","import { takeLatest, call, put } from 'redux-saga/effects';\nimport { getType } from 'typesafe-actions';\nimport { signOut, signOutSuccess, signOutFailure } from './SignOut.action';\nimport { loadSetting } from 'sagas/settings';\nimport { isDemoUser } from 'features/user/state/User.saga';\nimport AccountsStorage from 'util/storage/accounts';\nimport SettingsStorage from 'util/storage/settings';\nimport TagsStorage from 'util/storage/tags';\nimport TransactionsStorage from 'util/storage/transactions';\n\nexport function* signOutSaga() {\n  try {\n    yield call(AccountsStorage.destroy);\n    yield call(SettingsStorage.destroy);\n    yield call(TagsStorage.destroy);\n    yield call(TransactionsStorage.destroy);\n    yield call([localStorage, 'clear']);\n\n    yield put(signOutSuccess());\n    yield isDemoUser();\n    yield loadSetting();\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport default [takeLatest(getType(signOut), signOutSaga)];\n","import { combineReducers } from 'redux';\nimport SignInReducer, { SignInStateT, SignInActionT } from './SignIn.reducer';\nimport SignOutReducer, {\n  SignOutStateT,\n  SignOutActionT\n} from './SignOut.reducer';\nimport SignInSaga from './SignIn.saga';\nimport SignOutSaga from './SignOut.saga';\n\nexport interface UserUiStateT {\n  signIn: SignInStateT;\n  signOut: SignOutStateT;\n}\n\nexport type UserUiActionT = SignInActionT & SignOutActionT;\n\nexport const UserUiReducer = combineReducers<UserUiStateT, UserUiActionT>({\n  signIn: SignInReducer,\n  signOut: SignOutReducer\n});\n\nexport const UserUiSaga = [...SignInSaga, ...SignOutSaga];\n","import { ActionType, getType } from 'typesafe-actions';\nimport * as actions from './SignOut.action';\nimport { AsyncOperationStateT } from 'typings/async';\n\nexport interface SignOutStateT {\n  signOutState?: AsyncOperationStateT;\n}\n\nexport type SignOutActionT = ActionType<typeof actions>;\n\nexport default (\n  state: SignOutStateT = {},\n  action: SignOutActionT\n): SignOutStateT => {\n  switch (action.type) {\n    case getType(actions.signOut):\n      return { ...state, signOutState: 'REQUEST' };\n    case getType(actions.signOutSuccess):\n      return { ...state, signOutState: 'SUCCESS' };\n    case getType(actions.signOutFailure):\n      return { ...state, signOutState: 'FAILURE' };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { ActionType, getType } from 'typesafe-actions';\nimport * as user from './User.action';\nimport { UserUiReducer, UserUiStateT, UserUiActionT } from './ui';\n\nexport interface UserStateT {\n  readonly isDemoUser: boolean;\n  readonly isSignedIn: boolean;\n  readonly ui: UserUiStateT;\n}\n\nexport type UserActionT = ActionType<typeof user> & UserUiActionT;\n\nexport default combineReducers<UserStateT, UserActionT>({\n  isDemoUser: (state = false, action) => {\n    return action.type === getType(user.setDemoUser) ? true : state;\n  },\n  isSignedIn: (state = false, action) => {\n    return action.type === getType(user.signInSuccess) ? true : state;\n  },\n  ui: UserUiReducer\n});\n","import { combineReducers } from 'redux';\nimport entities from './entities';\nimport ui from './ui';\nimport settings from './settings';\nimport user, { UserStateT } from 'features/user/state/User.reducer';\n\nexport interface RootStateT {\n  user: UserStateT;\n}\n\nexport default combineReducers({\n  settings,\n  entities,\n  user,\n  ui\n});\n","import { takeLatest } from 'redux-saga/effects';\nimport { bootstrap } from '../actions/app';\nimport { isUserLoggedIn, isDemoUser } from 'features/user/state/User.saga';\nimport { loadSetting } from './settings';\nimport { syncSaga } from './sync';\n\nexport function* bootstrapSaga() {\n  yield isDemoUser();\n  yield isUserLoggedIn();\n  yield loadSetting();\n  yield syncSaga();\n}\n\nexport default [takeLatest(bootstrap, bootstrapSaga)];\n","import { TransationKindT } from '../entities/Transaction';\n\nconst { Expense, Transfer, Income } = TransationKindT;\n\nexport default file =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = reject;\n    reader.onload = event => {\n      try {\n        resolve(convert(event.target.result.split('\\n')));\n      } catch (error) {\n        reject(error);\n      }\n    };\n\n    reader.readAsText(file);\n  });\n\nconst SEPARATOR = ';';\nconst COLUMN = {\n  DATE: 0,\n  ACCOUNT: 1,\n  TAGS: 2,\n  AMOUNT: 3,\n  CURRENCY: 4,\n  NOTE: 5,\n  TRANSFER: 6\n};\n\nconst transactions = [];\nconst accounts = new Map();\nconst currencies = new Set();\n\nfunction convert(rows) {\n  const header = rows[0].split(SEPARATOR);\n  if (header.length !== Object.keys(COLUMN).length) {\n    throw new Error(`Invalid file format!\n    Must be a CSV with following columns:\n    date;account;tags;amount;currency;description;transfer`);\n  }\n\n  for (let line = 1; line < rows.length; line++) {\n    const row = rows[line].split(SEPARATOR);\n    if (row.length !== Object.keys(COLUMN).length) continue;\n\n    const transaction = {\n      kind: getKind(row),\n      account: getAccount(row),\n      amount: Math.abs(getAmount(row)),\n      currency: row[COLUMN.CURRENCY],\n      date: getDate(row),\n      tags: getTags(row),\n      note: row[COLUMN.NOTE]\n    };\n\n    if (transaction.kind === Transfer) {\n      const nextRow = rows[++line].split(SEPARATOR);\n\n      transaction.linkedAccount = getAccount(nextRow);\n      transaction.linkedAmount = getAmount(nextRow);\n      transaction.linkedCurrency = nextRow[COLUMN.CURRENCY];\n    }\n\n    transactions.push(transaction);\n  }\n\n  return { transactions, accounts, currencies };\n}\n\nfunction getAmount(row) {\n  return parseFloat(row[COLUMN.AMOUNT].replace(',', '.'));\n}\n\nfunction getKind(row) {\n  return row[COLUMN.TRANSFER].trim()\n    ? Transfer\n    : getAmount(row) < 0\n    ? Expense\n    : Income;\n}\n\nfunction getAccount(row) {\n  const account = row[COLUMN.ACCOUNT];\n  const currency = row[COLUMN.CURRENCY];\n  if (!accounts.has(account)) accounts.set(account, new Set());\n  const accountCurrencies = accounts.get(account);\n  if (!accountCurrencies.has(currency)) accountCurrencies.add(currency);\n  if (!currencies.has(currency)) currencies.add(currency);\n\n  return account;\n}\n\nfunction getDate(row) {\n  return row[COLUMN.DATE]\n    .split('.')\n    .reverse()\n    .join('-');\n}\n\nfunction getTags(row) {\n  return (\n    row[COLUMN.TAGS].trim() && {\n      [getKind(row)]: row[COLUMN.TAGS].replace('\\\\', '/').split('/')\n    }\n  );\n}\n","import { takeLatest, call, put, select } from 'redux-saga/effects';\nimport union from 'lodash/union';\nimport {\n  startDataImport,\n  importFileReadSuccess,\n  importLineProcessed,\n  importFailure\n} from '../actions/ui/dataImport';\nimport { changeSettingsCurrency } from '../actions/settings';\nimport { saveAccount } from '../actions/entities/accounts';\nimport { saveTransaction } from '../actions/entities/transactions';\nimport { getImportFile } from '../selectors/ui/dataImport';\nimport { getBaseCurrency, getSecondaryCurrency } from '../selectors/settings';\nimport { getAccountByName } from '../selectors/entities/accounts';\nimport { saveAccountSaga } from './accounts';\nimport { saveTransactionSaga } from './transactions';\nimport { defaultGroup, formTostate } from '../entities/Account';\nimport { formToState } from '../entities/Transaction';\nimport CsvReader from '../util/CsvReader';\n\nexport function* startDataImportSaga() {\n  try {\n    const file = yield select(getImportFile);\n    const { transactions, accounts, currencies } = yield call(CsvReader, file);\n\n    yield put(importFileReadSuccess(transactions.length - 1));\n    yield updateCurrencySettings(currencies);\n    const accountIdByName = yield mapAccountsId(accounts);\n\n    for (const [lineNr, transaction] of transactions.entries()) {\n      yield saveTransactionSaga(\n        saveTransaction(\n          formToState({\n            ...transaction,\n            accountId: accountIdByName.get(transaction.account),\n            linkedAccountId: accountIdByName.get(transaction.linkedAccount)\n          })\n        )\n      );\n      yield put(importLineProcessed(lineNr));\n    }\n  } catch (error) {\n    yield put(importFailure(error));\n  }\n}\n\n/**\n * Set currencies from import file as secondary.\n *\n * @param {Set} currencies\n */\nexport function* updateCurrencySettings(currencies) {\n  const base = yield select(getBaseCurrency);\n  const secondary = yield select(getSecondaryCurrency);\n\n  yield put(\n    changeSettingsCurrency({\n      base,\n      secondary: union(secondary, [...currencies])\n    })\n  );\n}\n\n/**\n * Map account name to account ID.\n * If no account found in local accounts, create new one.\n *\n * @param {Map} accounts name => set of currencies map\n * @return {Map} account name => account id map\n */\nexport function* mapAccountsId(accounts) {\n  const idByName = new Map();\n  for (const [name, currency] of accounts.entries()) {\n    let account = yield select(getAccountByName(name));\n    if (!account) account = yield createNewAccount(name, [...currency]);\n\n    idByName.set(name, account.id);\n  }\n\n  return idByName;\n}\n\n/**\n * Create new account.\n *\n * @param {string} name\n * @param {array} currencies list of used currencies\n * @return {object}\n */\nexport function* createNewAccount(name, currencies) {\n  const account = formTostate({\n    name,\n    group: defaultGroup,\n    balance: currencies.reduce((acc, code) => {\n      acc[code] = 0;\n      return acc;\n    }, {}),\n    currencies,\n    on_dashboard: false\n  });\n  yield saveAccountSaga(saveAccount(account));\n\n  return account;\n}\n\nexport default [takeLatest(startDataImport, startDataImportSaga)];\n","import { call, put, select, takeLatest } from 'redux-saga/effects';\nimport {\n  changeReportAccounts,\n  changeReportExcludedTags,\n  changeReportKind,\n  changeReportTimespan,\n  loadReport,\n  loadReportFailure,\n  loadReportSuccess,\n  moveReportDateBackwards,\n  moveReportDateForwards\n} from 'actions/ui/report';\nimport { transactionFilters, loadReportData } from 'entities/Report';\nimport { getNetWorth } from 'selectors/entities/accounts';\nimport { getBaseCurrency, getExchangeRate } from 'selectors/settings';\nimport { getReport } from 'selectors/ui/report';\nimport TransactionsStorage from 'util/storage/transactions';\n\nexport function* loadReportSaga() {\n  const report = yield select(getReport);\n  const base = yield select(getBaseCurrency);\n  const exchangeRate = yield select(getExchangeRate);\n  const netWorthEnd = report.data.netWorthEnd || (yield select(getNetWorth));\n  try {\n    const transactions = yield call(\n      TransactionsStorage.loadFiltered,\n      transactionFilters(report)\n    );\n    const data = yield call(\n      loadReportData,\n      report,\n      transactions,\n      exchangeRate,\n      base,\n      netWorthEnd\n    );\n    yield put(loadReportSuccess(data));\n  } catch (error) {\n    yield put(loadReportFailure(error.message));\n  }\n}\n\nexport function* refreshReportSaga() {\n  yield put(loadReport());\n}\n\nexport default [\n  takeLatest(loadReport, loadReportSaga),\n  takeLatest(changeReportKind, refreshReportSaga),\n  takeLatest(changeReportTimespan, refreshReportSaga),\n  takeLatest(changeReportAccounts, refreshReportSaga),\n  takeLatest(changeReportExcludedTags, refreshReportSaga),\n  takeLatest(moveReportDateBackwards, refreshReportSaga),\n  takeLatest(moveReportDateForwards, refreshReportSaga)\n];\n","import { UserUiSaga } from './ui';\n\nexport const UserSaga = [...UserUiSaga];\n","import { all } from 'redux-saga/effects';\nimport accounts from './accounts';\nimport bootstrap from './bootstrap';\nimport dataImport from './dataImport';\nimport report from './report';\nimport settings from './settings';\nimport sync from './sync';\nimport tags from './tags';\nimport transactions from './transactions';\nimport { UserSaga } from 'features/user/state';\n\nexport default function* rootSaga() {\n  yield all([\n    ...UserSaga,\n    ...accounts,\n    ...bootstrap,\n    ...dataImport,\n    ...report,\n    ...settings,\n    ...sync,\n    ...tags,\n    ...transactions\n  ]);\n}\n","import createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n// const enhancer = composeWithDevTools(applyMiddleware(sagaMiddleware));\n\nexport default function configureStore(initialState = {}, trackingMiddleware) {\n  // const store = createStore(rootReducer, initialState, applyMiddleware(trackingMiddleware));\n  const store = createStore(rootReducer, initialState,\n    composeWithDevTools(applyMiddleware(sagaMiddleware), applyMiddleware(trackingMiddleware))\n  );\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    module.hot.accept('../reducers', () =>\n      store.replaceReducer(require('../reducers').default)\n    );\n  }\n\n  return store;\n}\n","import moment from \"moment\";\n\nconst trackingMiddleware = tracker => () => next => action => {\n    // Expermentaly we will add from property to differecie the event tracked from redux!\n    const actionWithOrigin = Object.assign({}, action, {\n        from: 'REDUX',\n        timestamp: moment().format()\n    });\n\n    tracker.trackEvent(actionWithOrigin);\n\n    next(action);\n}\n\nexport default trackingMiddleware;","export const onAction = (event = {}, eventsHistory) => {\n    let newEvent;\n    try {\n        JSON.stringify(event, null, 2)\n        newEvent = event;\n    } catch (error) {\n        newEvent = {\n            type: event.type ? event.type : null\n        };\n    }\n\n    if (newEvent.type !== null && !excludeEventTypes.includes(newEvent.type)) {\n        console.log(\"logging event: \\n\" + JSON.stringify(newEvent, null, 2));\n        let events = JSON.parse(localStorage.getItem('events'));\n        if (events === null) {\n            events = [];\n        }\n        events.push(newEvent);\n        localStorage.setItem('events', JSON.stringify(events));\n    }\n\n    return event;\n}\n\nconst excludeEventTypes = [\n    // FUNCTIONALITIES NOT IMPLEMENTED\n    'DISMISS_SYNC_WARNING',\n    'SET_PENDING_CHANGES_FLAG',\n    'SYNC',\n    'SYNC_REQUEST',\n    'SYNC_SUCCESS',\n    'SYNC_FAILURE',\n    'SAVE_EXPORT_FILE',\n    'OPEN_IMPORT_FILE',\n    'DISCARD_IMPORT_FILE',\n    'START_DATA_IMPORT',\n    'IMPORT_FILE_READ_SUCCESS',\n    'IMPORT_LINE_PROCESSED',\n    'IMPORT_FAILURE',\n\t'CHANGE_CURRENCY',\n\t'CHANGE_LINKED_ACCOUNT',\n\t'CHANGE_LINKED_AMOUNT',\n\t'CHANGE_LINKED_CURRENCY',\n\t'CHANGE_FILTER_DATE',\n\t'TOGGLE_FILTER_CALENDAR',\n\t'CHANGE_FILTER_PAGE',\n\t'TOGGLE_FILTER_MODAL',\n\t'APPLY_FILTERS',\n\n    // LOADING\n    'BOOTSTRAP',\n    'LOAD_SETTINGS_SUCCESS',\n    'LOAD_ACCOUNTS',\n    'LOAD_ACCOUNTS_SUCCESS',\n    'LOAD_TAGS',\n    'LOAD_EXPENSE_TAGS_SUCCESS',\n    'LOAD_INCOME_TAGS_SUCCESS',\n    'LOAD_FILTER_TRANSACTIONS',\n    'LOAD_FILTER_TRANSACTIONS_SUCCESS',\n    'LOAD_RECENT_TRANSACTIONS',\n    'LOAD_RECENT_TRANSACTIONS_SUCCESS',\n    'LOAD_REPORT',\n    'LOAD_REPORT_SUCCESS',\n    'LOAD_REPORT_FAILURE',\n    'RESET_ACCOUNT_FORM',\n    'RESET_TRANSACTION_FORM',\n    'FILL_IN_ACCOUNT_FORM',\n    'FILL_IN_TRANSACTION_FORM',\n\n    // INFORMATION\n    'WINDOW_RESIZE',\n    'UPDATE_EXCHANGE_RATE_SUCCESS',\n    'UPDATE_EXCHANGE_RATE_FAILURE',\n    'SAVE_ACCOUNT_SUCCESS',\n    'SAVE_ACCOUNT_FAILURE',\n    'REMOVE_ACCOUNT_SUCCESS',\n    'REMOVE_ACCOUNT_FAILURE',\n    'SAVE_TRANSACTION_SUCCESS',\n    'REMOVE_TRANSACTION_SUCCESS',\n    'SHOW_ERROR',\n    'UPDATE_ACCOUNT',\n    'REMOVE_ACCOUNT_REQUEST',\n    'REMOVE_ACCOUNT_START',\n    'REMOVE_ACCOUNT_ITEM_PROCESSED',\n];","import values from 'lodash/values';\n\nimport * as eventListener from './eventListener';\n\nexport default [\n    ...values(eventListener)\n];","import { Tracker } from 'react-tracker'\nimport trackingListeners from './listeners';\n\nconst configureStore = () => new Tracker(trackingListeners);\n\nexport default configureStore();","import { createBrowserHistory } from 'history';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/browser';\nimport 'semantic-ui-css/semantic.min.css';\nimport Root from './containers/Root';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\nimport configureStore from './store/configureStore';\nimport { TrackerProvider } from 'react-tracker'\nimport trackingMiddleware from 'tracking/trackingMiddleware';\nimport configuredTracker from './tracking/configureTracker';\n\nSentry.init({\n  dsn: 'https://5ae855d4c1d840c1b06679123069574f@sentry.io/1335198'\n});\n\nconst store = configureStore({}, trackingMiddleware(configuredTracker));\nconst history = createBrowserHistory();\nReactDOM.render(\n  <TrackerProvider tracker={configuredTracker}>\n    <Root store={store} history={history} />\n  </TrackerProvider>,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}